{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"themes/matery/source/favicon.png","path":"favicon.png","modified":1,"renderable":1},{"_id":"themes/matery/source/css/gitment.css","path":"css/gitment.css","modified":1,"renderable":1},{"_id":"themes/matery/source/css/matery.css","path":"css/matery.css","modified":1,"renderable":1},{"_id":"themes/matery/source/css/my.css","path":"css/my.css","modified":1,"renderable":1},{"_id":"themes/matery/source/css/my-gitalk.css","path":"css/my-gitalk.css","modified":1,"renderable":1},{"_id":"themes/matery/source/js/search.js","path":"js/search.js","modified":1,"renderable":1},{"_id":"themes/matery/source/js/matery.js","path":"js/matery.js","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/logo.png","path":"medias/logo.png","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/animate/animate.min.css","path":"libs/animate/animate.min.css","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/aos/aos.css","path":"libs/aos/aos.css","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/aos/aos.js","path":"libs/aos/aos.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/aplayer/APlayer.min.css","path":"libs/aplayer/APlayer.min.css","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/aplayer/APlayer.min.js","path":"libs/aplayer/APlayer.min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/cryptojs/crypto-js.min.js","path":"libs/cryptojs/crypto-js.min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/codeBlock/clipboard.min.js","path":"libs/codeBlock/clipboard.min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/dplayer/DPlayer.min.css","path":"libs/dplayer/DPlayer.min.css","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/codeBlock/codeBlockFuction.js","path":"libs/codeBlock/codeBlockFuction.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/codeBlock/codeShrink.js","path":"libs/codeBlock/codeShrink.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/codeBlock/codeLang.js","path":"libs/codeBlock/codeLang.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/codeBlock/codeCopy.js","path":"libs/codeBlock/codeCopy.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/gitalk/gitalk.css","path":"libs/gitalk/gitalk.css","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/gitment/gitment-default.css","path":"libs/gitment/gitment-default.css","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/jqcloud/jqcloud-1.0.4.min.js","path":"libs/jqcloud/jqcloud-1.0.4.min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/jqcloud/jqcloud.css","path":"libs/jqcloud/jqcloud.css","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/others/busuanzi.pure.mini.js","path":"libs/others/busuanzi.pure.mini.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/masonry/masonry.pkgd.min.js","path":"libs/masonry/masonry.pkgd.min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/others/clicklove.js","path":"libs/others/clicklove.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/others/explosion.min.js","path":"libs/others/explosion.min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/others/text.js","path":"libs/others/text.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/others/fireworks.js","path":"libs/others/fireworks.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/others/snow.js","path":"libs/others/snow.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/scrollprogress/scrollProgress.min.js","path":"libs/scrollprogress/scrollProgress.min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/tocbot/tocbot.css","path":"libs/tocbot/tocbot.css","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/tocbot/tocbot.min.js","path":"libs/tocbot/tocbot.min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/ajin.jpg","path":"medias/avatars/ajin.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/avatar.jpg","path":"medias/avatars/avatar.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/babyq.png","path":"medias/avatars/babyq.png","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/cww97.jpg","path":"medias/avatars/cww97.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/feibar.jpg","path":"medias/avatars/feibar.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/fun4go.png","path":"medias/avatars/fun4go.png","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/hael.jpg","path":"medias/avatars/hael.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/huaji.jpg","path":"medias/avatars/huaji.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/ids2.jpg","path":"medias/avatars/ids2.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/hzwer.jpg","path":"medias/avatars/hzwer.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/kewlgrl.jpg","path":"medias/avatars/kewlgrl.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/ldy.jpg","path":"medias/avatars/ldy.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/lijiaqian.png","path":"medias/avatars/lijiaqian.png","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/liyangzone.jpg","path":"medias/avatars/liyangzone.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/liyucheng.jpg","path":"medias/avatars/liyucheng.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/masterx.jpg","path":"medias/avatars/masterx.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/michael.jpg","path":"medias/avatars/michael.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/mouse.jpg","path":"medias/avatars/mouse.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/mpy634.png","path":"medias/avatars/mpy634.png","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/qiqiang.jpg","path":"medias/avatars/qiqiang.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/spacesac.png","path":"medias/avatars/spacesac.png","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/sunchangzhi.jpg","path":"medias/avatars/sunchangzhi.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/taotao.jpg","path":"medias/avatars/taotao.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/taowei.jpg","path":"medias/avatars/taowei.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/tawn.jpg","path":"medias/avatars/tawn.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/yezijie.png","path":"medias/avatars/yezijie.png","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/zhaokangzhe.jpg","path":"medias/avatars/zhaokangzhe.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/banner/3.jpeg","path":"medias/banner/3.jpeg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/banner/6.jpeg","path":"medias/banner/6.jpeg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/0.jpg","path":"medias/featureimages/0.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/contact.jpg","path":"medias/contact.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/5.jpg","path":"medias/featureimages/5.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/files/cv-en.pdf","path":"medias/files/cv-en.pdf","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/reward/wechat.png","path":"medias/reward/wechat.png","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/gitment/gitment.js","path":"libs/gitment/gitment.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/jquery/jquery-2.2.0.min.js","path":"libs/jquery/jquery-2.2.0.min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/valine/Valine.min.js","path":"libs/valine/Valine.min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/antnlp.ico","path":"medias/avatars/antnlp.ico","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/bytedtrans.png","path":"medias/avatars/bytedtrans.png","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/duyupei.jpg","path":"medias/avatars/duyupei.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/gsy.jpg","path":"medias/avatars/gsy.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/jiejie.jpg","path":"medias/avatars/jiejie.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/milyyy.jpg","path":"medias/avatars/milyyy.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/mizunashi.png","path":"medias/avatars/mizunashi.png","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/myzhihu.png","path":"medias/avatars/myzhihu.png","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/qiandongwei.jpg","path":"medias/avatars/qiandongwei.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/xiejiadong.jpg","path":"medias/avatars/xiejiadong.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/zhangting.jpg","path":"medias/avatars/zhangting.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/xuzhongyou.jpg","path":"medias/avatars/xuzhongyou.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/zzw.jpg","path":"medias/avatars/zzw.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/reward/alipay.jpg","path":"medias/reward/alipay.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/awesome/css/font-awesome.min.css","path":"libs/awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/dplayer/DPlayer.min.js","path":"libs/dplayer/DPlayer.min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.ttf","path":"libs/lightGallery/fonts/lg.ttf","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/css/lightgallery.min.css","path":"libs/lightGallery/css/lightgallery.min.css","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.woff","path":"libs/lightGallery/fonts/lg.woff","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/img/loading.gif","path":"libs/lightGallery/img/loading.gif","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.eot","path":"libs/lightGallery/fonts/lg.eot","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.svg","path":"libs/lightGallery/fonts/lg.svg","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/img/video-play.png","path":"libs/lightGallery/img/video-play.png","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/img/vimeo-play.png","path":"libs/lightGallery/img/vimeo-play.png","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/materialize/materialize.min.css","path":"libs/materialize/materialize.min.css","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/materialize/materialize.min.js","path":"libs/materialize/materialize.min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/share/css/share.min.css","path":"libs/share/css/share.min.css","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/share/fonts/iconfont.eot","path":"libs/share/fonts/iconfont.eot","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/share/fonts/iconfont.svg","path":"libs/share/fonts/iconfont.svg","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/share/fonts/iconfont.woff","path":"libs/share/fonts/iconfont.woff","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/share/js/jquery.share.min.js","path":"libs/share/js/jquery.share.min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/share/fonts/iconfont.ttf","path":"libs/share/fonts/iconfont.ttf","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/0xbird.png","path":"medias/avatars/0xbird.png","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/lzh.png","path":"medias/avatars/lzh.png","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/lyn-draw.jpg","path":"medias/avatars/lyn-draw.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/qianqian.png","path":"medias/avatars/qianqian.png","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/banner/1.jpeg","path":"medias/banner/1.jpeg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/14.jpg","path":"medias/featureimages/14.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/music/avatars/tiantangdemogui.jpg","path":"medias/music/avatars/tiantangdemogui.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/music/avatars/yequ.jpg","path":"medias/music/avatars/yequ.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/files/cv-zh.pdf","path":"medias/files/cv-zh.pdf","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/music/avatars/yiluxiangbei.jpg","path":"medias/music/avatars/yiluxiangbei.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/gzh.jpg","path":"medias/gzh.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.woff2","path":"libs/awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.woff","path":"libs/awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/gitalk/gitalk.min.js","path":"libs/gitalk/gitalk.min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/img/youtube-play.png","path":"libs/lightGallery/img/youtube-play.png","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/js/lightgallery-all.min.js","path":"libs/lightGallery/js/lightgallery-all.min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/share/js/social-share.min.js","path":"libs/share/js/social-share.min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/valine/av-min.js","path":"libs/valine/av-min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/mashiro.jpg","path":"medias/avatars/mashiro.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/zhangyi.jpg","path":"medias/avatars/zhangyi.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/13.jpg","path":"medias/featureimages/13.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/22.jpg","path":"medias/featureimages/22.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.eot","path":"libs/awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.ttf","path":"libs/awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/banner/5.jpeg","path":"medias/banner/5.jpeg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/2.jpg","path":"medias/featureimages/2.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/3.jpg","path":"medias/featureimages/3.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/28.jpg","path":"medias/featureimages/28.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/jitao.jpg","path":"medias/avatars/jitao.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/12.jpg","path":"medias/featureimages/12.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/25.jpg","path":"medias/featureimages/25.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/23.jpg","path":"medias/featureimages/23.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/26.jpg","path":"medias/featureimages/26.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/27.jpg","path":"medias/featureimages/27.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/6.jpg","path":"medias/featureimages/6.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/7.jpg","path":"medias/featureimages/7.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/awesome/fonts/FontAwesome.otf","path":"libs/awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/feibar.png","path":"medias/avatars/feibar.png","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/banner/4.jpeg","path":"medias/banner/4.jpeg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/17.jpg","path":"medias/featureimages/17.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/24.jpg","path":"medias/featureimages/24.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/music/avatars/daoshu.jpg","path":"medias/music/avatars/daoshu.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/jingjing.jpg","path":"medias/avatars/jingjing.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/16.jpg","path":"medias/featureimages/16.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/18.jpg","path":"medias/featureimages/18.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/20.jpg","path":"medias/featureimages/20.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/19.jpg","path":"medias/featureimages/19.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/10.jpg","path":"medias/featureimages/10.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/11.jpg","path":"medias/featureimages/11.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/21.jpg","path":"medias/featureimages/21.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/banner/0.jpeg","path":"medias/banner/0.jpeg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/1.jpg","path":"medias/featureimages/1.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.svg","path":"libs/awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/banner/2.jpeg","path":"medias/banner/2.jpeg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/8.jpg","path":"medias/featureimages/8.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/echarts/echarts.min.js","path":"libs/echarts/echarts.min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/15.jpg","path":"medias/featureimages/15.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/9.jpg","path":"medias/featureimages/9.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/4.jpg","path":"medias/featureimages/4.jpg","modified":1,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"b8bda8a8a2b7d9895527115fab04a267cf53cc8e","modified":1634294754720},{"_id":"source/.DS_Store","hash":"fb8d51ce53158adafdcf49041fd7d6c75b28e9e1","modified":1638679980127},{"_id":"source/404.md","hash":"ee1a2a5aa0a3dd773254ee5be3ca7fa131b1916c","modified":1638518621816},{"_id":"themes/matery/.gitignore","hash":"eaa3d84cb77d92a21b111fd1e37f53edc1ff9de0","modified":1634294754722},{"_id":"themes/matery/.DS_Store","hash":"817b6c702956629f8e1f9450156a3fc77e9340fd","modified":1634636425043},{"_id":"themes/matery/README.md","hash":"7ef16198a2c5ff580f006582286354caf160c7fe","modified":1634294754723},{"_id":"themes/matery/_config.yml","hash":"992f0ba9020bcd446d13b079ceecc7c57ba5c6e7","modified":1635065680446},{"_id":"themes/matery/LICENSE","hash":"b314c7ebb7d599944981908b7f3ed33a30e78f3a","modified":1634294754722},{"_id":"themes/matery/README_CN.md","hash":"a94324950e0299bcfcbc106cf2ca65c93e1fe843","modified":1634294754723},{"_id":"source/_data/musics.json","hash":"32bc061f34721b4ff55f880de1d0ec5787acd2f9","modified":1634294754720},{"_id":"source/_posts/about-infinitesimal.md","hash":"258cc6066710dba3dda1a0f34603b08280d286e5","modified":1635239329000},{"_id":"source/_data/friends.json","hash":"e4c6253b684af89a656c9ce5440ed5c405d6421d","modified":1635065932794},{"_id":"source/_posts/eip1559.md","hash":"b7065145251cd08a7646f67a9011eec375f56597","modified":1635045644157},{"_id":"source/_posts/context-recalg.md","hash":"563be96a748a4206671cbeccedc034f410fb4aab","modified":1636614743707},{"_id":"source/_posts/enjoy-new-world.md","hash":"a1ec3c2fbb2871167995d0a7ae9fa5f67a0499e9","modified":1634553337550},{"_id":"source/_posts/knowledge-graph-ner.md","hash":"419fdde986bb0b1e0793b05c385fdf11558240a2","modified":1638779853121},{"_id":"source/_posts/mark-blockchain-links.md","hash":"87da860ec166b9d6253846b340a348af71ca5416","modified":1642317524402},{"_id":"source/_posts/knowledge-graph.md","hash":"0c6e2850db683cb08bf778961efc747d612b2367","modified":1638762373954},{"_id":"source/_posts/mod-rest.md","hash":"2d0a1c39fcd5af1fd60185c33aece4f1b8355b90","modified":1647318762709},{"_id":"source/_posts/nlp-text-key.md","hash":"ac88a5bb784269277daef03914b6d8c66404c511","modified":1637827491319},{"_id":"source/_posts/use-matlab-injava.md","hash":"a3999f2a7cb0597578cf46d753ced6bd1358d3e5","modified":1647861313093},{"_id":"source/_posts/text2vec.md","hash":"014a9f103b061e802346407c2e6eed3ae172fba2","modified":1636795349814},{"_id":"source/about/index.md","hash":"4099a553cd981fcb0410fa16d8fbbe75d22d7248","modified":1634294754721},{"_id":"source/archives/index.md","hash":"30a0e3a59be650ae34d7bb86ac7da53e21e9cf5b","modified":1634294754721},{"_id":"source/categories/index.md","hash":"67687d3f908737f7c680f096b3e80d9412f23b0e","modified":1634294754721},{"_id":"source/tags/index.md","hash":"fe3d7ecc91b81b062a6a60c06859dc24b9d704ac","modified":1634294754722},{"_id":"source/contact/index.md","hash":"37a468f8db2074ab86d18a392a5ae666d505fcaa","modified":1635065571701},{"_id":"source/friends/index.md","hash":"711aa8d7d6cfd546f602e2c1e97ae8446a203d16","modified":1635065748013},{"_id":"themes/matery/languages/default.yml","hash":"527c795b8c41fe62bf35603ffebfa6d4a7929a2c","modified":1634294754723},{"_id":"themes/matery/languages/zh-CN.yml","hash":"d92db4b986bb6f0d228e9a8249383103bf56342d","modified":1634636564100},{"_id":"themes/matery/layout/about.ejs","hash":"e87752e59f021b5139b1155a264da11ab469a9aa","modified":1634294754731},{"_id":"themes/matery/layout/404.ejs","hash":"f08a0f507b36f3652520a41381f71167488405c7","modified":1634294754724},{"_id":"themes/matery/layout/categories.ejs","hash":"c431e772d0f7700592228bbd9502793bdc28a893","modified":1634294754732},{"_id":"themes/matery/layout/category.ejs","hash":"2d421e10c3b8fd2c4f725e5eaa967c4a1429c707","modified":1634294754732},{"_id":"themes/matery/layout/contact.ejs","hash":"1513c5a40b7cc0b6e5854cf8c3253958bcb486cb","modified":1634294754732},{"_id":"themes/matery/layout/friends.ejs","hash":"895e40a864796680fbef581e4b09f252fbdd963a","modified":1634294754732},{"_id":"themes/matery/layout/layout.ejs","hash":"2ba4110dc596424b1220a259c8e594da774e7f59","modified":1634294754733},{"_id":"themes/matery/layout/post.ejs","hash":"f1a35f32e5901e167ae9a750e7cb3635549cea2e","modified":1634294754733},{"_id":"themes/matery/layout/tag.ejs","hash":"5cdf3a1d72f54285ee9cb826fd0e4a0449093215","modified":1634294754733},{"_id":"themes/matery/layout/tags.ejs","hash":"851c0ee599e91e7b1d657673859e8b6ff79cf50b","modified":1634294754733},{"_id":"themes/matery/layout/index.ejs","hash":"a1a586aa8f4f604510dac9e0f5fdc6b54b59dbdb","modified":1634637939174},{"_id":"themes/matery/source/.DS_Store","hash":"9c7e67ab4010746d8135a3a9ab26ae47aa87f337","modified":1634637530003},{"_id":"themes/matery/source/favicon.png","hash":"0f4145b9a712f9662e4fae1b0086ce74cf1f9fc4","modified":1634294754735},{"_id":"themes/matery/layout/archive.ejs","hash":"1b5023571894404d75caffa28128fc9c49f9095d","modified":1634294754732},{"_id":"source/_posts/context-recalg/alg_doc2vec.jpeg","hash":"6ee7b6a39948b809cb82a76a23a82b098e6e9f1a","modified":1636529905319},{"_id":"source/_posts/context-recalg/alg_resis.jpeg","hash":"e32b2f7cc1f243d3c2ff339c48da05933c1b9e09","modified":1636167451915},{"_id":"source/_posts/context-recalg/alg_struc.jpeg","hash":"eade6f83b50aa26f804490b7d8b4f5c181c72f87","modified":1636369611732},{"_id":"source/_posts/context-recalg/alg_va.jpeg","hash":"e07ccdf57cabc511a5f98437c783a9314b4d5711","modified":1636530279977},{"_id":"source/_posts/context-recalg/alg_word2vec.png","hash":"af7ba397172e25a49f514c909f566abb1457cd25","modified":1636456531648},{"_id":"source/_posts/context-recalg/tag_tree.png","hash":"2f3cfba461596d21710eb90d2b4cd111d9571039","modified":1636434097553},{"_id":"source/_posts/eip1559/eip1559.jpeg","hash":"8787feb0a0e21d92963fbf01ea08f988ea7d0ac8","modified":1635044808602},{"_id":"source/_posts/knowledge-graph/kg_ner.jpeg","hash":"1888fa8be623846c10d9c5a600fc3c5115e258dd","modified":1638675128741},{"_id":"source/_posts/knowledge-graph/kg_ontology.jpeg","hash":"8b063aa2ef06fc40b7dcb8e989ad103f299cd963","modified":1638679514589},{"_id":"source/_posts/knowledge-graph/kg_pic.jpeg","hash":"2ee8ad4bee5fe134721e0514245034ceb291be2a","modified":1638524062694},{"_id":"source/_posts/knowledge-graph/kg_re.jpeg","hash":"6b1a0c59d579c0ae2ee84b1fdc04a5c9db5bbccd","modified":1638675702658},{"_id":"source/_posts/knowledge-graph/kg_tuili.jpeg","hash":"06304b752d00a11681ec1b4a1c413fa39f042f0a","modified":1638679968676},{"_id":"source/_posts/nlp-text-key/supervise.jpeg","hash":"7d346e88d47a5cc423ccd5702e7614e7a7d863ba","modified":1637827436315},{"_id":"source/_posts/nlp-text-key/total_method.png","hash":"53ded53e0ba695656e5cfdc826275dc50100fb07","modified":1637827253326},{"_id":"themes/matery/layout/_widget/category-cloud.ejs","hash":"b2b22d4fc4e46b051f67216c391f629f4ff552b5","modified":1634294754729},{"_id":"themes/matery/layout/_widget/music.ejs","hash":"fc50cb4bbc1f4d0e4c9f5941f1c3c74bea742db7","modified":1634294754729},{"_id":"themes/matery/layout/_widget/category-radar.ejs","hash":"5284712d84bbaa4f0d88026ac3ec5a8c13e00056","modified":1634294754729},{"_id":"themes/matery/layout/_widget/dream.ejs","hash":"6ae58a57b83a5999d0b6a737ec868f084d208f89","modified":1634294754729},{"_id":"themes/matery/layout/_widget/my-projects.ejs","hash":"785cb588a31215876f6737213054ba0e8552fff0","modified":1634294754730},{"_id":"themes/matery/layout/_widget/my-gallery.ejs","hash":"9ea672db65f1e5b8fad1ffafb1614f25adc97e63","modified":1634294754730},{"_id":"themes/matery/layout/_widget/my-skills.ejs","hash":"c6f713316ce75ad08ac5d1587bd8ce42e894e9ae","modified":1634294754730},{"_id":"themes/matery/layout/_widget/post-calendar.ejs","hash":"4608af6151f0e32f668c89f09343748340021478","modified":1634294754730},{"_id":"themes/matery/layout/_widget/post-charts.ejs","hash":"0aaf0a111b9aa07ff37f6286eeac5506283f47f8","modified":1634294754730},{"_id":"themes/matery/layout/_widget/recommend.ejs","hash":"d439d86818de179d64965d4f7f5fa56147fd9221","modified":1634294754731},{"_id":"themes/matery/layout/_widget/tag-cloud.ejs","hash":"6310903eb0e434d6f9a59ca669aab7fae38d4797","modified":1634294754731},{"_id":"themes/matery/layout/_widget/tag-wordcloud.ejs","hash":"bf604fe9c435f0fb9a559cac9c35772579b590e8","modified":1634294754731},{"_id":"themes/matery/layout/_widget/video.ejs","hash":"05f5e2acace5730cdf7bed650375ad88f6b5d1b7","modified":1634294754731},{"_id":"themes/matery/layout/_partial/back-top.ejs","hash":"cb99dc352397ec5d0765794d7b8884972e61973b","modified":1634294754724},{"_id":"themes/matery/layout/_partial/bg-cover.ejs","hash":"d5a7b9bb96e04c0a3485dd873748f19c50a6a04f","modified":1634294754724},{"_id":"themes/matery/layout/_partial/disqus.ejs","hash":"42dda8e67f7f09d148347887e52f18aea546df26","modified":1634294754725},{"_id":"themes/matery/layout/_partial/gitalk.ejs","hash":"a3a140e6aeeb6f289e4b821a577ef548267f3de1","modified":1634294754725},{"_id":"themes/matery/layout/_partial/github-link.ejs","hash":"fd4034bca2eb3987dcf113e6477260bee97eb1e7","modified":1634294754725},{"_id":"themes/matery/layout/_partial/gitment.ejs","hash":"d8c40dbc8106b5bc53ceb727ad968c1d8f234261","modified":1634294754725},{"_id":"themes/matery/layout/_partial/google-analytics.ejs","hash":"890c8f04c1f4905dfceb3ea9fd6efdd040d79c01","modified":1634294754725},{"_id":"themes/matery/layout/_partial/bg-cover-content.ejs","hash":"0f264b1cefc0bf192ffcf8de8397ad5afff83b26","modified":1634637806315},{"_id":"themes/matery/layout/_partial/head.ejs","hash":"fb572df037b5a6eb563912caa1f1967ca835a70a","modified":1634294754725},{"_id":"themes/matery/layout/_partial/header.ejs","hash":"821e1af65990521c9e0288178d8e5b18c73a9cab","modified":1634294754726},{"_id":"themes/matery/layout/_partial/livere.ejs","hash":"42728561c09589f79b698eb059ab4def53ed3642","modified":1634294754726},{"_id":"themes/matery/layout/_partial/index-cover.ejs","hash":"d4042e5521ceb5f3255cd4455ac7ccd227fee6df","modified":1634294754726},{"_id":"themes/matery/layout/_partial/footer.ejs","hash":"3b442c9d0a8c371c3df2b28855e53a3173382591","modified":1635066444332},{"_id":"themes/matery/layout/_partial/paging.ejs","hash":"dfdeea9c59d157acb851d4bf44bf95f81787523c","modified":1634294754727},{"_id":"themes/matery/layout/_partial/post-cover.ejs","hash":"166c0b9753f3f913bd801e82ad5b268004be198d","modified":1634294754727},{"_id":"themes/matery/layout/_partial/mobile-nav.ejs","hash":"e761f0104fbf431671bbe6bebc91ca82f737f4d2","modified":1634636589630},{"_id":"themes/matery/layout/_partial/post-detail-toc.ejs","hash":"82cb8090cde663fa7ad67418a802997b3057e957","modified":1634294754727},{"_id":"themes/matery/layout/_partial/post-detail.ejs","hash":"3f208f33e4e12becdb8323e6e64e20ad60c3fb2a","modified":1634294754727},{"_id":"themes/matery/layout/_partial/navigation.ejs","hash":"3a82fcb6f31d69971cb564985842c14ac02cdca0","modified":1634636598016},{"_id":"themes/matery/layout/_partial/post-statis.ejs","hash":"3b42900247d5ea4ea5b68e2be44420a0d54785ad","modified":1634294754727},{"_id":"themes/matery/layout/_partial/prev-next.ejs","hash":"4e73f10eacb5d00a0681cb44fe5c039cd8ab03cd","modified":1634294754727},{"_id":"themes/matery/layout/_partial/reprint-statement.ejs","hash":"f85a222ec3f9bc27eb7978015e63a16514b38791","modified":1634294754728},{"_id":"themes/matery/layout/_partial/reward.ejs","hash":"73624d9db81e87ff0c12310bb873fbd0b5221021","modified":1634294754728},{"_id":"themes/matery/layout/_partial/search.ejs","hash":"e859fe6e0259e0c123cb7ceda6e4cac836318ffc","modified":1634294754728},{"_id":"themes/matery/layout/_partial/share.ejs","hash":"0f2e1e27d21492cf228e786daead985b1e1dcea4","modified":1634294754728},{"_id":"themes/matery/layout/_partial/social-link.ejs","hash":"e2865b3003ec07892e9112692e7ec786ee926ae8","modified":1634294754728},{"_id":"themes/matery/layout/_partial/valine.ejs","hash":"c3039180ddb2eb17e724b8441e5f93e79859aef7","modified":1634294754729},{"_id":"themes/matery/source/css/gitment.css","hash":"d5ef623065d1fbc897119f7b70ccf7563e329917","modified":1634294754733},{"_id":"themes/matery/source/css/matery.css","hash":"0d345a72318fd7aadcb6fcaa6f3abac94b91001c","modified":1634294754734},{"_id":"themes/matery/source/css/my.css","hash":"37683a9f11c68903a53e2b8593ca8c095a721896","modified":1634294754734},{"_id":"themes/matery/source/css/my-gitalk.css","hash":"4e3e855767ac5a48b13af1d6a42df13d8975e03f","modified":1634294754734},{"_id":"themes/matery/source/js/search.js","hash":"77ecae23dd3edd8ad962c5b12954652bb2f7a1b6","modified":1634294754735},{"_id":"themes/matery/source/js/matery.js","hash":"208b7806caa943c115aa0825c9c72a0781404775","modified":1634294754735},{"_id":"themes/matery/source/medias/.DS_Store","hash":"6afe9280a5b0d986a60331c21858ac78d2691215","modified":1635067764022},{"_id":"themes/matery/source/medias/logo.png","hash":"d7e36f576f114549d0eab6d2c5e336e16bf46b4d","modified":1634636386281},{"_id":"source/_posts/context-recalg/alg_antiindex.jpeg","hash":"68b876b043c44d196ace8806307f68ea2d07445f","modified":1636601580931},{"_id":"source/_posts/context-recalg/alg_netflix.jpeg","hash":"1a4eb2d3f22cab6891c41f463c309024bd7e2b6e","modified":1636604974630},{"_id":"source/_posts/text2vec/cbow.png","hash":"b98b8dcc6499c5a2d0613229d994fafb077f1e8d","modified":1636704902173},{"_id":"source/_posts/text2vec/mod_dbow.png","hash":"2845a61901bd9b0f62d53fb34d988014d218cff7","modified":1636795178757},{"_id":"source/_posts/text2vec/str_nnlm.png","hash":"8b8e79b8fff77aad0f5f6928464de61fa08a424d","modified":1636704253302},{"_id":"source/_posts/context-recalg/alg_negative.jpeg","hash":"a190688207cb6cb861b2966643cc90b3c06e27b3","modified":1636607936709},{"_id":"themes/matery/source/libs/animate/animate.min.css","hash":"5dfcbcee866e9dc564916416281885f3e320871e","modified":1634294754735},{"_id":"themes/matery/source/libs/aos/aos.css","hash":"ded9739f803d114c9168d3351fded72b3b478b4c","modified":1634294754736},{"_id":"themes/matery/source/libs/aos/aos.js","hash":"5a8e6d07ffa55642418ab3fd4b263aa08284b77a","modified":1634294754736},{"_id":"themes/matery/source/libs/aplayer/APlayer.min.css","hash":"7f4f8913f2d46ade2def5134e2cc8684a4b87939","modified":1634294754736},{"_id":"themes/matery/source/libs/aplayer/APlayer.min.js","hash":"70c0c4a9bf698747b7c058c21287ad617355e5dd","modified":1634294754737},{"_id":"themes/matery/source/libs/cryptojs/crypto-js.min.js","hash":"33810b2b757fc4327bc1d3b83bb5e0d3dc1fec5b","modified":1634294754749},{"_id":"themes/matery/source/libs/codeBlock/clipboard.min.js","hash":"9cd57c67fbd3e3067f80793ef8445f5ff7783563","modified":1634294754747},{"_id":"themes/matery/source/libs/dplayer/DPlayer.min.css","hash":"5d52d3b34fceb9d7e11f1beaf7ed380b4249dec4","modified":1634294754749},{"_id":"themes/matery/source/libs/codeBlock/codeBlockFuction.js","hash":"c7ab06d27a525b15b1eb69027135269e9b9132fb","modified":1634294754748},{"_id":"themes/matery/source/libs/codeBlock/codeShrink.js","hash":"215910dc8f63fd50b97957e5fcdc8480aa2728cb","modified":1634294754748},{"_id":"themes/matery/source/libs/codeBlock/codeLang.js","hash":"ea8b51e4d75e7b2cd63e4d5bcb8db2cf7f23f5db","modified":1634294754748},{"_id":"themes/matery/source/libs/codeBlock/codeCopy.js","hash":"b74a381adf6ef8404d6a0452c2b9f44b47219c80","modified":1634294754748},{"_id":"themes/matery/source/libs/gitalk/gitalk.css","hash":"021898a16279ac2ffe75af4f902fab2a0a39f11a","modified":1634294754755},{"_id":"themes/matery/source/libs/gitment/gitment-default.css","hash":"a0625d8b432af8bdc820f8768d36cde439e7257c","modified":1634294754756},{"_id":"themes/matery/source/libs/jqcloud/jqcloud-1.0.4.min.js","hash":"26849509f196a2d21bbfd15696e5d5153163b8f1","modified":1634294754757},{"_id":"themes/matery/source/libs/jqcloud/jqcloud.css","hash":"4e6538c8312aeeab845d361c37a8c1a0931241f0","modified":1634294754757},{"_id":"themes/matery/source/libs/others/busuanzi.pure.mini.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1634294754762},{"_id":"themes/matery/source/libs/masonry/masonry.pkgd.min.js","hash":"f81cd7bfcf7aa2d043bd3e6077df42656fc44b82","modified":1634294754760},{"_id":"themes/matery/source/libs/others/clicklove.js","hash":"6a39b8c683ba5dcd92f70c6ab45d1cfac3213e8e","modified":1634294754762},{"_id":"themes/matery/source/libs/others/explosion.min.js","hash":"417b68e2cf2c6de2119c57626f4412105a8457f5","modified":1634294754762},{"_id":"themes/matery/source/libs/others/text.js","hash":"1791782cde0d1e4197f2ed58ecb7dd6aefddd169","modified":1634294754762},{"_id":"themes/matery/source/libs/others/fireworks.js","hash":"53981959bc6def4a85bbbb41b07e4b1474a2124d","modified":1634294754762},{"_id":"themes/matery/source/libs/others/snow.js","hash":"b393f069781eef788a0ae66b2681cece8fea2851","modified":1634294754762},{"_id":"themes/matery/source/libs/scrollprogress/scrollProgress.min.js","hash":"777ffe5d07e85a14fbe97d846f45ffc0087251cc","modified":1634294754763},{"_id":"themes/matery/source/libs/tocbot/tocbot.css","hash":"f646f2bb75bcd1eb65b2788ac7bf15d4fd243ce9","modified":1634294754765},{"_id":"themes/matery/source/libs/tocbot/tocbot.min.js","hash":"5ec27317f0270b8cf6b884c6f12025700b9a565c","modified":1634294754765},{"_id":"themes/matery/source/medias/avatars/ajin.jpg","hash":"76cb8e872472ff47a1b061c3bcff1c03f30c02b8","modified":1634294754768},{"_id":"themes/matery/source/medias/avatars/avatar.jpg","hash":"6850c3643f81caf79c8be7c454a501f0d3962e14","modified":1634294754769},{"_id":"themes/matery/source/medias/avatars/babyq.png","hash":"be5432588003e5a52c02e690622eec72b5f7346c","modified":1634294754769},{"_id":"themes/matery/source/medias/avatars/cww97.jpg","hash":"6af987cafc55d8d031534dd5e0f722fff19f70ec","modified":1634294754771},{"_id":"themes/matery/source/medias/avatars/feibar.jpg","hash":"343f47cb5c83cd866a1c824cbe2a112d02516d06","modified":1634294754772},{"_id":"themes/matery/source/medias/avatars/fun4go.png","hash":"0f4333973a972a629cfbabf601bc7c192b65376c","modified":1634294754774},{"_id":"themes/matery/source/medias/avatars/hael.jpg","hash":"e66ccedab38bb2e8fc45fac024e234ab8e7b9d54","modified":1634294754775},{"_id":"themes/matery/source/medias/avatars/huaji.jpg","hash":"86be7eed2a491455ccfe3e7da46366ff477765ca","modified":1634294754775},{"_id":"themes/matery/source/medias/avatars/ids2.jpg","hash":"2c8d3ac6ab5ac6196bac83766fde975daca91c32","modified":1634294754776},{"_id":"themes/matery/source/medias/avatars/hzwer.jpg","hash":"53a66bb5e65d2abd5b7412edf094c1e0b1094492","modified":1634294754775},{"_id":"themes/matery/source/medias/avatars/kewlgrl.jpg","hash":"3af0fd1029a1511bb3c0e90871e41b35e714b01f","modified":1634294754780},{"_id":"themes/matery/source/medias/avatars/ldy.jpg","hash":"906ef214d1f2fe52a663738340ad5623f826bd82","modified":1634294754780},{"_id":"themes/matery/source/medias/avatars/lijiaqian.png","hash":"9d96b3838acfae9a23b6e290fcfafceff0419c63","modified":1634294754781},{"_id":"themes/matery/source/medias/avatars/liyangzone.jpg","hash":"febab557e4c0d859ab4cc14b57d8106f5e3fccfb","modified":1634294754782},{"_id":"themes/matery/source/medias/avatars/liyucheng.jpg","hash":"12055a27fa667c87d2319475968056e1a8ad0f08","modified":1634294754782},{"_id":"themes/matery/source/medias/avatars/masterx.jpg","hash":"c9f7e83d895fa241cefd6e742f356106b35f1b89","modified":1634294754785},{"_id":"themes/matery/source/medias/avatars/michael.jpg","hash":"331a2ab20c299196f5a3089b8445fc8f55346cb6","modified":1634294754786},{"_id":"themes/matery/source/medias/avatars/mouse.jpg","hash":"2eae273885b9859150a1f98f74b3df12ca9a207c","modified":1634294754788},{"_id":"themes/matery/source/medias/avatars/mpy634.png","hash":"30f88e09c02b37c2dc684d4ee3237e327bb23f8b","modified":1634294754788},{"_id":"themes/matery/source/medias/avatars/qiqiang.jpg","hash":"081459866f922d9558a88cd4d7155d91fa730322","modified":1634294754791},{"_id":"themes/matery/source/medias/avatars/spacesac.png","hash":"ff1bdb058f1f0499312da1a082ba97d78590db1a","modified":1634294754791},{"_id":"themes/matery/source/medias/avatars/sunchangzhi.jpg","hash":"bbe2a15fd474ab62dbd14fea72deb1113a4fb005","modified":1634294754792},{"_id":"themes/matery/source/medias/avatars/taotao.jpg","hash":"e668254375ddd40a684ff4669c3421851bebd36e","modified":1634294754792},{"_id":"themes/matery/source/medias/avatars/taowei.jpg","hash":"e58b03b70656aa7a27238be38dac3896d9d16f10","modified":1634294754792},{"_id":"themes/matery/source/medias/avatars/tawn.jpg","hash":"68a1cbacbb2370912b000c9d8d2b16196c918a50","modified":1634294754793},{"_id":"themes/matery/source/medias/avatars/yezijie.png","hash":"8a53537eb69f749115e512b6da061e7f23cd04e5","modified":1634294754795},{"_id":"themes/matery/source/medias/avatars/zhaokangzhe.jpg","hash":"c8242bd13f08a9ddb97e26f216bc729b12ed9058","modified":1634294754797},{"_id":"themes/matery/source/medias/banner/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1634637799525},{"_id":"themes/matery/source/medias/banner/3.jpeg","hash":"89464c6003790bdc533ab046b3111c7916bce79c","modified":1634637739915},{"_id":"themes/matery/source/medias/banner/6.jpeg","hash":"4ba8593170cb1188162b5e57c5e8a77b076b2ce0","modified":1634637783390},{"_id":"themes/matery/source/medias/featureimages/0.jpg","hash":"1f8bbfbd625448b4b2a748b75636e456b826dcd3","modified":1634294754806},{"_id":"themes/matery/source/medias/contact.jpg","hash":"7eb0906c0e2be9d96650e3bc01da0dc66167aa85","modified":1634294754805},{"_id":"themes/matery/source/medias/featureimages/5.jpg","hash":"c4cc724f4572a9bcede7443a4f4c0393d3073868","modified":1634294754865},{"_id":"themes/matery/source/medias/files/cv-en.pdf","hash":"2a62ab3797f8bc8e2e5e04c4950198525c635139","modified":1634294754882},{"_id":"themes/matery/source/medias/reward/wechat.png","hash":"61eb27bc4ec65f4f116d34740903fb5af75bf561","modified":1634294754887},{"_id":"themes/matery/source/libs/gitment/gitment.js","hash":"5a13983930b019450e4fe01a407c64b3dd316be4","modified":1634294754756},{"_id":"themes/matery/source/libs/jquery/jquery-2.2.0.min.js","hash":"7a551393b8360731104fdef1af36a6f3638f5855","modified":1634294754757},{"_id":"themes/matery/source/libs/valine/Valine.min.js","hash":"f1558f12d96a352e490166d543a8e821dd3bb2bc","modified":1634294754766},{"_id":"themes/matery/source/medias/avatars/antnlp.ico","hash":"29475f350b989331cebd702a315f020917d06ed8","modified":1634294754769},{"_id":"themes/matery/source/medias/avatars/bytedtrans.png","hash":"ce59d69e5106f20548f4ec9b6429c8fcc787ea08","modified":1634294754770},{"_id":"themes/matery/source/medias/avatars/duyupei.jpg","hash":"3c02ed4cf57dc37e4f4b8314bf5094833a854cb0","modified":1634294754771},{"_id":"themes/matery/source/medias/avatars/gsy.jpg","hash":"6a175e2ba56a2280d40a2e654b559be41c3a0a48","modified":1634294754775},{"_id":"themes/matery/source/medias/avatars/jiejie.jpg","hash":"a52476e25bec2391674e77a889a89341fbb29791","modified":1634294754776},{"_id":"themes/matery/source/medias/avatars/milyyy.jpg","hash":"ac2826d9c28346efeb967df01465a2c74d9041fe","modified":1634294754787},{"_id":"themes/matery/source/medias/avatars/mizunashi.png","hash":"5fc300701d3b4250a307ed70e3a3aa0d5395c808","modified":1634294754788},{"_id":"themes/matery/source/medias/avatars/myzhihu.png","hash":"992e0d803160d2ae867be5eb0032d324d1cedffb","modified":1634294754789},{"_id":"themes/matery/source/medias/avatars/qiandongwei.jpg","hash":"6873551596a4513d01898ad866c4073c68270c57","modified":1634294754790},{"_id":"themes/matery/source/medias/avatars/xiejiadong.jpg","hash":"f1a31f89426bd4dccdaba2170f4fc701336702e1","modified":1634294754794},{"_id":"themes/matery/source/medias/avatars/zhangting.jpg","hash":"10ee25ae3531f046a8bd3696c1cc8a16f0f25e1b","modified":1634294754795},{"_id":"themes/matery/source/medias/avatars/xuzhongyou.jpg","hash":"1db4dfaf23cf250f222a398326562d4170d3aaa1","modified":1634294754794},{"_id":"themes/matery/source/medias/avatars/zzw.jpg","hash":"5d385b5732644b07b937a4919abc83cb95e14513","modified":1634294754798},{"_id":"themes/matery/source/medias/reward/alipay.jpg","hash":"9bade255a1918cfb3c3bcefbbbc8f163bf2e19e3","modified":1634294754887},{"_id":"themes/matery/source/libs/awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1634294754738},{"_id":"themes/matery/source/libs/dplayer/DPlayer.min.js","hash":"82276be41d2001e820020a219b90ad5b026302d1","modified":1634294754749},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1634294754758},{"_id":"themes/matery/source/libs/lightGallery/css/lightgallery.min.css","hash":"1b7227237f9785c66062a4811508916518e4132c","modified":1634294754758},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1634294754759},{"_id":"themes/matery/source/libs/lightGallery/img/loading.gif","hash":"15a76af2739482d8de7354abc6d8dc4fca8d145e","modified":1634294754759},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1634294754758},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.svg","hash":"3480f00d284c812d623ed16a9e0ead3fb964c72e","modified":1634294754758},{"_id":"themes/matery/source/libs/lightGallery/img/video-play.png","hash":"fbfdbe06aebf7d0c00da175a4810cf888d128f11","modified":1634294754759},{"_id":"themes/matery/source/libs/lightGallery/img/vimeo-play.png","hash":"1142b47de219dddfba2e712cd3189dec0c8b7bee","modified":1634294754759},{"_id":"themes/matery/source/libs/materialize/materialize.min.css","hash":"2c27939768606603bee3b5e6c8a722596a667e60","modified":1634294754761},{"_id":"themes/matery/source/libs/materialize/materialize.min.js","hash":"c843f0dc497314574c608ca28cc742bb041786d5","modified":1634294754761},{"_id":"themes/matery/source/libs/share/css/share.min.css","hash":"7126de5cec8371e580b7b1f22512da0985cc39e5","modified":1634294754763},{"_id":"themes/matery/source/libs/share/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1634294754763},{"_id":"themes/matery/source/libs/share/fonts/iconfont.svg","hash":"337b4f156f6d8f4beb32c32a3db46fef361cff74","modified":1634294754763},{"_id":"themes/matery/source/libs/share/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1634294754764},{"_id":"themes/matery/source/libs/share/js/jquery.share.min.js","hash":"16ce82901ca0e302cf47a35fb10f59009a5e7eb9","modified":1634294754764},{"_id":"themes/matery/source/libs/share/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1634294754764},{"_id":"themes/matery/source/medias/avatars/0xbird.png","hash":"f9d597dfcb49e1e2be06138b24028291f5638610","modified":1634294754768},{"_id":"themes/matery/source/medias/avatars/lzh.png","hash":"8ffcbf19d6b38b891dbe408d9a4e9513b56f247e","modified":1634294754784},{"_id":"themes/matery/source/medias/avatars/lyn-draw.jpg","hash":"837d5d5df4dcb086d2da114d0d85084b4ec18768","modified":1634294754783},{"_id":"themes/matery/source/medias/avatars/qianqian.png","hash":"fed254c4e7eb58ee22d647acb83f1d08f4508f8f","modified":1634294754790},{"_id":"themes/matery/source/medias/banner/1.jpeg","hash":"06695bca2f629d580164c47104470a50893385fd","modified":1634637579759},{"_id":"themes/matery/source/medias/featureimages/14.jpg","hash":"1c1063c29f827cf52eeef7ca8dc2d7e4efa31a76","modified":1634294754819},{"_id":"themes/matery/source/medias/music/avatars/tiantangdemogui.jpg","hash":"f005578ddb4d3d731838db89a708f39f18d50e60","modified":1634294754885},{"_id":"themes/matery/source/medias/music/avatars/yequ.jpg","hash":"103beb9ab33434b434fa37a30aecdb29db633024","modified":1634294754886},{"_id":"themes/matery/source/medias/files/cv-zh.pdf","hash":"4f58778031b0a0e669e036b16639741e44fc2375","modified":1634294754883},{"_id":"themes/matery/source/medias/music/avatars/yiluxiangbei.jpg","hash":"01b12e3aca7385a88412c12539e1a608a78896fa","modified":1634294754886},{"_id":"themes/matery/source/medias/gzh.jpg","hash":"2ba0d0e95e8a079f6293cc8578c17034b5e6b8cf","modified":1634294754883},{"_id":"source/_posts/knowledge-graph/neo4j.png","hash":"0e51edaa1f90259fe18f61fc84fa6ab5fee4653d","modified":1638525001801},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1634294754747},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1634294754747},{"_id":"themes/matery/source/libs/gitalk/gitalk.min.js","hash":"f63c7c489524ccb5d95e74fcd6618116c58fb305","modified":1634294754756},{"_id":"themes/matery/source/libs/lightGallery/img/youtube-play.png","hash":"39150b45ec5fc03155b7ebeaa44f1829281788e2","modified":1634294754759},{"_id":"themes/matery/source/libs/lightGallery/js/lightgallery-all.min.js","hash":"f8cd48e1fff82ecd54a7ce3e69de8dba7c92d113","modified":1634294754760},{"_id":"themes/matery/source/libs/share/js/social-share.min.js","hash":"4df722bafde2c5d8faaace0d1f894798385a8793","modified":1634294754764},{"_id":"themes/matery/source/libs/valine/av-min.js","hash":"04c6b2782ce4610c429563110f6a20a47432fc4c","modified":1634294754767},{"_id":"themes/matery/source/medias/avatars/mashiro.jpg","hash":"250e911c16eeb6acb1e6214ad3e6a3d762850a8e","modified":1634294754785},{"_id":"themes/matery/source/medias/avatars/zhangyi.jpg","hash":"c9130036aac9a7ac8d62e33550a9d64896cdc364","modified":1634294754797},{"_id":"themes/matery/source/medias/featureimages/13.jpg","hash":"d8cc7a730668943dcb0776cfa240a0cf76826363","modified":1634294754818},{"_id":"themes/matery/source/medias/featureimages/22.jpg","hash":"02ec4566225102778c3837f08b24de02faf460a6","modified":1634294754845},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1634294754742},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1634294754746},{"_id":"themes/matery/source/medias/banner/5.jpeg","hash":"90a12ea67f113c9927c931d9cf076ae28ddbf99c","modified":1634637606560},{"_id":"themes/matery/source/medias/featureimages/2.jpg","hash":"1d8863277d744e1a18a2778ac26041bda5b03a98","modified":1634294754836},{"_id":"themes/matery/source/medias/featureimages/3.jpg","hash":"ceb8e0c195a7fe7420334efa114e98cd0e1c6523","modified":1634294754860},{"_id":"themes/matery/source/medias/featureimages/28.jpg","hash":"c73036359640a67a8b17db7ba0e968c088957ab8","modified":1634294754859},{"_id":"themes/matery/source/medias/avatars/jitao.jpg","hash":"5934b9baccebccbc2be2ead5d84ad32dd41f9559","modified":1634294754780},{"_id":"themes/matery/source/medias/featureimages/12.jpg","hash":"c2892770fd5617418fd33d6f834879e05b2cdafd","modified":1634294754817},{"_id":"themes/matery/source/medias/featureimages/25.jpg","hash":"d0668539783fc615f14178644e486a6befb90c0c","modified":1634294754852},{"_id":"themes/matery/source/medias/featureimages/23.jpg","hash":"ee598933707f8bb98ecbf36925f24e8a1c4bd2d6","modified":1634294754847},{"_id":"themes/matery/source/medias/featureimages/26.jpg","hash":"c66a4e7a2e670b63759a091f9428ee7f971d7b56","modified":1634294754855},{"_id":"themes/matery/source/medias/featureimages/27.jpg","hash":"7ea6f890cc59def8b1c9f393e4ae77cd16c79aad","modified":1634294754856},{"_id":"themes/matery/source/medias/featureimages/6.jpg","hash":"698fc46e97428d73c9d4e3d254e88b9b66fb38cd","modified":1634294754870},{"_id":"themes/matery/source/medias/featureimages/7.jpg","hash":"bd400da9123424afe7ba6c839be9ad7697c1245b","modified":1634294754872},{"_id":"source/_posts/knowledge-graph/kg_tech.png","hash":"f9bb671889e1675f9dd0e93186350d7ebaf25c2e","modified":1638527334261},{"_id":"themes/matery/source/libs/awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1634294754740},{"_id":"themes/matery/source/medias/avatars/feibar.png","hash":"eceaefcbbca1bf49b582eaa649d311cf4fe69dd6","modified":1634294754774},{"_id":"themes/matery/source/medias/banner/4.jpeg","hash":"440e80ea43bb4db53db41cec086021c0b7536437","modified":1634637569132},{"_id":"themes/matery/source/medias/featureimages/17.jpg","hash":"11a6de283124964370dbfaf0e74f2f1e9ac8394d","modified":1634294754828},{"_id":"themes/matery/source/medias/featureimages/24.jpg","hash":"72bc68fb0673b84ab9f863d2979396cdc268a76c","modified":1634294754850},{"_id":"themes/matery/source/medias/music/avatars/daoshu.jpg","hash":"eee120fdf5ccbe86aa7d51826c4c773e76e6357f","modified":1634294754885},{"_id":"themes/matery/source/medias/avatars/jingjing.jpg","hash":"bfcab0139edb2509de984cb0a9b156879c355158","modified":1634294754778},{"_id":"themes/matery/source/medias/featureimages/16.jpg","hash":"0801e96a2f4cbd14b2ad44547e5ffbb23822e751","modified":1634294754827},{"_id":"themes/matery/source/medias/featureimages/18.jpg","hash":"c74ce6fa4eee122e147ec55532744f34a87ae2bf","modified":1634294754830},{"_id":"themes/matery/source/medias/featureimages/20.jpg","hash":"84ba9cf61045de789426eeb6333910266ce29b8c","modified":1634294754840},{"_id":"themes/matery/source/medias/featureimages/19.jpg","hash":"2a47d1123d9c4c6255b7b4817a582d2fa9aea808","modified":1634294754834},{"_id":"themes/matery/source/medias/featureimages/10.jpg","hash":"66de48d963e7f221931e550b2442da0cd40cbaa8","modified":1634294754812},{"_id":"themes/matery/source/medias/featureimages/11.jpg","hash":"2b30186c6d78ed76fa5f278be57290c1bd22c96a","modified":1634294754815},{"_id":"themes/matery/source/medias/featureimages/21.jpg","hash":"a77810cc2224446f5d4e1a857a8d480f21e81f83","modified":1634294754843},{"_id":"themes/matery/source/medias/banner/0.jpeg","hash":"1d279e1afa2d5306bc9f93d080159572c7c30af7","modified":1634637650138},{"_id":"themes/matery/source/medias/featureimages/1.jpg","hash":"f1d720039d654d693c32150c06c78cfc3663b0b4","modified":1634294754808},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1634294754744},{"_id":"themes/matery/source/medias/banner/2.jpeg","hash":"bf338cff6b9d60639ca2623d560c48309271c23d","modified":1634637593429},{"_id":"themes/matery/source/medias/featureimages/8.jpg","hash":"f81e97edf705ab45b989b2b15d6a13c005ccaa32","modified":1634294754877},{"_id":"themes/matery/source/libs/echarts/echarts.min.js","hash":"8789b5e4daf0029a6c88f238f10e54d01c4fce82","modified":1634294754754},{"_id":"source/_posts/knowledge-graph/kg_tech_stage.png","hash":"46528b7dcade1e21822e9356b5fb24ec50a1c6bd","modified":1638674493703},{"_id":"themes/matery/source/medias/featureimages/15.jpg","hash":"aff885598033614639944c7559b4849f883e2b34","modified":1634294754825},{"_id":"themes/matery/source/medias/featureimages/9.jpg","hash":"cd54b116609f5741cc7db0f7f49bf56ac356ddfb","modified":1634294754882},{"_id":"themes/matery/source/medias/featureimages/4.jpg","hash":"e06afe32a867f7a6e861618e0b5ac9d93cd71d05","modified":1634294754865}],"Category":[{"name":"数学","_id":"cl10m9kgi0003duwgtemtit2p"},{"name":"算法","_id":"cl10m9kgp0008duwgm5onissj"},{"name":"区块链","_id":"cl10m9kgr000dduwgt1s5av3o"},{"name":"NLP","parent":"cl10m9kgp0008duwgm5onissj","_id":"cl10m9kgx000sduwg2uxgle4s"},{"name":"数学","parent":"cl10m9kgp0008duwgm5onissj","_id":"cl10m9kgy000xduwgerlqoqr1"},{"name":"工程化","_id":"cl10m9kh00016duwg3gx75hj6"}],"Data":[{"_id":"musics","data":[{"name":"夜曲","artist":"周杰伦","url":"/medias/music/yequ.mp3","cover":"/medias/music/avatars/yequ.jpg"},{"name":"一路向北","artist":"周杰伦","url":"/medias/music/yiluxiangbei.mp3","cover":"/medias/music/avatars/yiluxiangbei.jpg"},{"name":"来自天堂的魔鬼","artist":"邓紫棋","url":"/medias/music/tiantangdemogui.mp3","cover":"/medias/music/avatars/tiantangdemogui.jpg"},{"name":"倒数","artist":"邓紫棋","url":"/medias/music/daoshu.mp3","cover":"/medias/music/avatars/daoshu.jpg"}]},{"_id":"friends","data":[{"name":"知乎专栏","url":"https://zhuanlan.zhihu.com/godweiyang","title":"访问主页","introduction":"算法码上来","avatar":"/medias/avatars/myzhihu.png"},{"name":"火山翻译","url":"https://translate.volcengine.cn","title":"访问主页","introduction":"提供全球领先的翻译技术与服务","avatar":"/medias/avatars/bytedtrans.png"},{"name":"AntNLP","url":"https://antnlp.org","title":"访问主页","introduction":"华东师范大学自然语言处理实验室欢迎您的加入！","avatar":"/medias/avatars/antnlp.ico"},{"name":"IDS²","url":"https://www.smart-dependable-sino-europe.institute","title":"访问主页","introduction":"中欧可靠智能软件联合实验室欢迎您的加入！","avatar":"/medias/avatars/ids2.jpg"},{"name":"孙长志","url":"https://www.czsun.site","title":"访问主页","introduction":"AntNLP博士大师兄！","avatar":"/medias/avatars/sunchangzhi.jpg"},{"name":"纪焘","url":"https://taoji.site","title":"访问主页","introduction":"AntNLP博士带明星！","avatar":"/medias/avatars/jitao.jpg"},{"name":"杜雨沛","url":"https://yupei-du.github.io/","title":"访问主页","introduction":"AntNLP唱跳RAP打篮球全能师兄！","avatar":"/medias/avatars/duyupei.jpg"},{"name":"0xbirdpwn","url":"https://0xbird.top/","title":"访问主页","introduction":"十步杀一人，千里不留行，事了拂衣去，深藏功与名。","avatar":"/medias/avatars/0xbird.png"},{"name":"李佳倩的博客","url":"https://jiaqianlee.com/","title":"访问主页","introduction":"一只小白的成长之路！","avatar":"/medias/avatars/lijiaqian.png"},{"name":"kewlgrl","url":"https://blog.csdn.net/MIKASA3","title":"访问主页","introduction":"好大一只咸鱼哇","avatar":"/medias/avatars/kewlgrl.jpg"},{"name":"Think Far Blog","url":"https://wuli749826.github.io","title":"访问主页","introduction":"我曾经拥有这一切，转眼都飘散如烟。","avatar":"/medias/avatars/gsy.jpg"},{"name":"望城风景","url":"https://www.itaowei.cn/","title":"访问主页","introduction":"用力活过的日子，才配得上此刻的缅怀。","avatar":"/medias/avatars/taowei.jpg"},{"name":"jxtxzzw空间","url":"https://www.jxtxzzw.com/wordpress","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/zzw.jpg"},{"name":"DREAMWINGS","url":"https://www.dreamwings.cn/","title":"访问主页","introduction":"夢はそこでないと、私の権利である","avatar":"/medias/avatars/qianqian.png"},{"name":"ElaineLv","url":"https://www.elainelv.com/","title":"访问主页","introduction":"Stay hungry, Stay foolish","avatar":"/medias/avatars/lyn-draw.jpg"},{"name":"Subject_No_i","url":"https://subjectnoi.github.io","title":"访问主页","introduction":"在原七海 中野三玖 中野二乃 樱岛麻衣的老公","avatar":"/medias/avatars/lzh.png"},{"name":"菁菁","url":"https://angericky.github.io/","title":"访问主页","introduction":"做什么都是因为喜欢","avatar":"/medias/avatars/jingjing.jpg"},{"name":"Sweet-Q","url":"https://sweet-q.github.io","title":"访问主页","introduction":"华东师范大学数学系","avatar":"/medias/avatars/babyq.png"},{"name":"伟大的蚊子","url":"https://www.cnblogs.com/cww97/","title":"访问主页","introduction":"鼓楼的夜晚时间匆匆","avatar":"/medias/avatars/cww97.jpg"},{"name":"Fun4wut","url":"https://blog.fun4go.top","title":"访问主页","introduction":"菜鸡欢迎大佬的光顾","avatar":"/medias/avatars/fun4go.png"},{"name":"Hael Chan","url":"https://haelchan.me/","title":"访问主页","introduction":"浙江大学 & NLP & ML","avatar":"/medias/avatars/hael.jpg"},{"name":"happygirlzt","url":"https://www.happygirlzt.com","title":"访问主页","introduction":"A Backend Engineer","avatar":"/medias/avatars/zhangting.jpg"},{"name":"星空无限","url":"https://liyangzone.com","title":"访问主页","introduction":"前端开发，死飞大佬。分享技术，分享生活。","avatar":"/medias/avatars/liyangzone.jpg"},{"name":"Mashiro","url":"https://2heng.xin/","title":"访问主页","introduction":"樱花庄的白猫","avatar":"/medias/avatars/mashiro.jpg"},{"name":"hzwer","url":"https://hzwer.com/","title":"访问主页","introduction":"北京大学计算机系","avatar":"/medias/avatars/hzwer.jpg"},{"name":"MPY634","url":"https://mpy634.cn/","title":"访问主页","introduction":"摸鱼，永无止境。","avatar":"/medias/avatars/mpy634.png"},{"name":"徐铭辰的博客","url":"https://michaelxucs.com","title":"访问主页","introduction":"埃克塞特大学计算机系","avatar":"/medias/avatars/michael.jpg"},{"name":"Mizunashi","url":"https://mizunashi.me","title":"访问主页","introduction":"欢迎大佬们来玩","avatar":"/medias/avatars/mizunashi.png"},{"name":"xuzhongyou","url":"https://xuzhongyou.github.io/","title":"访问主页","introduction":"我哽咽道：你是赵默笙，可我不是何以琛啊。","avatar":"/medias/avatars/xuzhongyou.jpg"},{"name":"zerol","url":"https://zerol.me/","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/huaji.jpg"},{"name":"Zhang Yi","url":"https://codewithzhangyi.com/","title":"访问主页","introduction":"Coding is the New Sexy","avatar":"/medias/avatars/zhangyi.jpg"},{"name":"科学空间","url":"https://spaces.ac.cn/","title":"访问主页","introduction":"中山大学基础数学研究生","avatar":"/medias/avatars/spacesac.png"},{"name":"lucifer的博客","url":"https://lucifer.ren/blog/","title":"访问主页","introduction":"一个脑洞很大的程序员。","avatar":"https://tva1.sinaimg.cn/large/006tNbRwly1ga7ognflh9j30b40b4q3w.jpg"},{"name":"钱栋伟","url":"https://sscjwdyzdw.club","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/qiandongwei.jpg"},{"name":"CJ Blog","url":"https://chrisju.cn/","title":"访问主页","introduction":"Failing means foolish.","avatar":"/medias/avatars/mouse.jpg"},{"name":"Tawn","url":"https://tawn0000.github.io/","title":"访问主页","introduction":"JNU ACMer","avatar":"/medias/avatars/tawn.jpg"},{"name":"Master X","url":"https://masterx.top/","title":"访问主页","introduction":"ECNU&ML&DL","avatar":"/medias/avatars/masterx.jpg"},{"name":"分享客","url":"https://sharerdiary.com/","title":"访问主页","introduction":"爱生活，爱分享！","avatar":"/medias/avatars/yezijie.png"},{"name":"taotao","url":"https://zouzhitao.github.io","title":"访问主页","introduction":"taotao 码字的地方","avatar":"/medias/avatars/taotao.jpg"},{"name":"Xiejiadong","url":"https://xiejiadong.com","title":"访问主页","introduction":"Xiejiadong's blog","avatar":"/medias/avatars/xiejiadong.jpg"},{"name":"飞吧","url":"https://fei.bar","title":"访问主页","introduction":"啓飞的个人博客","avatar":"/medias/avatars/feibar.png"},{"name":"ajin","url":"https://ajin.cloud","title":"访问主页","introduction":"Always be enthusiastic","avatar":"/medias/avatars/ajin.jpg"},{"name":"Hiyoung","url":"https://hiyoungai.com/","title":"访问主页","introduction":"宠辱不惊，看庭前花开花落；去留无意，望天空云卷云舒。","avatar":"https://cdn.jsdelivr.net/gh/hiyoung123/cdn/img/avatar.jpg"},{"name":"无言的博客","url":"https://www.yzplove.top","title":"访问主页","introduction":"代码真是越敲越香","avatar":"https://cdn.jsdelivr.net/gh/yzp-99/yzp-99.github.io/medias/avatars/me.jpg"},{"name":"Naixin Zhang","url":"https://naixinzhang.github.io/","title":"访问主页","introduction":"Econ Master | Data Analyst/scientist Candidate","avatar":"https://naixinzhang.github.io/medias/avatars/avatar.jpg"},{"name":"帅张的梦呓","url":"https://ishuaizhang.com","title":"访问主页","introduction":"XDUer","avatar":"https://ishuaizhang.com/medias/avatars/avatar.jpg"},{"name":"Gatsby’s blog","url":"https://a347807131.github.io/","title":"访问主页","introduction":"Nothing perfect, Noting special.","avatar":"https://a347807131.github.io/medias/avatar.gif"},{"name":"宇宙湾","url":"https://yuzhouwan.com/","title":"访问主页","introduction":"主要是大数据和人工智能的原创文章。","avatar":"https://yuzhouwan.com/yuzhouwan_logo_128x128.ico"},{"name":"Dotnet9的博客","url":"https://dotnet9.com","title":"访问主页","introduction":"一个热衷于互联网分享精神的个人博客站点","avatar":"https://img.dotnet9.com/logo-foot.png"},{"name":"Macchiato","url":"https://hcj123123.oschina.io","title":"访问主页","introduction":"java学习者","avatar":"https://y.gtimg.cn/music/photo_new/T002R300x300M000002qD7gF3fW0JL_1.jpg?max_age=2592000"},{"name":"过客~励む","url":"https://yafine-blog.cn","title":"访问主页","introduction":"你现在的努力，是为了以后有更多的选择。","avatar":"https://yafine-blog.cn/medias/avatar.jpg"},{"name":"meteorsh","url":"https://weisenhui.top","title":"访问主页","introduction":"Data Science & Engineering","avatar":"https://weisenhui.top/medias/avatar.jpg"},{"name":"Kuroko","url":"https://kuroko.info","title":"访问主页","introduction":"浓烟下的诗歌电台","avatar":"http://kuroko.info/wp-content/uploads/2020/11/2.jpg"}]}],"Page":[{"title":"404","date":"2021-07-19T08:41:10.000Z","type":"404","layout":"404","description":"走错地方咯 :(","_content":"","source":"404.md","raw":"---\ntitle: 404\ndate: 2021-07-19 16:41:10\ntype: \"404\"\nlayout: \"404\"\ndescription: \"走错地方咯 :(\"\n---\n","updated":"2021-12-03T08:03:41.816Z","path":"404.html","comments":1,"_id":"cl10m9kfg0000duwggl4n0ysj","content":"","site":{"data":{"musics":[{"name":"夜曲","artist":"周杰伦","url":"/medias/music/yequ.mp3","cover":"/medias/music/avatars/yequ.jpg"},{"name":"一路向北","artist":"周杰伦","url":"/medias/music/yiluxiangbei.mp3","cover":"/medias/music/avatars/yiluxiangbei.jpg"},{"name":"来自天堂的魔鬼","artist":"邓紫棋","url":"/medias/music/tiantangdemogui.mp3","cover":"/medias/music/avatars/tiantangdemogui.jpg"},{"name":"倒数","artist":"邓紫棋","url":"/medias/music/daoshu.mp3","cover":"/medias/music/avatars/daoshu.jpg"}],"friends":[{"name":"知乎专栏","url":"https://zhuanlan.zhihu.com/godweiyang","title":"访问主页","introduction":"算法码上来","avatar":"/medias/avatars/myzhihu.png"},{"name":"火山翻译","url":"https://translate.volcengine.cn","title":"访问主页","introduction":"提供全球领先的翻译技术与服务","avatar":"/medias/avatars/bytedtrans.png"},{"name":"AntNLP","url":"https://antnlp.org","title":"访问主页","introduction":"华东师范大学自然语言处理实验室欢迎您的加入！","avatar":"/medias/avatars/antnlp.ico"},{"name":"IDS²","url":"https://www.smart-dependable-sino-europe.institute","title":"访问主页","introduction":"中欧可靠智能软件联合实验室欢迎您的加入！","avatar":"/medias/avatars/ids2.jpg"},{"name":"孙长志","url":"https://www.czsun.site","title":"访问主页","introduction":"AntNLP博士大师兄！","avatar":"/medias/avatars/sunchangzhi.jpg"},{"name":"纪焘","url":"https://taoji.site","title":"访问主页","introduction":"AntNLP博士带明星！","avatar":"/medias/avatars/jitao.jpg"},{"name":"杜雨沛","url":"https://yupei-du.github.io/","title":"访问主页","introduction":"AntNLP唱跳RAP打篮球全能师兄！","avatar":"/medias/avatars/duyupei.jpg"},{"name":"0xbirdpwn","url":"https://0xbird.top/","title":"访问主页","introduction":"十步杀一人，千里不留行，事了拂衣去，深藏功与名。","avatar":"/medias/avatars/0xbird.png"},{"name":"李佳倩的博客","url":"https://jiaqianlee.com/","title":"访问主页","introduction":"一只小白的成长之路！","avatar":"/medias/avatars/lijiaqian.png"},{"name":"kewlgrl","url":"https://blog.csdn.net/MIKASA3","title":"访问主页","introduction":"好大一只咸鱼哇","avatar":"/medias/avatars/kewlgrl.jpg"},{"name":"Think Far Blog","url":"https://wuli749826.github.io","title":"访问主页","introduction":"我曾经拥有这一切，转眼都飘散如烟。","avatar":"/medias/avatars/gsy.jpg"},{"name":"望城风景","url":"https://www.itaowei.cn/","title":"访问主页","introduction":"用力活过的日子，才配得上此刻的缅怀。","avatar":"/medias/avatars/taowei.jpg"},{"name":"jxtxzzw空间","url":"https://www.jxtxzzw.com/wordpress","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/zzw.jpg"},{"name":"DREAMWINGS","url":"https://www.dreamwings.cn/","title":"访问主页","introduction":"夢はそこでないと、私の権利である","avatar":"/medias/avatars/qianqian.png"},{"name":"ElaineLv","url":"https://www.elainelv.com/","title":"访问主页","introduction":"Stay hungry, Stay foolish","avatar":"/medias/avatars/lyn-draw.jpg"},{"name":"Subject_No_i","url":"https://subjectnoi.github.io","title":"访问主页","introduction":"在原七海 中野三玖 中野二乃 樱岛麻衣的老公","avatar":"/medias/avatars/lzh.png"},{"name":"菁菁","url":"https://angericky.github.io/","title":"访问主页","introduction":"做什么都是因为喜欢","avatar":"/medias/avatars/jingjing.jpg"},{"name":"Sweet-Q","url":"https://sweet-q.github.io","title":"访问主页","introduction":"华东师范大学数学系","avatar":"/medias/avatars/babyq.png"},{"name":"伟大的蚊子","url":"https://www.cnblogs.com/cww97/","title":"访问主页","introduction":"鼓楼的夜晚时间匆匆","avatar":"/medias/avatars/cww97.jpg"},{"name":"Fun4wut","url":"https://blog.fun4go.top","title":"访问主页","introduction":"菜鸡欢迎大佬的光顾","avatar":"/medias/avatars/fun4go.png"},{"name":"Hael Chan","url":"https://haelchan.me/","title":"访问主页","introduction":"浙江大学 & NLP & ML","avatar":"/medias/avatars/hael.jpg"},{"name":"happygirlzt","url":"https://www.happygirlzt.com","title":"访问主页","introduction":"A Backend Engineer","avatar":"/medias/avatars/zhangting.jpg"},{"name":"星空无限","url":"https://liyangzone.com","title":"访问主页","introduction":"前端开发，死飞大佬。分享技术，分享生活。","avatar":"/medias/avatars/liyangzone.jpg"},{"name":"Mashiro","url":"https://2heng.xin/","title":"访问主页","introduction":"樱花庄的白猫","avatar":"/medias/avatars/mashiro.jpg"},{"name":"hzwer","url":"https://hzwer.com/","title":"访问主页","introduction":"北京大学计算机系","avatar":"/medias/avatars/hzwer.jpg"},{"name":"MPY634","url":"https://mpy634.cn/","title":"访问主页","introduction":"摸鱼，永无止境。","avatar":"/medias/avatars/mpy634.png"},{"name":"徐铭辰的博客","url":"https://michaelxucs.com","title":"访问主页","introduction":"埃克塞特大学计算机系","avatar":"/medias/avatars/michael.jpg"},{"name":"Mizunashi","url":"https://mizunashi.me","title":"访问主页","introduction":"欢迎大佬们来玩","avatar":"/medias/avatars/mizunashi.png"},{"name":"xuzhongyou","url":"https://xuzhongyou.github.io/","title":"访问主页","introduction":"我哽咽道：你是赵默笙，可我不是何以琛啊。","avatar":"/medias/avatars/xuzhongyou.jpg"},{"name":"zerol","url":"https://zerol.me/","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/huaji.jpg"},{"name":"Zhang Yi","url":"https://codewithzhangyi.com/","title":"访问主页","introduction":"Coding is the New Sexy","avatar":"/medias/avatars/zhangyi.jpg"},{"name":"科学空间","url":"https://spaces.ac.cn/","title":"访问主页","introduction":"中山大学基础数学研究生","avatar":"/medias/avatars/spacesac.png"},{"name":"lucifer的博客","url":"https://lucifer.ren/blog/","title":"访问主页","introduction":"一个脑洞很大的程序员。","avatar":"https://tva1.sinaimg.cn/large/006tNbRwly1ga7ognflh9j30b40b4q3w.jpg"},{"name":"钱栋伟","url":"https://sscjwdyzdw.club","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/qiandongwei.jpg"},{"name":"CJ Blog","url":"https://chrisju.cn/","title":"访问主页","introduction":"Failing means foolish.","avatar":"/medias/avatars/mouse.jpg"},{"name":"Tawn","url":"https://tawn0000.github.io/","title":"访问主页","introduction":"JNU ACMer","avatar":"/medias/avatars/tawn.jpg"},{"name":"Master X","url":"https://masterx.top/","title":"访问主页","introduction":"ECNU&ML&DL","avatar":"/medias/avatars/masterx.jpg"},{"name":"分享客","url":"https://sharerdiary.com/","title":"访问主页","introduction":"爱生活，爱分享！","avatar":"/medias/avatars/yezijie.png"},{"name":"taotao","url":"https://zouzhitao.github.io","title":"访问主页","introduction":"taotao 码字的地方","avatar":"/medias/avatars/taotao.jpg"},{"name":"Xiejiadong","url":"https://xiejiadong.com","title":"访问主页","introduction":"Xiejiadong's blog","avatar":"/medias/avatars/xiejiadong.jpg"},{"name":"飞吧","url":"https://fei.bar","title":"访问主页","introduction":"啓飞的个人博客","avatar":"/medias/avatars/feibar.png"},{"name":"ajin","url":"https://ajin.cloud","title":"访问主页","introduction":"Always be enthusiastic","avatar":"/medias/avatars/ajin.jpg"},{"name":"Hiyoung","url":"https://hiyoungai.com/","title":"访问主页","introduction":"宠辱不惊，看庭前花开花落；去留无意，望天空云卷云舒。","avatar":"https://cdn.jsdelivr.net/gh/hiyoung123/cdn/img/avatar.jpg"},{"name":"无言的博客","url":"https://www.yzplove.top","title":"访问主页","introduction":"代码真是越敲越香","avatar":"https://cdn.jsdelivr.net/gh/yzp-99/yzp-99.github.io/medias/avatars/me.jpg"},{"name":"Naixin Zhang","url":"https://naixinzhang.github.io/","title":"访问主页","introduction":"Econ Master | Data Analyst/scientist Candidate","avatar":"https://naixinzhang.github.io/medias/avatars/avatar.jpg"},{"name":"帅张的梦呓","url":"https://ishuaizhang.com","title":"访问主页","introduction":"XDUer","avatar":"https://ishuaizhang.com/medias/avatars/avatar.jpg"},{"name":"Gatsby’s blog","url":"https://a347807131.github.io/","title":"访问主页","introduction":"Nothing perfect, Noting special.","avatar":"https://a347807131.github.io/medias/avatar.gif"},{"name":"宇宙湾","url":"https://yuzhouwan.com/","title":"访问主页","introduction":"主要是大数据和人工智能的原创文章。","avatar":"https://yuzhouwan.com/yuzhouwan_logo_128x128.ico"},{"name":"Dotnet9的博客","url":"https://dotnet9.com","title":"访问主页","introduction":"一个热衷于互联网分享精神的个人博客站点","avatar":"https://img.dotnet9.com/logo-foot.png"},{"name":"Macchiato","url":"https://hcj123123.oschina.io","title":"访问主页","introduction":"java学习者","avatar":"https://y.gtimg.cn/music/photo_new/T002R300x300M000002qD7gF3fW0JL_1.jpg?max_age=2592000"},{"name":"过客~励む","url":"https://yafine-blog.cn","title":"访问主页","introduction":"你现在的努力，是为了以后有更多的选择。","avatar":"https://yafine-blog.cn/medias/avatar.jpg"},{"name":"meteorsh","url":"https://weisenhui.top","title":"访问主页","introduction":"Data Science & Engineering","avatar":"https://weisenhui.top/medias/avatar.jpg"},{"name":"Kuroko","url":"https://kuroko.info","title":"访问主页","introduction":"浓烟下的诗歌电台","avatar":"http://kuroko.info/wp-content/uploads/2020/11/2.jpg"}]}},"excerpt":"","more":""},{"title":"about","date":"2019-07-19T08:41:10.000Z","type":"about","layout":"about","mathjax":true,"_content":"\n\n## CV\n[中文版](/medias/files/cv-zh.pdf)\n[English Version](/medias/files/cv-en.pdf)\n\n## 教育背景\n* <b>硕士 华东师范大学 计算机科学与技术</b>\n2018/06 - 至今\n *均分：91.5/100*\n* <b>本科 华东师范大学 计算机科学与技术</b>\n2014/09 - 2018/06\n *排名：1/110*\n\n## 研究方向\n主要研究**成分句法分析、依存句法分析、机器翻译**等方向，\n对**序列标注、语言模型、实体关系抽取、迁移学习**等方向也感兴趣。\n\n## 实习经历\n* <b>字节跳动AI Lab NLP算法工程师</b>\n2020/05 - 至今\n主要研究机器翻译模型的压缩与加速。\n利用参数共享、词向量分解、量化、蒸馏等模型压缩技术，减小模型的体积，最终部署到移动端上。\n最终实现模型体积压缩20倍，同时效果基本无损。\n\n## 学术成果\n* **A Span-based Linearization for Constituent Trees**\n *Yang Wei, Yuanbin Wu and Man Lan*， **ACL 2020**\n提出了一种成分句法树的序列化表示方法。\n基于该表示方法，模型的解码复杂度从O(n^3)降低到了O(n log n)，\n实际解码速度从30句/秒提高到了150句/秒，\n同时效果没有任何损失。\n\n## 获奖情况\n### 2020\n* <b>国家奖学金（硕士）</b>\n研二学年\n\n### 2017\n* <b>金牌</b>\nACM-ICPC全国邀请赛（陕西）\n* <b>团体一等奖</b>\n中国高校计算机大赛-团体程序设计天梯赛\n* <b>高校一等奖</b>\n中国高校计算机大赛-团体程序设计天梯赛\n* <b>特等奖学金</b>\n大三学年\n\n### 2016\n* <b>银牌</b>\nACM-ICPC亚洲区域赛（青岛）\n* <b>铜牌</b>\nACM-CCPC总决赛（宁波）\n* <b>铜牌</b>\nACM-CCPC（杭州）\n* <b>一等奖学金</b>\n大二学年\n\n### 2015\n* <b>铜牌</b>\nACM-ICPC亚洲区域赛（上海）\n* <b>铜牌</b>\nACM-ICPC上海大都会赛\n* <b>国家奖学金</b>\n大一学年\n\n## 联系方式\n* <b>电子邮箱</b>\ngodweiyang@gmail.com\n792321264@qq.com\n* <b>地址</b>\n上海市普陀区中山北路3663号理科大楼B906，邮编200062\n* <b>微信</b>\ngodweiyang\n* <b>QQ 技术交流群</b>\n864832264\n\n![](/medias/contact.jpg)","source":"about/index.md","raw":"---\ntitle: about\ndate: 2019-07-19 16:41:10\ntype: \"about\"\nlayout: \"about\"\nmathjax: true\n---\n\n\n## CV\n[中文版](/medias/files/cv-zh.pdf)\n[English Version](/medias/files/cv-en.pdf)\n\n## 教育背景\n* <b>硕士 华东师范大学 计算机科学与技术</b>\n2018/06 - 至今\n *均分：91.5/100*\n* <b>本科 华东师范大学 计算机科学与技术</b>\n2014/09 - 2018/06\n *排名：1/110*\n\n## 研究方向\n主要研究**成分句法分析、依存句法分析、机器翻译**等方向，\n对**序列标注、语言模型、实体关系抽取、迁移学习**等方向也感兴趣。\n\n## 实习经历\n* <b>字节跳动AI Lab NLP算法工程师</b>\n2020/05 - 至今\n主要研究机器翻译模型的压缩与加速。\n利用参数共享、词向量分解、量化、蒸馏等模型压缩技术，减小模型的体积，最终部署到移动端上。\n最终实现模型体积压缩20倍，同时效果基本无损。\n\n## 学术成果\n* **A Span-based Linearization for Constituent Trees**\n *Yang Wei, Yuanbin Wu and Man Lan*， **ACL 2020**\n提出了一种成分句法树的序列化表示方法。\n基于该表示方法，模型的解码复杂度从O(n^3)降低到了O(n log n)，\n实际解码速度从30句/秒提高到了150句/秒，\n同时效果没有任何损失。\n\n## 获奖情况\n### 2020\n* <b>国家奖学金（硕士）</b>\n研二学年\n\n### 2017\n* <b>金牌</b>\nACM-ICPC全国邀请赛（陕西）\n* <b>团体一等奖</b>\n中国高校计算机大赛-团体程序设计天梯赛\n* <b>高校一等奖</b>\n中国高校计算机大赛-团体程序设计天梯赛\n* <b>特等奖学金</b>\n大三学年\n\n### 2016\n* <b>银牌</b>\nACM-ICPC亚洲区域赛（青岛）\n* <b>铜牌</b>\nACM-CCPC总决赛（宁波）\n* <b>铜牌</b>\nACM-CCPC（杭州）\n* <b>一等奖学金</b>\n大二学年\n\n### 2015\n* <b>铜牌</b>\nACM-ICPC亚洲区域赛（上海）\n* <b>铜牌</b>\nACM-ICPC上海大都会赛\n* <b>国家奖学金</b>\n大一学年\n\n## 联系方式\n* <b>电子邮箱</b>\ngodweiyang@gmail.com\n792321264@qq.com\n* <b>地址</b>\n上海市普陀区中山北路3663号理科大楼B906，邮编200062\n* <b>微信</b>\ngodweiyang\n* <b>QQ 技术交流群</b>\n864832264\n\n![](/medias/contact.jpg)","updated":"2021-10-15T10:45:54.721Z","path":"about/index.html","comments":1,"_id":"cl10m9khm001zduwgeo85uncp","content":"<h2 id=\"CV\"><a href=\"#CV\" class=\"headerlink\" title=\"CV\"></a>CV</h2><p><a href=\"/medias/files/cv-zh.pdf\">中文版</a><br><a href=\"/medias/files/cv-en.pdf\">English Version</a></p>\n<h2 id=\"教育背景\"><a href=\"#教育背景\" class=\"headerlink\" title=\"教育背景\"></a>教育背景</h2><ul>\n<li><b>硕士 华东师范大学 计算机科学与技术</b><br>2018/06 - 至今<br><em>均分：91.5/100</em></li>\n<li><b>本科 华东师范大学 计算机科学与技术</b><br>2014/09 - 2018/06<br><em>排名：1/110</em></li>\n</ul>\n<h2 id=\"研究方向\"><a href=\"#研究方向\" class=\"headerlink\" title=\"研究方向\"></a>研究方向</h2><p>主要研究<strong>成分句法分析、依存句法分析、机器翻译</strong>等方向，<br>对<strong>序列标注、语言模型、实体关系抽取、迁移学习</strong>等方向也感兴趣。</p>\n<h2 id=\"实习经历\"><a href=\"#实习经历\" class=\"headerlink\" title=\"实习经历\"></a>实习经历</h2><ul>\n<li><b>字节跳动AI Lab NLP算法工程师</b><br>2020/05 - 至今<br>主要研究机器翻译模型的压缩与加速。<br>利用参数共享、词向量分解、量化、蒸馏等模型压缩技术，减小模型的体积，最终部署到移动端上。<br>最终实现模型体积压缩20倍，同时效果基本无损。</li>\n</ul>\n<h2 id=\"学术成果\"><a href=\"#学术成果\" class=\"headerlink\" title=\"学术成果\"></a>学术成果</h2><ul>\n<li><strong>A Span-based Linearization for Constituent Trees</strong><br><em>Yang Wei, Yuanbin Wu and Man Lan</em>， <strong>ACL 2020</strong><br>提出了一种成分句法树的序列化表示方法。<br>基于该表示方法，模型的解码复杂度从O(n^3)降低到了O(n log n)，<br>实际解码速度从30句/秒提高到了150句/秒，<br>同时效果没有任何损失。</li>\n</ul>\n<h2 id=\"获奖情况\"><a href=\"#获奖情况\" class=\"headerlink\" title=\"获奖情况\"></a>获奖情况</h2><h3 id=\"2020\"><a href=\"#2020\" class=\"headerlink\" title=\"2020\"></a>2020</h3><ul>\n<li><b>国家奖学金（硕士）</b><br>研二学年</li>\n</ul>\n<h3 id=\"2017\"><a href=\"#2017\" class=\"headerlink\" title=\"2017\"></a>2017</h3><ul>\n<li><b>金牌</b><br>ACM-ICPC全国邀请赛（陕西）</li>\n<li><b>团体一等奖</b><br>中国高校计算机大赛-团体程序设计天梯赛</li>\n<li><b>高校一等奖</b><br>中国高校计算机大赛-团体程序设计天梯赛</li>\n<li><b>特等奖学金</b><br>大三学年</li>\n</ul>\n<h3 id=\"2016\"><a href=\"#2016\" class=\"headerlink\" title=\"2016\"></a>2016</h3><ul>\n<li><b>银牌</b><br>ACM-ICPC亚洲区域赛（青岛）</li>\n<li><b>铜牌</b><br>ACM-CCPC总决赛（宁波）</li>\n<li><b>铜牌</b><br>ACM-CCPC（杭州）</li>\n<li><b>一等奖学金</b><br>大二学年</li>\n</ul>\n<h3 id=\"2015\"><a href=\"#2015\" class=\"headerlink\" title=\"2015\"></a>2015</h3><ul>\n<li><b>铜牌</b><br>ACM-ICPC亚洲区域赛（上海）</li>\n<li><b>铜牌</b><br>ACM-ICPC上海大都会赛</li>\n<li><b>国家奖学金</b><br>大一学年</li>\n</ul>\n<h2 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h2><ul>\n<li><b>电子邮箱</b><br><a href=\"mailto:godweiyang@gmail.com\" target=\"_blank\" rel=\"noopener\">godweiyang@gmail.com</a><br><a href=\"mailto:792321264@qq.com\" target=\"_blank\" rel=\"noopener\">792321264@qq.com</a></li>\n<li><b>地址</b><br>上海市普陀区中山北路3663号理科大楼B906，邮编200062</li>\n<li><b>微信</b><br>godweiyang</li>\n<li><b>QQ 技术交流群</b><br>864832264</li>\n</ul>\n<p><img src=\"/medias/contact.jpg\" alt></p>\n","site":{"data":{"musics":[{"name":"夜曲","artist":"周杰伦","url":"/medias/music/yequ.mp3","cover":"/medias/music/avatars/yequ.jpg"},{"name":"一路向北","artist":"周杰伦","url":"/medias/music/yiluxiangbei.mp3","cover":"/medias/music/avatars/yiluxiangbei.jpg"},{"name":"来自天堂的魔鬼","artist":"邓紫棋","url":"/medias/music/tiantangdemogui.mp3","cover":"/medias/music/avatars/tiantangdemogui.jpg"},{"name":"倒数","artist":"邓紫棋","url":"/medias/music/daoshu.mp3","cover":"/medias/music/avatars/daoshu.jpg"}],"friends":[{"name":"知乎专栏","url":"https://zhuanlan.zhihu.com/godweiyang","title":"访问主页","introduction":"算法码上来","avatar":"/medias/avatars/myzhihu.png"},{"name":"火山翻译","url":"https://translate.volcengine.cn","title":"访问主页","introduction":"提供全球领先的翻译技术与服务","avatar":"/medias/avatars/bytedtrans.png"},{"name":"AntNLP","url":"https://antnlp.org","title":"访问主页","introduction":"华东师范大学自然语言处理实验室欢迎您的加入！","avatar":"/medias/avatars/antnlp.ico"},{"name":"IDS²","url":"https://www.smart-dependable-sino-europe.institute","title":"访问主页","introduction":"中欧可靠智能软件联合实验室欢迎您的加入！","avatar":"/medias/avatars/ids2.jpg"},{"name":"孙长志","url":"https://www.czsun.site","title":"访问主页","introduction":"AntNLP博士大师兄！","avatar":"/medias/avatars/sunchangzhi.jpg"},{"name":"纪焘","url":"https://taoji.site","title":"访问主页","introduction":"AntNLP博士带明星！","avatar":"/medias/avatars/jitao.jpg"},{"name":"杜雨沛","url":"https://yupei-du.github.io/","title":"访问主页","introduction":"AntNLP唱跳RAP打篮球全能师兄！","avatar":"/medias/avatars/duyupei.jpg"},{"name":"0xbirdpwn","url":"https://0xbird.top/","title":"访问主页","introduction":"十步杀一人，千里不留行，事了拂衣去，深藏功与名。","avatar":"/medias/avatars/0xbird.png"},{"name":"李佳倩的博客","url":"https://jiaqianlee.com/","title":"访问主页","introduction":"一只小白的成长之路！","avatar":"/medias/avatars/lijiaqian.png"},{"name":"kewlgrl","url":"https://blog.csdn.net/MIKASA3","title":"访问主页","introduction":"好大一只咸鱼哇","avatar":"/medias/avatars/kewlgrl.jpg"},{"name":"Think Far Blog","url":"https://wuli749826.github.io","title":"访问主页","introduction":"我曾经拥有这一切，转眼都飘散如烟。","avatar":"/medias/avatars/gsy.jpg"},{"name":"望城风景","url":"https://www.itaowei.cn/","title":"访问主页","introduction":"用力活过的日子，才配得上此刻的缅怀。","avatar":"/medias/avatars/taowei.jpg"},{"name":"jxtxzzw空间","url":"https://www.jxtxzzw.com/wordpress","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/zzw.jpg"},{"name":"DREAMWINGS","url":"https://www.dreamwings.cn/","title":"访问主页","introduction":"夢はそこでないと、私の権利である","avatar":"/medias/avatars/qianqian.png"},{"name":"ElaineLv","url":"https://www.elainelv.com/","title":"访问主页","introduction":"Stay hungry, Stay foolish","avatar":"/medias/avatars/lyn-draw.jpg"},{"name":"Subject_No_i","url":"https://subjectnoi.github.io","title":"访问主页","introduction":"在原七海 中野三玖 中野二乃 樱岛麻衣的老公","avatar":"/medias/avatars/lzh.png"},{"name":"菁菁","url":"https://angericky.github.io/","title":"访问主页","introduction":"做什么都是因为喜欢","avatar":"/medias/avatars/jingjing.jpg"},{"name":"Sweet-Q","url":"https://sweet-q.github.io","title":"访问主页","introduction":"华东师范大学数学系","avatar":"/medias/avatars/babyq.png"},{"name":"伟大的蚊子","url":"https://www.cnblogs.com/cww97/","title":"访问主页","introduction":"鼓楼的夜晚时间匆匆","avatar":"/medias/avatars/cww97.jpg"},{"name":"Fun4wut","url":"https://blog.fun4go.top","title":"访问主页","introduction":"菜鸡欢迎大佬的光顾","avatar":"/medias/avatars/fun4go.png"},{"name":"Hael Chan","url":"https://haelchan.me/","title":"访问主页","introduction":"浙江大学 & NLP & ML","avatar":"/medias/avatars/hael.jpg"},{"name":"happygirlzt","url":"https://www.happygirlzt.com","title":"访问主页","introduction":"A Backend Engineer","avatar":"/medias/avatars/zhangting.jpg"},{"name":"星空无限","url":"https://liyangzone.com","title":"访问主页","introduction":"前端开发，死飞大佬。分享技术，分享生活。","avatar":"/medias/avatars/liyangzone.jpg"},{"name":"Mashiro","url":"https://2heng.xin/","title":"访问主页","introduction":"樱花庄的白猫","avatar":"/medias/avatars/mashiro.jpg"},{"name":"hzwer","url":"https://hzwer.com/","title":"访问主页","introduction":"北京大学计算机系","avatar":"/medias/avatars/hzwer.jpg"},{"name":"MPY634","url":"https://mpy634.cn/","title":"访问主页","introduction":"摸鱼，永无止境。","avatar":"/medias/avatars/mpy634.png"},{"name":"徐铭辰的博客","url":"https://michaelxucs.com","title":"访问主页","introduction":"埃克塞特大学计算机系","avatar":"/medias/avatars/michael.jpg"},{"name":"Mizunashi","url":"https://mizunashi.me","title":"访问主页","introduction":"欢迎大佬们来玩","avatar":"/medias/avatars/mizunashi.png"},{"name":"xuzhongyou","url":"https://xuzhongyou.github.io/","title":"访问主页","introduction":"我哽咽道：你是赵默笙，可我不是何以琛啊。","avatar":"/medias/avatars/xuzhongyou.jpg"},{"name":"zerol","url":"https://zerol.me/","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/huaji.jpg"},{"name":"Zhang Yi","url":"https://codewithzhangyi.com/","title":"访问主页","introduction":"Coding is the New Sexy","avatar":"/medias/avatars/zhangyi.jpg"},{"name":"科学空间","url":"https://spaces.ac.cn/","title":"访问主页","introduction":"中山大学基础数学研究生","avatar":"/medias/avatars/spacesac.png"},{"name":"lucifer的博客","url":"https://lucifer.ren/blog/","title":"访问主页","introduction":"一个脑洞很大的程序员。","avatar":"https://tva1.sinaimg.cn/large/006tNbRwly1ga7ognflh9j30b40b4q3w.jpg"},{"name":"钱栋伟","url":"https://sscjwdyzdw.club","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/qiandongwei.jpg"},{"name":"CJ Blog","url":"https://chrisju.cn/","title":"访问主页","introduction":"Failing means foolish.","avatar":"/medias/avatars/mouse.jpg"},{"name":"Tawn","url":"https://tawn0000.github.io/","title":"访问主页","introduction":"JNU ACMer","avatar":"/medias/avatars/tawn.jpg"},{"name":"Master X","url":"https://masterx.top/","title":"访问主页","introduction":"ECNU&ML&DL","avatar":"/medias/avatars/masterx.jpg"},{"name":"分享客","url":"https://sharerdiary.com/","title":"访问主页","introduction":"爱生活，爱分享！","avatar":"/medias/avatars/yezijie.png"},{"name":"taotao","url":"https://zouzhitao.github.io","title":"访问主页","introduction":"taotao 码字的地方","avatar":"/medias/avatars/taotao.jpg"},{"name":"Xiejiadong","url":"https://xiejiadong.com","title":"访问主页","introduction":"Xiejiadong's blog","avatar":"/medias/avatars/xiejiadong.jpg"},{"name":"飞吧","url":"https://fei.bar","title":"访问主页","introduction":"啓飞的个人博客","avatar":"/medias/avatars/feibar.png"},{"name":"ajin","url":"https://ajin.cloud","title":"访问主页","introduction":"Always be enthusiastic","avatar":"/medias/avatars/ajin.jpg"},{"name":"Hiyoung","url":"https://hiyoungai.com/","title":"访问主页","introduction":"宠辱不惊，看庭前花开花落；去留无意，望天空云卷云舒。","avatar":"https://cdn.jsdelivr.net/gh/hiyoung123/cdn/img/avatar.jpg"},{"name":"无言的博客","url":"https://www.yzplove.top","title":"访问主页","introduction":"代码真是越敲越香","avatar":"https://cdn.jsdelivr.net/gh/yzp-99/yzp-99.github.io/medias/avatars/me.jpg"},{"name":"Naixin Zhang","url":"https://naixinzhang.github.io/","title":"访问主页","introduction":"Econ Master | Data Analyst/scientist Candidate","avatar":"https://naixinzhang.github.io/medias/avatars/avatar.jpg"},{"name":"帅张的梦呓","url":"https://ishuaizhang.com","title":"访问主页","introduction":"XDUer","avatar":"https://ishuaizhang.com/medias/avatars/avatar.jpg"},{"name":"Gatsby’s blog","url":"https://a347807131.github.io/","title":"访问主页","introduction":"Nothing perfect, Noting special.","avatar":"https://a347807131.github.io/medias/avatar.gif"},{"name":"宇宙湾","url":"https://yuzhouwan.com/","title":"访问主页","introduction":"主要是大数据和人工智能的原创文章。","avatar":"https://yuzhouwan.com/yuzhouwan_logo_128x128.ico"},{"name":"Dotnet9的博客","url":"https://dotnet9.com","title":"访问主页","introduction":"一个热衷于互联网分享精神的个人博客站点","avatar":"https://img.dotnet9.com/logo-foot.png"},{"name":"Macchiato","url":"https://hcj123123.oschina.io","title":"访问主页","introduction":"java学习者","avatar":"https://y.gtimg.cn/music/photo_new/T002R300x300M000002qD7gF3fW0JL_1.jpg?max_age=2592000"},{"name":"过客~励む","url":"https://yafine-blog.cn","title":"访问主页","introduction":"你现在的努力，是为了以后有更多的选择。","avatar":"https://yafine-blog.cn/medias/avatar.jpg"},{"name":"meteorsh","url":"https://weisenhui.top","title":"访问主页","introduction":"Data Science & Engineering","avatar":"https://weisenhui.top/medias/avatar.jpg"},{"name":"Kuroko","url":"https://kuroko.info","title":"访问主页","introduction":"浓烟下的诗歌电台","avatar":"http://kuroko.info/wp-content/uploads/2020/11/2.jpg"}]}},"excerpt":"","more":"<h2 id=\"CV\"><a href=\"#CV\" class=\"headerlink\" title=\"CV\"></a>CV</h2><p><a href=\"/medias/files/cv-zh.pdf\">中文版</a><br><a href=\"/medias/files/cv-en.pdf\">English Version</a></p>\n<h2 id=\"教育背景\"><a href=\"#教育背景\" class=\"headerlink\" title=\"教育背景\"></a>教育背景</h2><ul>\n<li><b>硕士 华东师范大学 计算机科学与技术</b><br>2018/06 - 至今<br><em>均分：91.5/100</em></li>\n<li><b>本科 华东师范大学 计算机科学与技术</b><br>2014/09 - 2018/06<br><em>排名：1/110</em></li>\n</ul>\n<h2 id=\"研究方向\"><a href=\"#研究方向\" class=\"headerlink\" title=\"研究方向\"></a>研究方向</h2><p>主要研究<strong>成分句法分析、依存句法分析、机器翻译</strong>等方向，<br>对<strong>序列标注、语言模型、实体关系抽取、迁移学习</strong>等方向也感兴趣。</p>\n<h2 id=\"实习经历\"><a href=\"#实习经历\" class=\"headerlink\" title=\"实习经历\"></a>实习经历</h2><ul>\n<li><b>字节跳动AI Lab NLP算法工程师</b><br>2020/05 - 至今<br>主要研究机器翻译模型的压缩与加速。<br>利用参数共享、词向量分解、量化、蒸馏等模型压缩技术，减小模型的体积，最终部署到移动端上。<br>最终实现模型体积压缩20倍，同时效果基本无损。</li>\n</ul>\n<h2 id=\"学术成果\"><a href=\"#学术成果\" class=\"headerlink\" title=\"学术成果\"></a>学术成果</h2><ul>\n<li><strong>A Span-based Linearization for Constituent Trees</strong><br><em>Yang Wei, Yuanbin Wu and Man Lan</em>， <strong>ACL 2020</strong><br>提出了一种成分句法树的序列化表示方法。<br>基于该表示方法，模型的解码复杂度从O(n^3)降低到了O(n log n)，<br>实际解码速度从30句/秒提高到了150句/秒，<br>同时效果没有任何损失。</li>\n</ul>\n<h2 id=\"获奖情况\"><a href=\"#获奖情况\" class=\"headerlink\" title=\"获奖情况\"></a>获奖情况</h2><h3 id=\"2020\"><a href=\"#2020\" class=\"headerlink\" title=\"2020\"></a>2020</h3><ul>\n<li><b>国家奖学金（硕士）</b><br>研二学年</li>\n</ul>\n<h3 id=\"2017\"><a href=\"#2017\" class=\"headerlink\" title=\"2017\"></a>2017</h3><ul>\n<li><b>金牌</b><br>ACM-ICPC全国邀请赛（陕西）</li>\n<li><b>团体一等奖</b><br>中国高校计算机大赛-团体程序设计天梯赛</li>\n<li><b>高校一等奖</b><br>中国高校计算机大赛-团体程序设计天梯赛</li>\n<li><b>特等奖学金</b><br>大三学年</li>\n</ul>\n<h3 id=\"2016\"><a href=\"#2016\" class=\"headerlink\" title=\"2016\"></a>2016</h3><ul>\n<li><b>银牌</b><br>ACM-ICPC亚洲区域赛（青岛）</li>\n<li><b>铜牌</b><br>ACM-CCPC总决赛（宁波）</li>\n<li><b>铜牌</b><br>ACM-CCPC（杭州）</li>\n<li><b>一等奖学金</b><br>大二学年</li>\n</ul>\n<h3 id=\"2015\"><a href=\"#2015\" class=\"headerlink\" title=\"2015\"></a>2015</h3><ul>\n<li><b>铜牌</b><br>ACM-ICPC亚洲区域赛（上海）</li>\n<li><b>铜牌</b><br>ACM-ICPC上海大都会赛</li>\n<li><b>国家奖学金</b><br>大一学年</li>\n</ul>\n<h2 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h2><ul>\n<li><b>电子邮箱</b><br><a href=\"mailto:godweiyang@gmail.com\" target=\"_blank\" rel=\"noopener\">godweiyang@gmail.com</a><br><a href=\"mailto:792321264@qq.com\" target=\"_blank\" rel=\"noopener\">792321264@qq.com</a></li>\n<li><b>地址</b><br>上海市普陀区中山北路3663号理科大楼B906，邮编200062</li>\n<li><b>微信</b><br>godweiyang</li>\n<li><b>QQ 技术交流群</b><br>864832264</li>\n</ul>\n<p><img src=\"/medias/contact.jpg\" alt></p>\n"},{"title":"archives","date":"2019-07-19T08:39:20.000Z","type":"archives","layout":"archives","_content":"","source":"archives/index.md","raw":"---\ntitle: archives\ndate: 2019-07-19 16:39:20\ntype: \"archives\"\nlayout: \"archives\"\n---","updated":"2021-10-15T10:45:54.721Z","path":"archives/index.html","comments":1,"_id":"cl10m9khn0020duwgrefk1gj0","content":"","site":{"data":{"musics":[{"name":"夜曲","artist":"周杰伦","url":"/medias/music/yequ.mp3","cover":"/medias/music/avatars/yequ.jpg"},{"name":"一路向北","artist":"周杰伦","url":"/medias/music/yiluxiangbei.mp3","cover":"/medias/music/avatars/yiluxiangbei.jpg"},{"name":"来自天堂的魔鬼","artist":"邓紫棋","url":"/medias/music/tiantangdemogui.mp3","cover":"/medias/music/avatars/tiantangdemogui.jpg"},{"name":"倒数","artist":"邓紫棋","url":"/medias/music/daoshu.mp3","cover":"/medias/music/avatars/daoshu.jpg"}],"friends":[{"name":"知乎专栏","url":"https://zhuanlan.zhihu.com/godweiyang","title":"访问主页","introduction":"算法码上来","avatar":"/medias/avatars/myzhihu.png"},{"name":"火山翻译","url":"https://translate.volcengine.cn","title":"访问主页","introduction":"提供全球领先的翻译技术与服务","avatar":"/medias/avatars/bytedtrans.png"},{"name":"AntNLP","url":"https://antnlp.org","title":"访问主页","introduction":"华东师范大学自然语言处理实验室欢迎您的加入！","avatar":"/medias/avatars/antnlp.ico"},{"name":"IDS²","url":"https://www.smart-dependable-sino-europe.institute","title":"访问主页","introduction":"中欧可靠智能软件联合实验室欢迎您的加入！","avatar":"/medias/avatars/ids2.jpg"},{"name":"孙长志","url":"https://www.czsun.site","title":"访问主页","introduction":"AntNLP博士大师兄！","avatar":"/medias/avatars/sunchangzhi.jpg"},{"name":"纪焘","url":"https://taoji.site","title":"访问主页","introduction":"AntNLP博士带明星！","avatar":"/medias/avatars/jitao.jpg"},{"name":"杜雨沛","url":"https://yupei-du.github.io/","title":"访问主页","introduction":"AntNLP唱跳RAP打篮球全能师兄！","avatar":"/medias/avatars/duyupei.jpg"},{"name":"0xbirdpwn","url":"https://0xbird.top/","title":"访问主页","introduction":"十步杀一人，千里不留行，事了拂衣去，深藏功与名。","avatar":"/medias/avatars/0xbird.png"},{"name":"李佳倩的博客","url":"https://jiaqianlee.com/","title":"访问主页","introduction":"一只小白的成长之路！","avatar":"/medias/avatars/lijiaqian.png"},{"name":"kewlgrl","url":"https://blog.csdn.net/MIKASA3","title":"访问主页","introduction":"好大一只咸鱼哇","avatar":"/medias/avatars/kewlgrl.jpg"},{"name":"Think Far Blog","url":"https://wuli749826.github.io","title":"访问主页","introduction":"我曾经拥有这一切，转眼都飘散如烟。","avatar":"/medias/avatars/gsy.jpg"},{"name":"望城风景","url":"https://www.itaowei.cn/","title":"访问主页","introduction":"用力活过的日子，才配得上此刻的缅怀。","avatar":"/medias/avatars/taowei.jpg"},{"name":"jxtxzzw空间","url":"https://www.jxtxzzw.com/wordpress","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/zzw.jpg"},{"name":"DREAMWINGS","url":"https://www.dreamwings.cn/","title":"访问主页","introduction":"夢はそこでないと、私の権利である","avatar":"/medias/avatars/qianqian.png"},{"name":"ElaineLv","url":"https://www.elainelv.com/","title":"访问主页","introduction":"Stay hungry, Stay foolish","avatar":"/medias/avatars/lyn-draw.jpg"},{"name":"Subject_No_i","url":"https://subjectnoi.github.io","title":"访问主页","introduction":"在原七海 中野三玖 中野二乃 樱岛麻衣的老公","avatar":"/medias/avatars/lzh.png"},{"name":"菁菁","url":"https://angericky.github.io/","title":"访问主页","introduction":"做什么都是因为喜欢","avatar":"/medias/avatars/jingjing.jpg"},{"name":"Sweet-Q","url":"https://sweet-q.github.io","title":"访问主页","introduction":"华东师范大学数学系","avatar":"/medias/avatars/babyq.png"},{"name":"伟大的蚊子","url":"https://www.cnblogs.com/cww97/","title":"访问主页","introduction":"鼓楼的夜晚时间匆匆","avatar":"/medias/avatars/cww97.jpg"},{"name":"Fun4wut","url":"https://blog.fun4go.top","title":"访问主页","introduction":"菜鸡欢迎大佬的光顾","avatar":"/medias/avatars/fun4go.png"},{"name":"Hael Chan","url":"https://haelchan.me/","title":"访问主页","introduction":"浙江大学 & NLP & ML","avatar":"/medias/avatars/hael.jpg"},{"name":"happygirlzt","url":"https://www.happygirlzt.com","title":"访问主页","introduction":"A Backend Engineer","avatar":"/medias/avatars/zhangting.jpg"},{"name":"星空无限","url":"https://liyangzone.com","title":"访问主页","introduction":"前端开发，死飞大佬。分享技术，分享生活。","avatar":"/medias/avatars/liyangzone.jpg"},{"name":"Mashiro","url":"https://2heng.xin/","title":"访问主页","introduction":"樱花庄的白猫","avatar":"/medias/avatars/mashiro.jpg"},{"name":"hzwer","url":"https://hzwer.com/","title":"访问主页","introduction":"北京大学计算机系","avatar":"/medias/avatars/hzwer.jpg"},{"name":"MPY634","url":"https://mpy634.cn/","title":"访问主页","introduction":"摸鱼，永无止境。","avatar":"/medias/avatars/mpy634.png"},{"name":"徐铭辰的博客","url":"https://michaelxucs.com","title":"访问主页","introduction":"埃克塞特大学计算机系","avatar":"/medias/avatars/michael.jpg"},{"name":"Mizunashi","url":"https://mizunashi.me","title":"访问主页","introduction":"欢迎大佬们来玩","avatar":"/medias/avatars/mizunashi.png"},{"name":"xuzhongyou","url":"https://xuzhongyou.github.io/","title":"访问主页","introduction":"我哽咽道：你是赵默笙，可我不是何以琛啊。","avatar":"/medias/avatars/xuzhongyou.jpg"},{"name":"zerol","url":"https://zerol.me/","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/huaji.jpg"},{"name":"Zhang Yi","url":"https://codewithzhangyi.com/","title":"访问主页","introduction":"Coding is the New Sexy","avatar":"/medias/avatars/zhangyi.jpg"},{"name":"科学空间","url":"https://spaces.ac.cn/","title":"访问主页","introduction":"中山大学基础数学研究生","avatar":"/medias/avatars/spacesac.png"},{"name":"lucifer的博客","url":"https://lucifer.ren/blog/","title":"访问主页","introduction":"一个脑洞很大的程序员。","avatar":"https://tva1.sinaimg.cn/large/006tNbRwly1ga7ognflh9j30b40b4q3w.jpg"},{"name":"钱栋伟","url":"https://sscjwdyzdw.club","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/qiandongwei.jpg"},{"name":"CJ Blog","url":"https://chrisju.cn/","title":"访问主页","introduction":"Failing means foolish.","avatar":"/medias/avatars/mouse.jpg"},{"name":"Tawn","url":"https://tawn0000.github.io/","title":"访问主页","introduction":"JNU ACMer","avatar":"/medias/avatars/tawn.jpg"},{"name":"Master X","url":"https://masterx.top/","title":"访问主页","introduction":"ECNU&ML&DL","avatar":"/medias/avatars/masterx.jpg"},{"name":"分享客","url":"https://sharerdiary.com/","title":"访问主页","introduction":"爱生活，爱分享！","avatar":"/medias/avatars/yezijie.png"},{"name":"taotao","url":"https://zouzhitao.github.io","title":"访问主页","introduction":"taotao 码字的地方","avatar":"/medias/avatars/taotao.jpg"},{"name":"Xiejiadong","url":"https://xiejiadong.com","title":"访问主页","introduction":"Xiejiadong's blog","avatar":"/medias/avatars/xiejiadong.jpg"},{"name":"飞吧","url":"https://fei.bar","title":"访问主页","introduction":"啓飞的个人博客","avatar":"/medias/avatars/feibar.png"},{"name":"ajin","url":"https://ajin.cloud","title":"访问主页","introduction":"Always be enthusiastic","avatar":"/medias/avatars/ajin.jpg"},{"name":"Hiyoung","url":"https://hiyoungai.com/","title":"访问主页","introduction":"宠辱不惊，看庭前花开花落；去留无意，望天空云卷云舒。","avatar":"https://cdn.jsdelivr.net/gh/hiyoung123/cdn/img/avatar.jpg"},{"name":"无言的博客","url":"https://www.yzplove.top","title":"访问主页","introduction":"代码真是越敲越香","avatar":"https://cdn.jsdelivr.net/gh/yzp-99/yzp-99.github.io/medias/avatars/me.jpg"},{"name":"Naixin Zhang","url":"https://naixinzhang.github.io/","title":"访问主页","introduction":"Econ Master | Data Analyst/scientist Candidate","avatar":"https://naixinzhang.github.io/medias/avatars/avatar.jpg"},{"name":"帅张的梦呓","url":"https://ishuaizhang.com","title":"访问主页","introduction":"XDUer","avatar":"https://ishuaizhang.com/medias/avatars/avatar.jpg"},{"name":"Gatsby’s blog","url":"https://a347807131.github.io/","title":"访问主页","introduction":"Nothing perfect, Noting special.","avatar":"https://a347807131.github.io/medias/avatar.gif"},{"name":"宇宙湾","url":"https://yuzhouwan.com/","title":"访问主页","introduction":"主要是大数据和人工智能的原创文章。","avatar":"https://yuzhouwan.com/yuzhouwan_logo_128x128.ico"},{"name":"Dotnet9的博客","url":"https://dotnet9.com","title":"访问主页","introduction":"一个热衷于互联网分享精神的个人博客站点","avatar":"https://img.dotnet9.com/logo-foot.png"},{"name":"Macchiato","url":"https://hcj123123.oschina.io","title":"访问主页","introduction":"java学习者","avatar":"https://y.gtimg.cn/music/photo_new/T002R300x300M000002qD7gF3fW0JL_1.jpg?max_age=2592000"},{"name":"过客~励む","url":"https://yafine-blog.cn","title":"访问主页","introduction":"你现在的努力，是为了以后有更多的选择。","avatar":"https://yafine-blog.cn/medias/avatar.jpg"},{"name":"meteorsh","url":"https://weisenhui.top","title":"访问主页","introduction":"Data Science & Engineering","avatar":"https://weisenhui.top/medias/avatar.jpg"},{"name":"Kuroko","url":"https://kuroko.info","title":"访问主页","introduction":"浓烟下的诗歌电台","avatar":"http://kuroko.info/wp-content/uploads/2020/11/2.jpg"}]}},"excerpt":"","more":""},{"title":"categories","date":"2019-07-19T08:39:20.000Z","type":"categories","layout":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2019-07-19 16:39:20\ntype: \"categories\"\nlayout: \"categories\"\n---","updated":"2021-10-15T10:45:54.721Z","path":"categories/index.html","comments":1,"_id":"cl10m9kho0021duwgj2vazuu0","content":"","site":{"data":{"musics":[{"name":"夜曲","artist":"周杰伦","url":"/medias/music/yequ.mp3","cover":"/medias/music/avatars/yequ.jpg"},{"name":"一路向北","artist":"周杰伦","url":"/medias/music/yiluxiangbei.mp3","cover":"/medias/music/avatars/yiluxiangbei.jpg"},{"name":"来自天堂的魔鬼","artist":"邓紫棋","url":"/medias/music/tiantangdemogui.mp3","cover":"/medias/music/avatars/tiantangdemogui.jpg"},{"name":"倒数","artist":"邓紫棋","url":"/medias/music/daoshu.mp3","cover":"/medias/music/avatars/daoshu.jpg"}],"friends":[{"name":"知乎专栏","url":"https://zhuanlan.zhihu.com/godweiyang","title":"访问主页","introduction":"算法码上来","avatar":"/medias/avatars/myzhihu.png"},{"name":"火山翻译","url":"https://translate.volcengine.cn","title":"访问主页","introduction":"提供全球领先的翻译技术与服务","avatar":"/medias/avatars/bytedtrans.png"},{"name":"AntNLP","url":"https://antnlp.org","title":"访问主页","introduction":"华东师范大学自然语言处理实验室欢迎您的加入！","avatar":"/medias/avatars/antnlp.ico"},{"name":"IDS²","url":"https://www.smart-dependable-sino-europe.institute","title":"访问主页","introduction":"中欧可靠智能软件联合实验室欢迎您的加入！","avatar":"/medias/avatars/ids2.jpg"},{"name":"孙长志","url":"https://www.czsun.site","title":"访问主页","introduction":"AntNLP博士大师兄！","avatar":"/medias/avatars/sunchangzhi.jpg"},{"name":"纪焘","url":"https://taoji.site","title":"访问主页","introduction":"AntNLP博士带明星！","avatar":"/medias/avatars/jitao.jpg"},{"name":"杜雨沛","url":"https://yupei-du.github.io/","title":"访问主页","introduction":"AntNLP唱跳RAP打篮球全能师兄！","avatar":"/medias/avatars/duyupei.jpg"},{"name":"0xbirdpwn","url":"https://0xbird.top/","title":"访问主页","introduction":"十步杀一人，千里不留行，事了拂衣去，深藏功与名。","avatar":"/medias/avatars/0xbird.png"},{"name":"李佳倩的博客","url":"https://jiaqianlee.com/","title":"访问主页","introduction":"一只小白的成长之路！","avatar":"/medias/avatars/lijiaqian.png"},{"name":"kewlgrl","url":"https://blog.csdn.net/MIKASA3","title":"访问主页","introduction":"好大一只咸鱼哇","avatar":"/medias/avatars/kewlgrl.jpg"},{"name":"Think Far Blog","url":"https://wuli749826.github.io","title":"访问主页","introduction":"我曾经拥有这一切，转眼都飘散如烟。","avatar":"/medias/avatars/gsy.jpg"},{"name":"望城风景","url":"https://www.itaowei.cn/","title":"访问主页","introduction":"用力活过的日子，才配得上此刻的缅怀。","avatar":"/medias/avatars/taowei.jpg"},{"name":"jxtxzzw空间","url":"https://www.jxtxzzw.com/wordpress","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/zzw.jpg"},{"name":"DREAMWINGS","url":"https://www.dreamwings.cn/","title":"访问主页","introduction":"夢はそこでないと、私の権利である","avatar":"/medias/avatars/qianqian.png"},{"name":"ElaineLv","url":"https://www.elainelv.com/","title":"访问主页","introduction":"Stay hungry, Stay foolish","avatar":"/medias/avatars/lyn-draw.jpg"},{"name":"Subject_No_i","url":"https://subjectnoi.github.io","title":"访问主页","introduction":"在原七海 中野三玖 中野二乃 樱岛麻衣的老公","avatar":"/medias/avatars/lzh.png"},{"name":"菁菁","url":"https://angericky.github.io/","title":"访问主页","introduction":"做什么都是因为喜欢","avatar":"/medias/avatars/jingjing.jpg"},{"name":"Sweet-Q","url":"https://sweet-q.github.io","title":"访问主页","introduction":"华东师范大学数学系","avatar":"/medias/avatars/babyq.png"},{"name":"伟大的蚊子","url":"https://www.cnblogs.com/cww97/","title":"访问主页","introduction":"鼓楼的夜晚时间匆匆","avatar":"/medias/avatars/cww97.jpg"},{"name":"Fun4wut","url":"https://blog.fun4go.top","title":"访问主页","introduction":"菜鸡欢迎大佬的光顾","avatar":"/medias/avatars/fun4go.png"},{"name":"Hael Chan","url":"https://haelchan.me/","title":"访问主页","introduction":"浙江大学 & NLP & ML","avatar":"/medias/avatars/hael.jpg"},{"name":"happygirlzt","url":"https://www.happygirlzt.com","title":"访问主页","introduction":"A Backend Engineer","avatar":"/medias/avatars/zhangting.jpg"},{"name":"星空无限","url":"https://liyangzone.com","title":"访问主页","introduction":"前端开发，死飞大佬。分享技术，分享生活。","avatar":"/medias/avatars/liyangzone.jpg"},{"name":"Mashiro","url":"https://2heng.xin/","title":"访问主页","introduction":"樱花庄的白猫","avatar":"/medias/avatars/mashiro.jpg"},{"name":"hzwer","url":"https://hzwer.com/","title":"访问主页","introduction":"北京大学计算机系","avatar":"/medias/avatars/hzwer.jpg"},{"name":"MPY634","url":"https://mpy634.cn/","title":"访问主页","introduction":"摸鱼，永无止境。","avatar":"/medias/avatars/mpy634.png"},{"name":"徐铭辰的博客","url":"https://michaelxucs.com","title":"访问主页","introduction":"埃克塞特大学计算机系","avatar":"/medias/avatars/michael.jpg"},{"name":"Mizunashi","url":"https://mizunashi.me","title":"访问主页","introduction":"欢迎大佬们来玩","avatar":"/medias/avatars/mizunashi.png"},{"name":"xuzhongyou","url":"https://xuzhongyou.github.io/","title":"访问主页","introduction":"我哽咽道：你是赵默笙，可我不是何以琛啊。","avatar":"/medias/avatars/xuzhongyou.jpg"},{"name":"zerol","url":"https://zerol.me/","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/huaji.jpg"},{"name":"Zhang Yi","url":"https://codewithzhangyi.com/","title":"访问主页","introduction":"Coding is the New Sexy","avatar":"/medias/avatars/zhangyi.jpg"},{"name":"科学空间","url":"https://spaces.ac.cn/","title":"访问主页","introduction":"中山大学基础数学研究生","avatar":"/medias/avatars/spacesac.png"},{"name":"lucifer的博客","url":"https://lucifer.ren/blog/","title":"访问主页","introduction":"一个脑洞很大的程序员。","avatar":"https://tva1.sinaimg.cn/large/006tNbRwly1ga7ognflh9j30b40b4q3w.jpg"},{"name":"钱栋伟","url":"https://sscjwdyzdw.club","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/qiandongwei.jpg"},{"name":"CJ Blog","url":"https://chrisju.cn/","title":"访问主页","introduction":"Failing means foolish.","avatar":"/medias/avatars/mouse.jpg"},{"name":"Tawn","url":"https://tawn0000.github.io/","title":"访问主页","introduction":"JNU ACMer","avatar":"/medias/avatars/tawn.jpg"},{"name":"Master X","url":"https://masterx.top/","title":"访问主页","introduction":"ECNU&ML&DL","avatar":"/medias/avatars/masterx.jpg"},{"name":"分享客","url":"https://sharerdiary.com/","title":"访问主页","introduction":"爱生活，爱分享！","avatar":"/medias/avatars/yezijie.png"},{"name":"taotao","url":"https://zouzhitao.github.io","title":"访问主页","introduction":"taotao 码字的地方","avatar":"/medias/avatars/taotao.jpg"},{"name":"Xiejiadong","url":"https://xiejiadong.com","title":"访问主页","introduction":"Xiejiadong's blog","avatar":"/medias/avatars/xiejiadong.jpg"},{"name":"飞吧","url":"https://fei.bar","title":"访问主页","introduction":"啓飞的个人博客","avatar":"/medias/avatars/feibar.png"},{"name":"ajin","url":"https://ajin.cloud","title":"访问主页","introduction":"Always be enthusiastic","avatar":"/medias/avatars/ajin.jpg"},{"name":"Hiyoung","url":"https://hiyoungai.com/","title":"访问主页","introduction":"宠辱不惊，看庭前花开花落；去留无意，望天空云卷云舒。","avatar":"https://cdn.jsdelivr.net/gh/hiyoung123/cdn/img/avatar.jpg"},{"name":"无言的博客","url":"https://www.yzplove.top","title":"访问主页","introduction":"代码真是越敲越香","avatar":"https://cdn.jsdelivr.net/gh/yzp-99/yzp-99.github.io/medias/avatars/me.jpg"},{"name":"Naixin Zhang","url":"https://naixinzhang.github.io/","title":"访问主页","introduction":"Econ Master | Data Analyst/scientist Candidate","avatar":"https://naixinzhang.github.io/medias/avatars/avatar.jpg"},{"name":"帅张的梦呓","url":"https://ishuaizhang.com","title":"访问主页","introduction":"XDUer","avatar":"https://ishuaizhang.com/medias/avatars/avatar.jpg"},{"name":"Gatsby’s blog","url":"https://a347807131.github.io/","title":"访问主页","introduction":"Nothing perfect, Noting special.","avatar":"https://a347807131.github.io/medias/avatar.gif"},{"name":"宇宙湾","url":"https://yuzhouwan.com/","title":"访问主页","introduction":"主要是大数据和人工智能的原创文章。","avatar":"https://yuzhouwan.com/yuzhouwan_logo_128x128.ico"},{"name":"Dotnet9的博客","url":"https://dotnet9.com","title":"访问主页","introduction":"一个热衷于互联网分享精神的个人博客站点","avatar":"https://img.dotnet9.com/logo-foot.png"},{"name":"Macchiato","url":"https://hcj123123.oschina.io","title":"访问主页","introduction":"java学习者","avatar":"https://y.gtimg.cn/music/photo_new/T002R300x300M000002qD7gF3fW0JL_1.jpg?max_age=2592000"},{"name":"过客~励む","url":"https://yafine-blog.cn","title":"访问主页","introduction":"你现在的努力，是为了以后有更多的选择。","avatar":"https://yafine-blog.cn/medias/avatar.jpg"},{"name":"meteorsh","url":"https://weisenhui.top","title":"访问主页","introduction":"Data Science & Engineering","avatar":"https://weisenhui.top/medias/avatar.jpg"},{"name":"Kuroko","url":"https://kuroko.info","title":"访问主页","introduction":"浓烟下的诗歌电台","avatar":"http://kuroko.info/wp-content/uploads/2020/11/2.jpg"}]}},"excerpt":"","more":""},{"title":"tags","date":"2019-07-19T08:40:27.000Z","type":"tags","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2019-07-19 16:40:27\ntype: \"tags\"\nlayout: \"tags\"\n---","updated":"2021-10-15T10:45:54.722Z","path":"tags/index.html","comments":1,"_id":"cl10m9kho0022duwgw8qtummv","content":"","site":{"data":{"musics":[{"name":"夜曲","artist":"周杰伦","url":"/medias/music/yequ.mp3","cover":"/medias/music/avatars/yequ.jpg"},{"name":"一路向北","artist":"周杰伦","url":"/medias/music/yiluxiangbei.mp3","cover":"/medias/music/avatars/yiluxiangbei.jpg"},{"name":"来自天堂的魔鬼","artist":"邓紫棋","url":"/medias/music/tiantangdemogui.mp3","cover":"/medias/music/avatars/tiantangdemogui.jpg"},{"name":"倒数","artist":"邓紫棋","url":"/medias/music/daoshu.mp3","cover":"/medias/music/avatars/daoshu.jpg"}],"friends":[{"name":"知乎专栏","url":"https://zhuanlan.zhihu.com/godweiyang","title":"访问主页","introduction":"算法码上来","avatar":"/medias/avatars/myzhihu.png"},{"name":"火山翻译","url":"https://translate.volcengine.cn","title":"访问主页","introduction":"提供全球领先的翻译技术与服务","avatar":"/medias/avatars/bytedtrans.png"},{"name":"AntNLP","url":"https://antnlp.org","title":"访问主页","introduction":"华东师范大学自然语言处理实验室欢迎您的加入！","avatar":"/medias/avatars/antnlp.ico"},{"name":"IDS²","url":"https://www.smart-dependable-sino-europe.institute","title":"访问主页","introduction":"中欧可靠智能软件联合实验室欢迎您的加入！","avatar":"/medias/avatars/ids2.jpg"},{"name":"孙长志","url":"https://www.czsun.site","title":"访问主页","introduction":"AntNLP博士大师兄！","avatar":"/medias/avatars/sunchangzhi.jpg"},{"name":"纪焘","url":"https://taoji.site","title":"访问主页","introduction":"AntNLP博士带明星！","avatar":"/medias/avatars/jitao.jpg"},{"name":"杜雨沛","url":"https://yupei-du.github.io/","title":"访问主页","introduction":"AntNLP唱跳RAP打篮球全能师兄！","avatar":"/medias/avatars/duyupei.jpg"},{"name":"0xbirdpwn","url":"https://0xbird.top/","title":"访问主页","introduction":"十步杀一人，千里不留行，事了拂衣去，深藏功与名。","avatar":"/medias/avatars/0xbird.png"},{"name":"李佳倩的博客","url":"https://jiaqianlee.com/","title":"访问主页","introduction":"一只小白的成长之路！","avatar":"/medias/avatars/lijiaqian.png"},{"name":"kewlgrl","url":"https://blog.csdn.net/MIKASA3","title":"访问主页","introduction":"好大一只咸鱼哇","avatar":"/medias/avatars/kewlgrl.jpg"},{"name":"Think Far Blog","url":"https://wuli749826.github.io","title":"访问主页","introduction":"我曾经拥有这一切，转眼都飘散如烟。","avatar":"/medias/avatars/gsy.jpg"},{"name":"望城风景","url":"https://www.itaowei.cn/","title":"访问主页","introduction":"用力活过的日子，才配得上此刻的缅怀。","avatar":"/medias/avatars/taowei.jpg"},{"name":"jxtxzzw空间","url":"https://www.jxtxzzw.com/wordpress","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/zzw.jpg"},{"name":"DREAMWINGS","url":"https://www.dreamwings.cn/","title":"访问主页","introduction":"夢はそこでないと、私の権利である","avatar":"/medias/avatars/qianqian.png"},{"name":"ElaineLv","url":"https://www.elainelv.com/","title":"访问主页","introduction":"Stay hungry, Stay foolish","avatar":"/medias/avatars/lyn-draw.jpg"},{"name":"Subject_No_i","url":"https://subjectnoi.github.io","title":"访问主页","introduction":"在原七海 中野三玖 中野二乃 樱岛麻衣的老公","avatar":"/medias/avatars/lzh.png"},{"name":"菁菁","url":"https://angericky.github.io/","title":"访问主页","introduction":"做什么都是因为喜欢","avatar":"/medias/avatars/jingjing.jpg"},{"name":"Sweet-Q","url":"https://sweet-q.github.io","title":"访问主页","introduction":"华东师范大学数学系","avatar":"/medias/avatars/babyq.png"},{"name":"伟大的蚊子","url":"https://www.cnblogs.com/cww97/","title":"访问主页","introduction":"鼓楼的夜晚时间匆匆","avatar":"/medias/avatars/cww97.jpg"},{"name":"Fun4wut","url":"https://blog.fun4go.top","title":"访问主页","introduction":"菜鸡欢迎大佬的光顾","avatar":"/medias/avatars/fun4go.png"},{"name":"Hael Chan","url":"https://haelchan.me/","title":"访问主页","introduction":"浙江大学 & NLP & ML","avatar":"/medias/avatars/hael.jpg"},{"name":"happygirlzt","url":"https://www.happygirlzt.com","title":"访问主页","introduction":"A Backend Engineer","avatar":"/medias/avatars/zhangting.jpg"},{"name":"星空无限","url":"https://liyangzone.com","title":"访问主页","introduction":"前端开发，死飞大佬。分享技术，分享生活。","avatar":"/medias/avatars/liyangzone.jpg"},{"name":"Mashiro","url":"https://2heng.xin/","title":"访问主页","introduction":"樱花庄的白猫","avatar":"/medias/avatars/mashiro.jpg"},{"name":"hzwer","url":"https://hzwer.com/","title":"访问主页","introduction":"北京大学计算机系","avatar":"/medias/avatars/hzwer.jpg"},{"name":"MPY634","url":"https://mpy634.cn/","title":"访问主页","introduction":"摸鱼，永无止境。","avatar":"/medias/avatars/mpy634.png"},{"name":"徐铭辰的博客","url":"https://michaelxucs.com","title":"访问主页","introduction":"埃克塞特大学计算机系","avatar":"/medias/avatars/michael.jpg"},{"name":"Mizunashi","url":"https://mizunashi.me","title":"访问主页","introduction":"欢迎大佬们来玩","avatar":"/medias/avatars/mizunashi.png"},{"name":"xuzhongyou","url":"https://xuzhongyou.github.io/","title":"访问主页","introduction":"我哽咽道：你是赵默笙，可我不是何以琛啊。","avatar":"/medias/avatars/xuzhongyou.jpg"},{"name":"zerol","url":"https://zerol.me/","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/huaji.jpg"},{"name":"Zhang Yi","url":"https://codewithzhangyi.com/","title":"访问主页","introduction":"Coding is the New Sexy","avatar":"/medias/avatars/zhangyi.jpg"},{"name":"科学空间","url":"https://spaces.ac.cn/","title":"访问主页","introduction":"中山大学基础数学研究生","avatar":"/medias/avatars/spacesac.png"},{"name":"lucifer的博客","url":"https://lucifer.ren/blog/","title":"访问主页","introduction":"一个脑洞很大的程序员。","avatar":"https://tva1.sinaimg.cn/large/006tNbRwly1ga7ognflh9j30b40b4q3w.jpg"},{"name":"钱栋伟","url":"https://sscjwdyzdw.club","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/qiandongwei.jpg"},{"name":"CJ Blog","url":"https://chrisju.cn/","title":"访问主页","introduction":"Failing means foolish.","avatar":"/medias/avatars/mouse.jpg"},{"name":"Tawn","url":"https://tawn0000.github.io/","title":"访问主页","introduction":"JNU ACMer","avatar":"/medias/avatars/tawn.jpg"},{"name":"Master X","url":"https://masterx.top/","title":"访问主页","introduction":"ECNU&ML&DL","avatar":"/medias/avatars/masterx.jpg"},{"name":"分享客","url":"https://sharerdiary.com/","title":"访问主页","introduction":"爱生活，爱分享！","avatar":"/medias/avatars/yezijie.png"},{"name":"taotao","url":"https://zouzhitao.github.io","title":"访问主页","introduction":"taotao 码字的地方","avatar":"/medias/avatars/taotao.jpg"},{"name":"Xiejiadong","url":"https://xiejiadong.com","title":"访问主页","introduction":"Xiejiadong's blog","avatar":"/medias/avatars/xiejiadong.jpg"},{"name":"飞吧","url":"https://fei.bar","title":"访问主页","introduction":"啓飞的个人博客","avatar":"/medias/avatars/feibar.png"},{"name":"ajin","url":"https://ajin.cloud","title":"访问主页","introduction":"Always be enthusiastic","avatar":"/medias/avatars/ajin.jpg"},{"name":"Hiyoung","url":"https://hiyoungai.com/","title":"访问主页","introduction":"宠辱不惊，看庭前花开花落；去留无意，望天空云卷云舒。","avatar":"https://cdn.jsdelivr.net/gh/hiyoung123/cdn/img/avatar.jpg"},{"name":"无言的博客","url":"https://www.yzplove.top","title":"访问主页","introduction":"代码真是越敲越香","avatar":"https://cdn.jsdelivr.net/gh/yzp-99/yzp-99.github.io/medias/avatars/me.jpg"},{"name":"Naixin Zhang","url":"https://naixinzhang.github.io/","title":"访问主页","introduction":"Econ Master | Data Analyst/scientist Candidate","avatar":"https://naixinzhang.github.io/medias/avatars/avatar.jpg"},{"name":"帅张的梦呓","url":"https://ishuaizhang.com","title":"访问主页","introduction":"XDUer","avatar":"https://ishuaizhang.com/medias/avatars/avatar.jpg"},{"name":"Gatsby’s blog","url":"https://a347807131.github.io/","title":"访问主页","introduction":"Nothing perfect, Noting special.","avatar":"https://a347807131.github.io/medias/avatar.gif"},{"name":"宇宙湾","url":"https://yuzhouwan.com/","title":"访问主页","introduction":"主要是大数据和人工智能的原创文章。","avatar":"https://yuzhouwan.com/yuzhouwan_logo_128x128.ico"},{"name":"Dotnet9的博客","url":"https://dotnet9.com","title":"访问主页","introduction":"一个热衷于互联网分享精神的个人博客站点","avatar":"https://img.dotnet9.com/logo-foot.png"},{"name":"Macchiato","url":"https://hcj123123.oschina.io","title":"访问主页","introduction":"java学习者","avatar":"https://y.gtimg.cn/music/photo_new/T002R300x300M000002qD7gF3fW0JL_1.jpg?max_age=2592000"},{"name":"过客~励む","url":"https://yafine-blog.cn","title":"访问主页","introduction":"你现在的努力，是为了以后有更多的选择。","avatar":"https://yafine-blog.cn/medias/avatar.jpg"},{"name":"meteorsh","url":"https://weisenhui.top","title":"访问主页","introduction":"Data Science & Engineering","avatar":"https://weisenhui.top/medias/avatar.jpg"},{"name":"Kuroko","url":"https://kuroko.info","title":"访问主页","introduction":"浓烟下的诗歌电台","avatar":"http://kuroko.info/wp-content/uploads/2020/11/2.jpg"}]}},"excerpt":"","more":""},{"title":"contact","date":"+020121-10-23T09:17:02.000Z","type":"contact","layout":"contact","_content":"\n# 欢迎留言\n关注物理学问题，区块链技术，微服务系统，算法设计，音视频系统开发，不正经的什么都喜欢聊。\n\n欢迎讨论，广交朋友。\n\n# 友链交换\n想要交换友链的小伙伴，欢迎在评论区留言，留言格式：\n* **名称：**你的博客名称\n* **地址：**你的博客地址\n* **简介：**一句话简介\n* **头像：**你的头像地址\n\n例如我的博客友链，大家可以加到自己博客里哦：\n* **名称：**catiga\n* **地址：**https://catiga.github.io\n* **简介：**学习物理不挣钱\n","source":"contact/index.md","raw":"---\ntitle: contact\ndate: 20121-10-23 17:17:02\ntype: \"contact\"\nlayout: \"contact\"\n---\n\n# 欢迎留言\n关注物理学问题，区块链技术，微服务系统，算法设计，音视频系统开发，不正经的什么都喜欢聊。\n\n欢迎讨论，广交朋友。\n\n# 友链交换\n想要交换友链的小伙伴，欢迎在评论区留言，留言格式：\n* **名称：**你的博客名称\n* **地址：**你的博客地址\n* **简介：**一句话简介\n* **头像：**你的头像地址\n\n例如我的博客友链，大家可以加到自己博客里哦：\n* **名称：**catiga\n* **地址：**https://catiga.github.io\n* **简介：**学习物理不挣钱\n","updated":"2021-10-24T08:52:51.701Z","path":"contact/index.html","comments":1,"_id":"cl10m9khp0023duwg3mk90dsd","content":"<h1 id=\"欢迎留言\"><a href=\"#欢迎留言\" class=\"headerlink\" title=\"欢迎留言\"></a>欢迎留言</h1><p>关注物理学问题，区块链技术，微服务系统，算法设计，音视频系统开发，不正经的什么都喜欢聊。</p>\n<p>欢迎讨论，广交朋友。</p>\n<h1 id=\"友链交换\"><a href=\"#友链交换\" class=\"headerlink\" title=\"友链交换\"></a>友链交换</h1><p>想要交换友链的小伙伴，欢迎在评论区留言，留言格式：</p>\n<ul>\n<li><strong>名称：</strong>你的博客名称</li>\n<li><strong>地址：</strong>你的博客地址</li>\n<li><strong>简介：</strong>一句话简介</li>\n<li><strong>头像：</strong>你的头像地址</li>\n</ul>\n<p>例如我的博客友链，大家可以加到自己博客里哦：</p>\n<ul>\n<li><strong>名称：</strong>catiga</li>\n<li><strong>地址：</strong><a href=\"https://catiga.github.io\">https://catiga.github.io</a></li>\n<li><strong>简介：</strong>学习物理不挣钱</li>\n</ul>\n","site":{"data":{"musics":[{"name":"夜曲","artist":"周杰伦","url":"/medias/music/yequ.mp3","cover":"/medias/music/avatars/yequ.jpg"},{"name":"一路向北","artist":"周杰伦","url":"/medias/music/yiluxiangbei.mp3","cover":"/medias/music/avatars/yiluxiangbei.jpg"},{"name":"来自天堂的魔鬼","artist":"邓紫棋","url":"/medias/music/tiantangdemogui.mp3","cover":"/medias/music/avatars/tiantangdemogui.jpg"},{"name":"倒数","artist":"邓紫棋","url":"/medias/music/daoshu.mp3","cover":"/medias/music/avatars/daoshu.jpg"}],"friends":[{"name":"知乎专栏","url":"https://zhuanlan.zhihu.com/godweiyang","title":"访问主页","introduction":"算法码上来","avatar":"/medias/avatars/myzhihu.png"},{"name":"火山翻译","url":"https://translate.volcengine.cn","title":"访问主页","introduction":"提供全球领先的翻译技术与服务","avatar":"/medias/avatars/bytedtrans.png"},{"name":"AntNLP","url":"https://antnlp.org","title":"访问主页","introduction":"华东师范大学自然语言处理实验室欢迎您的加入！","avatar":"/medias/avatars/antnlp.ico"},{"name":"IDS²","url":"https://www.smart-dependable-sino-europe.institute","title":"访问主页","introduction":"中欧可靠智能软件联合实验室欢迎您的加入！","avatar":"/medias/avatars/ids2.jpg"},{"name":"孙长志","url":"https://www.czsun.site","title":"访问主页","introduction":"AntNLP博士大师兄！","avatar":"/medias/avatars/sunchangzhi.jpg"},{"name":"纪焘","url":"https://taoji.site","title":"访问主页","introduction":"AntNLP博士带明星！","avatar":"/medias/avatars/jitao.jpg"},{"name":"杜雨沛","url":"https://yupei-du.github.io/","title":"访问主页","introduction":"AntNLP唱跳RAP打篮球全能师兄！","avatar":"/medias/avatars/duyupei.jpg"},{"name":"0xbirdpwn","url":"https://0xbird.top/","title":"访问主页","introduction":"十步杀一人，千里不留行，事了拂衣去，深藏功与名。","avatar":"/medias/avatars/0xbird.png"},{"name":"李佳倩的博客","url":"https://jiaqianlee.com/","title":"访问主页","introduction":"一只小白的成长之路！","avatar":"/medias/avatars/lijiaqian.png"},{"name":"kewlgrl","url":"https://blog.csdn.net/MIKASA3","title":"访问主页","introduction":"好大一只咸鱼哇","avatar":"/medias/avatars/kewlgrl.jpg"},{"name":"Think Far Blog","url":"https://wuli749826.github.io","title":"访问主页","introduction":"我曾经拥有这一切，转眼都飘散如烟。","avatar":"/medias/avatars/gsy.jpg"},{"name":"望城风景","url":"https://www.itaowei.cn/","title":"访问主页","introduction":"用力活过的日子，才配得上此刻的缅怀。","avatar":"/medias/avatars/taowei.jpg"},{"name":"jxtxzzw空间","url":"https://www.jxtxzzw.com/wordpress","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/zzw.jpg"},{"name":"DREAMWINGS","url":"https://www.dreamwings.cn/","title":"访问主页","introduction":"夢はそこでないと、私の権利である","avatar":"/medias/avatars/qianqian.png"},{"name":"ElaineLv","url":"https://www.elainelv.com/","title":"访问主页","introduction":"Stay hungry, Stay foolish","avatar":"/medias/avatars/lyn-draw.jpg"},{"name":"Subject_No_i","url":"https://subjectnoi.github.io","title":"访问主页","introduction":"在原七海 中野三玖 中野二乃 樱岛麻衣的老公","avatar":"/medias/avatars/lzh.png"},{"name":"菁菁","url":"https://angericky.github.io/","title":"访问主页","introduction":"做什么都是因为喜欢","avatar":"/medias/avatars/jingjing.jpg"},{"name":"Sweet-Q","url":"https://sweet-q.github.io","title":"访问主页","introduction":"华东师范大学数学系","avatar":"/medias/avatars/babyq.png"},{"name":"伟大的蚊子","url":"https://www.cnblogs.com/cww97/","title":"访问主页","introduction":"鼓楼的夜晚时间匆匆","avatar":"/medias/avatars/cww97.jpg"},{"name":"Fun4wut","url":"https://blog.fun4go.top","title":"访问主页","introduction":"菜鸡欢迎大佬的光顾","avatar":"/medias/avatars/fun4go.png"},{"name":"Hael Chan","url":"https://haelchan.me/","title":"访问主页","introduction":"浙江大学 & NLP & ML","avatar":"/medias/avatars/hael.jpg"},{"name":"happygirlzt","url":"https://www.happygirlzt.com","title":"访问主页","introduction":"A Backend Engineer","avatar":"/medias/avatars/zhangting.jpg"},{"name":"星空无限","url":"https://liyangzone.com","title":"访问主页","introduction":"前端开发，死飞大佬。分享技术，分享生活。","avatar":"/medias/avatars/liyangzone.jpg"},{"name":"Mashiro","url":"https://2heng.xin/","title":"访问主页","introduction":"樱花庄的白猫","avatar":"/medias/avatars/mashiro.jpg"},{"name":"hzwer","url":"https://hzwer.com/","title":"访问主页","introduction":"北京大学计算机系","avatar":"/medias/avatars/hzwer.jpg"},{"name":"MPY634","url":"https://mpy634.cn/","title":"访问主页","introduction":"摸鱼，永无止境。","avatar":"/medias/avatars/mpy634.png"},{"name":"徐铭辰的博客","url":"https://michaelxucs.com","title":"访问主页","introduction":"埃克塞特大学计算机系","avatar":"/medias/avatars/michael.jpg"},{"name":"Mizunashi","url":"https://mizunashi.me","title":"访问主页","introduction":"欢迎大佬们来玩","avatar":"/medias/avatars/mizunashi.png"},{"name":"xuzhongyou","url":"https://xuzhongyou.github.io/","title":"访问主页","introduction":"我哽咽道：你是赵默笙，可我不是何以琛啊。","avatar":"/medias/avatars/xuzhongyou.jpg"},{"name":"zerol","url":"https://zerol.me/","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/huaji.jpg"},{"name":"Zhang Yi","url":"https://codewithzhangyi.com/","title":"访问主页","introduction":"Coding is the New Sexy","avatar":"/medias/avatars/zhangyi.jpg"},{"name":"科学空间","url":"https://spaces.ac.cn/","title":"访问主页","introduction":"中山大学基础数学研究生","avatar":"/medias/avatars/spacesac.png"},{"name":"lucifer的博客","url":"https://lucifer.ren/blog/","title":"访问主页","introduction":"一个脑洞很大的程序员。","avatar":"https://tva1.sinaimg.cn/large/006tNbRwly1ga7ognflh9j30b40b4q3w.jpg"},{"name":"钱栋伟","url":"https://sscjwdyzdw.club","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/qiandongwei.jpg"},{"name":"CJ Blog","url":"https://chrisju.cn/","title":"访问主页","introduction":"Failing means foolish.","avatar":"/medias/avatars/mouse.jpg"},{"name":"Tawn","url":"https://tawn0000.github.io/","title":"访问主页","introduction":"JNU ACMer","avatar":"/medias/avatars/tawn.jpg"},{"name":"Master X","url":"https://masterx.top/","title":"访问主页","introduction":"ECNU&ML&DL","avatar":"/medias/avatars/masterx.jpg"},{"name":"分享客","url":"https://sharerdiary.com/","title":"访问主页","introduction":"爱生活，爱分享！","avatar":"/medias/avatars/yezijie.png"},{"name":"taotao","url":"https://zouzhitao.github.io","title":"访问主页","introduction":"taotao 码字的地方","avatar":"/medias/avatars/taotao.jpg"},{"name":"Xiejiadong","url":"https://xiejiadong.com","title":"访问主页","introduction":"Xiejiadong's blog","avatar":"/medias/avatars/xiejiadong.jpg"},{"name":"飞吧","url":"https://fei.bar","title":"访问主页","introduction":"啓飞的个人博客","avatar":"/medias/avatars/feibar.png"},{"name":"ajin","url":"https://ajin.cloud","title":"访问主页","introduction":"Always be enthusiastic","avatar":"/medias/avatars/ajin.jpg"},{"name":"Hiyoung","url":"https://hiyoungai.com/","title":"访问主页","introduction":"宠辱不惊，看庭前花开花落；去留无意，望天空云卷云舒。","avatar":"https://cdn.jsdelivr.net/gh/hiyoung123/cdn/img/avatar.jpg"},{"name":"无言的博客","url":"https://www.yzplove.top","title":"访问主页","introduction":"代码真是越敲越香","avatar":"https://cdn.jsdelivr.net/gh/yzp-99/yzp-99.github.io/medias/avatars/me.jpg"},{"name":"Naixin Zhang","url":"https://naixinzhang.github.io/","title":"访问主页","introduction":"Econ Master | Data Analyst/scientist Candidate","avatar":"https://naixinzhang.github.io/medias/avatars/avatar.jpg"},{"name":"帅张的梦呓","url":"https://ishuaizhang.com","title":"访问主页","introduction":"XDUer","avatar":"https://ishuaizhang.com/medias/avatars/avatar.jpg"},{"name":"Gatsby’s blog","url":"https://a347807131.github.io/","title":"访问主页","introduction":"Nothing perfect, Noting special.","avatar":"https://a347807131.github.io/medias/avatar.gif"},{"name":"宇宙湾","url":"https://yuzhouwan.com/","title":"访问主页","introduction":"主要是大数据和人工智能的原创文章。","avatar":"https://yuzhouwan.com/yuzhouwan_logo_128x128.ico"},{"name":"Dotnet9的博客","url":"https://dotnet9.com","title":"访问主页","introduction":"一个热衷于互联网分享精神的个人博客站点","avatar":"https://img.dotnet9.com/logo-foot.png"},{"name":"Macchiato","url":"https://hcj123123.oschina.io","title":"访问主页","introduction":"java学习者","avatar":"https://y.gtimg.cn/music/photo_new/T002R300x300M000002qD7gF3fW0JL_1.jpg?max_age=2592000"},{"name":"过客~励む","url":"https://yafine-blog.cn","title":"访问主页","introduction":"你现在的努力，是为了以后有更多的选择。","avatar":"https://yafine-blog.cn/medias/avatar.jpg"},{"name":"meteorsh","url":"https://weisenhui.top","title":"访问主页","introduction":"Data Science & Engineering","avatar":"https://weisenhui.top/medias/avatar.jpg"},{"name":"Kuroko","url":"https://kuroko.info","title":"访问主页","introduction":"浓烟下的诗歌电台","avatar":"http://kuroko.info/wp-content/uploads/2020/11/2.jpg"}]}},"excerpt":"","more":"<h1 id=\"欢迎留言\"><a href=\"#欢迎留言\" class=\"headerlink\" title=\"欢迎留言\"></a>欢迎留言</h1><p>关注物理学问题，区块链技术，微服务系统，算法设计，音视频系统开发，不正经的什么都喜欢聊。</p>\n<p>欢迎讨论，广交朋友。</p>\n<h1 id=\"友链交换\"><a href=\"#友链交换\" class=\"headerlink\" title=\"友链交换\"></a>友链交换</h1><p>想要交换友链的小伙伴，欢迎在评论区留言，留言格式：</p>\n<ul>\n<li><strong>名称：</strong>你的博客名称</li>\n<li><strong>地址：</strong>你的博客地址</li>\n<li><strong>简介：</strong>一句话简介</li>\n<li><strong>头像：</strong>你的头像地址</li>\n</ul>\n<p>例如我的博客友链，大家可以加到自己博客里哦：</p>\n<ul>\n<li><strong>名称：</strong>catiga</li>\n<li><strong>地址：</strong><a href=\"https://catiga.github.io\">https://catiga.github.io</a></li>\n<li><strong>简介：</strong>学习物理不挣钱</li>\n</ul>\n"},{"title":"friends","date":"2021-10-23T08:42:10.000Z","type":"friends","layout":"friends","_content":"\n# 友链交换\n想要交换友链的小伙伴，欢迎在留言板留言，留言格式：\n* **名称：**你的博客名称\n* **地址：**你的博客地址\n* **简介：**一句话简介\n* **头像：**你的头像地址\n\n例如我的博客友链，大家可以加到自己博客里哦：\n* **名称：**catiga\n* **地址：**https://catiga.github.io\n* **简介：**学习物理不挣钱\n","source":"friends/index.md","raw":"---\ntitle: friends\ndate: 2021-10-23 16:42:10\ntype: \"friends\"\nlayout: \"friends\"\n---\n\n# 友链交换\n想要交换友链的小伙伴，欢迎在留言板留言，留言格式：\n* **名称：**你的博客名称\n* **地址：**你的博客地址\n* **简介：**一句话简介\n* **头像：**你的头像地址\n\n例如我的博客友链，大家可以加到自己博客里哦：\n* **名称：**catiga\n* **地址：**https://catiga.github.io\n* **简介：**学习物理不挣钱\n","updated":"2021-10-24T08:55:48.013Z","path":"friends/index.html","comments":1,"_id":"cl10m9khq0024duwg90x2tth2","content":"<h1 id=\"友链交换\"><a href=\"#友链交换\" class=\"headerlink\" title=\"友链交换\"></a>友链交换</h1><p>想要交换友链的小伙伴，欢迎在留言板留言，留言格式：</p>\n<ul>\n<li><strong>名称：</strong>你的博客名称</li>\n<li><strong>地址：</strong>你的博客地址</li>\n<li><strong>简介：</strong>一句话简介</li>\n<li><strong>头像：</strong>你的头像地址</li>\n</ul>\n<p>例如我的博客友链，大家可以加到自己博客里哦：</p>\n<ul>\n<li><strong>名称：</strong>catiga</li>\n<li><strong>地址：</strong><a href=\"https://catiga.github.io\">https://catiga.github.io</a></li>\n<li><strong>简介：</strong>学习物理不挣钱</li>\n</ul>\n","site":{"data":{"musics":[{"name":"夜曲","artist":"周杰伦","url":"/medias/music/yequ.mp3","cover":"/medias/music/avatars/yequ.jpg"},{"name":"一路向北","artist":"周杰伦","url":"/medias/music/yiluxiangbei.mp3","cover":"/medias/music/avatars/yiluxiangbei.jpg"},{"name":"来自天堂的魔鬼","artist":"邓紫棋","url":"/medias/music/tiantangdemogui.mp3","cover":"/medias/music/avatars/tiantangdemogui.jpg"},{"name":"倒数","artist":"邓紫棋","url":"/medias/music/daoshu.mp3","cover":"/medias/music/avatars/daoshu.jpg"}],"friends":[{"name":"知乎专栏","url":"https://zhuanlan.zhihu.com/godweiyang","title":"访问主页","introduction":"算法码上来","avatar":"/medias/avatars/myzhihu.png"},{"name":"火山翻译","url":"https://translate.volcengine.cn","title":"访问主页","introduction":"提供全球领先的翻译技术与服务","avatar":"/medias/avatars/bytedtrans.png"},{"name":"AntNLP","url":"https://antnlp.org","title":"访问主页","introduction":"华东师范大学自然语言处理实验室欢迎您的加入！","avatar":"/medias/avatars/antnlp.ico"},{"name":"IDS²","url":"https://www.smart-dependable-sino-europe.institute","title":"访问主页","introduction":"中欧可靠智能软件联合实验室欢迎您的加入！","avatar":"/medias/avatars/ids2.jpg"},{"name":"孙长志","url":"https://www.czsun.site","title":"访问主页","introduction":"AntNLP博士大师兄！","avatar":"/medias/avatars/sunchangzhi.jpg"},{"name":"纪焘","url":"https://taoji.site","title":"访问主页","introduction":"AntNLP博士带明星！","avatar":"/medias/avatars/jitao.jpg"},{"name":"杜雨沛","url":"https://yupei-du.github.io/","title":"访问主页","introduction":"AntNLP唱跳RAP打篮球全能师兄！","avatar":"/medias/avatars/duyupei.jpg"},{"name":"0xbirdpwn","url":"https://0xbird.top/","title":"访问主页","introduction":"十步杀一人，千里不留行，事了拂衣去，深藏功与名。","avatar":"/medias/avatars/0xbird.png"},{"name":"李佳倩的博客","url":"https://jiaqianlee.com/","title":"访问主页","introduction":"一只小白的成长之路！","avatar":"/medias/avatars/lijiaqian.png"},{"name":"kewlgrl","url":"https://blog.csdn.net/MIKASA3","title":"访问主页","introduction":"好大一只咸鱼哇","avatar":"/medias/avatars/kewlgrl.jpg"},{"name":"Think Far Blog","url":"https://wuli749826.github.io","title":"访问主页","introduction":"我曾经拥有这一切，转眼都飘散如烟。","avatar":"/medias/avatars/gsy.jpg"},{"name":"望城风景","url":"https://www.itaowei.cn/","title":"访问主页","introduction":"用力活过的日子，才配得上此刻的缅怀。","avatar":"/medias/avatars/taowei.jpg"},{"name":"jxtxzzw空间","url":"https://www.jxtxzzw.com/wordpress","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/zzw.jpg"},{"name":"DREAMWINGS","url":"https://www.dreamwings.cn/","title":"访问主页","introduction":"夢はそこでないと、私の権利である","avatar":"/medias/avatars/qianqian.png"},{"name":"ElaineLv","url":"https://www.elainelv.com/","title":"访问主页","introduction":"Stay hungry, Stay foolish","avatar":"/medias/avatars/lyn-draw.jpg"},{"name":"Subject_No_i","url":"https://subjectnoi.github.io","title":"访问主页","introduction":"在原七海 中野三玖 中野二乃 樱岛麻衣的老公","avatar":"/medias/avatars/lzh.png"},{"name":"菁菁","url":"https://angericky.github.io/","title":"访问主页","introduction":"做什么都是因为喜欢","avatar":"/medias/avatars/jingjing.jpg"},{"name":"Sweet-Q","url":"https://sweet-q.github.io","title":"访问主页","introduction":"华东师范大学数学系","avatar":"/medias/avatars/babyq.png"},{"name":"伟大的蚊子","url":"https://www.cnblogs.com/cww97/","title":"访问主页","introduction":"鼓楼的夜晚时间匆匆","avatar":"/medias/avatars/cww97.jpg"},{"name":"Fun4wut","url":"https://blog.fun4go.top","title":"访问主页","introduction":"菜鸡欢迎大佬的光顾","avatar":"/medias/avatars/fun4go.png"},{"name":"Hael Chan","url":"https://haelchan.me/","title":"访问主页","introduction":"浙江大学 & NLP & ML","avatar":"/medias/avatars/hael.jpg"},{"name":"happygirlzt","url":"https://www.happygirlzt.com","title":"访问主页","introduction":"A Backend Engineer","avatar":"/medias/avatars/zhangting.jpg"},{"name":"星空无限","url":"https://liyangzone.com","title":"访问主页","introduction":"前端开发，死飞大佬。分享技术，分享生活。","avatar":"/medias/avatars/liyangzone.jpg"},{"name":"Mashiro","url":"https://2heng.xin/","title":"访问主页","introduction":"樱花庄的白猫","avatar":"/medias/avatars/mashiro.jpg"},{"name":"hzwer","url":"https://hzwer.com/","title":"访问主页","introduction":"北京大学计算机系","avatar":"/medias/avatars/hzwer.jpg"},{"name":"MPY634","url":"https://mpy634.cn/","title":"访问主页","introduction":"摸鱼，永无止境。","avatar":"/medias/avatars/mpy634.png"},{"name":"徐铭辰的博客","url":"https://michaelxucs.com","title":"访问主页","introduction":"埃克塞特大学计算机系","avatar":"/medias/avatars/michael.jpg"},{"name":"Mizunashi","url":"https://mizunashi.me","title":"访问主页","introduction":"欢迎大佬们来玩","avatar":"/medias/avatars/mizunashi.png"},{"name":"xuzhongyou","url":"https://xuzhongyou.github.io/","title":"访问主页","introduction":"我哽咽道：你是赵默笙，可我不是何以琛啊。","avatar":"/medias/avatars/xuzhongyou.jpg"},{"name":"zerol","url":"https://zerol.me/","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/huaji.jpg"},{"name":"Zhang Yi","url":"https://codewithzhangyi.com/","title":"访问主页","introduction":"Coding is the New Sexy","avatar":"/medias/avatars/zhangyi.jpg"},{"name":"科学空间","url":"https://spaces.ac.cn/","title":"访问主页","introduction":"中山大学基础数学研究生","avatar":"/medias/avatars/spacesac.png"},{"name":"lucifer的博客","url":"https://lucifer.ren/blog/","title":"访问主页","introduction":"一个脑洞很大的程序员。","avatar":"https://tva1.sinaimg.cn/large/006tNbRwly1ga7ognflh9j30b40b4q3w.jpg"},{"name":"钱栋伟","url":"https://sscjwdyzdw.club","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/qiandongwei.jpg"},{"name":"CJ Blog","url":"https://chrisju.cn/","title":"访问主页","introduction":"Failing means foolish.","avatar":"/medias/avatars/mouse.jpg"},{"name":"Tawn","url":"https://tawn0000.github.io/","title":"访问主页","introduction":"JNU ACMer","avatar":"/medias/avatars/tawn.jpg"},{"name":"Master X","url":"https://masterx.top/","title":"访问主页","introduction":"ECNU&ML&DL","avatar":"/medias/avatars/masterx.jpg"},{"name":"分享客","url":"https://sharerdiary.com/","title":"访问主页","introduction":"爱生活，爱分享！","avatar":"/medias/avatars/yezijie.png"},{"name":"taotao","url":"https://zouzhitao.github.io","title":"访问主页","introduction":"taotao 码字的地方","avatar":"/medias/avatars/taotao.jpg"},{"name":"Xiejiadong","url":"https://xiejiadong.com","title":"访问主页","introduction":"Xiejiadong's blog","avatar":"/medias/avatars/xiejiadong.jpg"},{"name":"飞吧","url":"https://fei.bar","title":"访问主页","introduction":"啓飞的个人博客","avatar":"/medias/avatars/feibar.png"},{"name":"ajin","url":"https://ajin.cloud","title":"访问主页","introduction":"Always be enthusiastic","avatar":"/medias/avatars/ajin.jpg"},{"name":"Hiyoung","url":"https://hiyoungai.com/","title":"访问主页","introduction":"宠辱不惊，看庭前花开花落；去留无意，望天空云卷云舒。","avatar":"https://cdn.jsdelivr.net/gh/hiyoung123/cdn/img/avatar.jpg"},{"name":"无言的博客","url":"https://www.yzplove.top","title":"访问主页","introduction":"代码真是越敲越香","avatar":"https://cdn.jsdelivr.net/gh/yzp-99/yzp-99.github.io/medias/avatars/me.jpg"},{"name":"Naixin Zhang","url":"https://naixinzhang.github.io/","title":"访问主页","introduction":"Econ Master | Data Analyst/scientist Candidate","avatar":"https://naixinzhang.github.io/medias/avatars/avatar.jpg"},{"name":"帅张的梦呓","url":"https://ishuaizhang.com","title":"访问主页","introduction":"XDUer","avatar":"https://ishuaizhang.com/medias/avatars/avatar.jpg"},{"name":"Gatsby’s blog","url":"https://a347807131.github.io/","title":"访问主页","introduction":"Nothing perfect, Noting special.","avatar":"https://a347807131.github.io/medias/avatar.gif"},{"name":"宇宙湾","url":"https://yuzhouwan.com/","title":"访问主页","introduction":"主要是大数据和人工智能的原创文章。","avatar":"https://yuzhouwan.com/yuzhouwan_logo_128x128.ico"},{"name":"Dotnet9的博客","url":"https://dotnet9.com","title":"访问主页","introduction":"一个热衷于互联网分享精神的个人博客站点","avatar":"https://img.dotnet9.com/logo-foot.png"},{"name":"Macchiato","url":"https://hcj123123.oschina.io","title":"访问主页","introduction":"java学习者","avatar":"https://y.gtimg.cn/music/photo_new/T002R300x300M000002qD7gF3fW0JL_1.jpg?max_age=2592000"},{"name":"过客~励む","url":"https://yafine-blog.cn","title":"访问主页","introduction":"你现在的努力，是为了以后有更多的选择。","avatar":"https://yafine-blog.cn/medias/avatar.jpg"},{"name":"meteorsh","url":"https://weisenhui.top","title":"访问主页","introduction":"Data Science & Engineering","avatar":"https://weisenhui.top/medias/avatar.jpg"},{"name":"Kuroko","url":"https://kuroko.info","title":"访问主页","introduction":"浓烟下的诗歌电台","avatar":"http://kuroko.info/wp-content/uploads/2020/11/2.jpg"}]}},"excerpt":"","more":"<h1 id=\"友链交换\"><a href=\"#友链交换\" class=\"headerlink\" title=\"友链交换\"></a>友链交换</h1><p>想要交换友链的小伙伴，欢迎在留言板留言，留言格式：</p>\n<ul>\n<li><strong>名称：</strong>你的博客名称</li>\n<li><strong>地址：</strong>你的博客地址</li>\n<li><strong>简介：</strong>一句话简介</li>\n<li><strong>头像：</strong>你的头像地址</li>\n</ul>\n<p>例如我的博客友链，大家可以加到自己博客里哦：</p>\n<ul>\n<li><strong>名称：</strong>catiga</li>\n<li><strong>地址：</strong><a href=\"https://catiga.github.io\">https://catiga.github.io</a></li>\n<li><strong>简介：</strong>学习物理不挣钱</li>\n</ul>\n"}],"Post":[{"title":"理解“无穷小”","top":false,"cover":false,"toc":true,"mathjax":true,"date":"2021-10-25T11:29:25.000Z","password":null,"summary":null,"_content":"\n> 九城爱数学\n\n# 什么是无穷小？\n无穷小数学符号记为 $\\epsilon$ , 它的数学性质应该满足：\n**对于任意给定实数 $\\gamma$>0**，都满足 0<|$\\epsilon$|<$\\gamma$。很明显，无穷小是数学概念，并不可能存在于实数域中。\n以极限形式定义会得到更加简洁直观的表达：满足$\\lim\\limits_{x\\to c}f(x) = 0$ 的 $f(x)$ 是 $x\\to c$ 时的无穷小。\n\n无穷小有一个重要的隐含性质，即参考系无关，类似物理定律，在任意参照物系统里面，都绝对成立。\n那么无穷小到底是一个数么？以反证法来说明，如果无穷小是一个数，那么这个数一定不会小于它本身，则违反了上述无穷小定义公式，所以无穷小并不是一个数。\n实际上，在经典的极限和微积分定义中，无穷小通常是以函数、数列形式表达，可以自由表达。\n\n# 关于0 and 无穷小\n0，你可以看成是常数，也可以是常数函数 $f(x)=0$ 或者常数数列 $ $\\{$0, 0, 0, ...$\\}$ $，都符合无穷小的定义，绝对值小于任意正实数。\n无穷小与0一个最重要的区别是数学上，无穷小可以用作除法，两个相关（相关的意义是具有函数关系）的无穷小的比值就是这个函数的导数。\n\n# 无穷小 and 物理\n数学意义上的无穷小，是一个混乱且容易引起歧义的量，正在逐渐消失在视野；但是在屋里中，这个无穷小确是切实存在的。\n物理学的意义是用数学描述现实世界的科学，一个重要区别是数学本质是连续的，数学上的离散化是在连续基础上界定和设计出来，而物理学对现实世界的描述过程中，引发了多次革命，最为重要的一次革命就是现实世界的离散化（量子化），而这个离散化后的常量值就是物理世界中的无穷小，即普朗克常数。\n\n** 刚开始逼着写博客，有点累，休息了。实际上未完。。。 **","source":"_posts/about-infinitesimal.md","raw":"---\ntitle: 理解“无穷小”\ntop: false\ncover: false\ntoc: true\nmathjax: true\ndate: 2021-10-25 19:29:25\npassword:\nsummary:\ntags:\n- 数学\n- 极限\ncategories:\n- 数学\n---\n\n> 九城爱数学\n\n# 什么是无穷小？\n无穷小数学符号记为 $\\epsilon$ , 它的数学性质应该满足：\n**对于任意给定实数 $\\gamma$>0**，都满足 0<|$\\epsilon$|<$\\gamma$。很明显，无穷小是数学概念，并不可能存在于实数域中。\n以极限形式定义会得到更加简洁直观的表达：满足$\\lim\\limits_{x\\to c}f(x) = 0$ 的 $f(x)$ 是 $x\\to c$ 时的无穷小。\n\n无穷小有一个重要的隐含性质，即参考系无关，类似物理定律，在任意参照物系统里面，都绝对成立。\n那么无穷小到底是一个数么？以反证法来说明，如果无穷小是一个数，那么这个数一定不会小于它本身，则违反了上述无穷小定义公式，所以无穷小并不是一个数。\n实际上，在经典的极限和微积分定义中，无穷小通常是以函数、数列形式表达，可以自由表达。\n\n# 关于0 and 无穷小\n0，你可以看成是常数，也可以是常数函数 $f(x)=0$ 或者常数数列 $ $\\{$0, 0, 0, ...$\\}$ $，都符合无穷小的定义，绝对值小于任意正实数。\n无穷小与0一个最重要的区别是数学上，无穷小可以用作除法，两个相关（相关的意义是具有函数关系）的无穷小的比值就是这个函数的导数。\n\n# 无穷小 and 物理\n数学意义上的无穷小，是一个混乱且容易引起歧义的量，正在逐渐消失在视野；但是在屋里中，这个无穷小确是切实存在的。\n物理学的意义是用数学描述现实世界的科学，一个重要区别是数学本质是连续的，数学上的离散化是在连续基础上界定和设计出来，而物理学对现实世界的描述过程中，引发了多次革命，最为重要的一次革命就是现实世界的离散化（量子化），而这个离散化后的常量值就是物理世界中的无穷小，即普朗克常数。\n\n** 刚开始逼着写博客，有点累，休息了。实际上未完。。。 **","slug":"about-infinitesimal","published":1,"updated":"2021-10-26T09:08:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl10m9kgc0001duwgmjmey3xh","content":"<blockquote>\n<p>九城爱数学</p>\n</blockquote>\n<h1 id=\"什么是无穷小？\"><a href=\"#什么是无穷小？\" class=\"headerlink\" title=\"什么是无穷小？\"></a>什么是无穷小？</h1><p>无穷小数学符号记为 $\\epsilon$ , 它的数学性质应该满足：<br><strong>对于任意给定实数 $\\gamma$&gt;0</strong>，都满足 0&lt;|$\\epsilon$|&lt;$\\gamma$。很明显，无穷小是数学概念，并不可能存在于实数域中。<br>以极限形式定义会得到更加简洁直观的表达：满足$\\lim\\limits_{x\\to c}f(x) = 0$ 的 $f(x)$ 是 $x\\to c$ 时的无穷小。</p>\n<p>无穷小有一个重要的隐含性质，即参考系无关，类似物理定律，在任意参照物系统里面，都绝对成立。<br>那么无穷小到底是一个数么？以反证法来说明，如果无穷小是一个数，那么这个数一定不会小于它本身，则违反了上述无穷小定义公式，所以无穷小并不是一个数。<br>实际上，在经典的极限和微积分定义中，无穷小通常是以函数、数列形式表达，可以自由表达。</p>\n<h1 id=\"关于0-and-无穷小\"><a href=\"#关于0-and-无穷小\" class=\"headerlink\" title=\"关于0 and 无穷小\"></a>关于0 and 无穷小</h1><p>0，你可以看成是常数，也可以是常数函数 $f(x)=0$ 或者常数数列 $ ${$0, 0, 0, …$}$ $，都符合无穷小的定义，绝对值小于任意正实数。<br>无穷小与0一个最重要的区别是数学上，无穷小可以用作除法，两个相关（相关的意义是具有函数关系）的无穷小的比值就是这个函数的导数。</p>\n<h1 id=\"无穷小-and-物理\"><a href=\"#无穷小-and-物理\" class=\"headerlink\" title=\"无穷小 and 物理\"></a>无穷小 and 物理</h1><p>数学意义上的无穷小，是一个混乱且容易引起歧义的量，正在逐渐消失在视野；但是在屋里中，这个无穷小确是切实存在的。<br>物理学的意义是用数学描述现实世界的科学，一个重要区别是数学本质是连续的，数学上的离散化是在连续基础上界定和设计出来，而物理学对现实世界的描述过程中，引发了多次革命，最为重要的一次革命就是现实世界的离散化（量子化），而这个离散化后的常量值就是物理世界中的无穷小，即普朗克常数。</p>\n<p>** 刚开始逼着写博客，有点累，休息了。实际上未完。。。 **</p>\n","site":{"data":{"musics":[{"name":"夜曲","artist":"周杰伦","url":"/medias/music/yequ.mp3","cover":"/medias/music/avatars/yequ.jpg"},{"name":"一路向北","artist":"周杰伦","url":"/medias/music/yiluxiangbei.mp3","cover":"/medias/music/avatars/yiluxiangbei.jpg"},{"name":"来自天堂的魔鬼","artist":"邓紫棋","url":"/medias/music/tiantangdemogui.mp3","cover":"/medias/music/avatars/tiantangdemogui.jpg"},{"name":"倒数","artist":"邓紫棋","url":"/medias/music/daoshu.mp3","cover":"/medias/music/avatars/daoshu.jpg"}],"friends":[{"name":"知乎专栏","url":"https://zhuanlan.zhihu.com/godweiyang","title":"访问主页","introduction":"算法码上来","avatar":"/medias/avatars/myzhihu.png"},{"name":"火山翻译","url":"https://translate.volcengine.cn","title":"访问主页","introduction":"提供全球领先的翻译技术与服务","avatar":"/medias/avatars/bytedtrans.png"},{"name":"AntNLP","url":"https://antnlp.org","title":"访问主页","introduction":"华东师范大学自然语言处理实验室欢迎您的加入！","avatar":"/medias/avatars/antnlp.ico"},{"name":"IDS²","url":"https://www.smart-dependable-sino-europe.institute","title":"访问主页","introduction":"中欧可靠智能软件联合实验室欢迎您的加入！","avatar":"/medias/avatars/ids2.jpg"},{"name":"孙长志","url":"https://www.czsun.site","title":"访问主页","introduction":"AntNLP博士大师兄！","avatar":"/medias/avatars/sunchangzhi.jpg"},{"name":"纪焘","url":"https://taoji.site","title":"访问主页","introduction":"AntNLP博士带明星！","avatar":"/medias/avatars/jitao.jpg"},{"name":"杜雨沛","url":"https://yupei-du.github.io/","title":"访问主页","introduction":"AntNLP唱跳RAP打篮球全能师兄！","avatar":"/medias/avatars/duyupei.jpg"},{"name":"0xbirdpwn","url":"https://0xbird.top/","title":"访问主页","introduction":"十步杀一人，千里不留行，事了拂衣去，深藏功与名。","avatar":"/medias/avatars/0xbird.png"},{"name":"李佳倩的博客","url":"https://jiaqianlee.com/","title":"访问主页","introduction":"一只小白的成长之路！","avatar":"/medias/avatars/lijiaqian.png"},{"name":"kewlgrl","url":"https://blog.csdn.net/MIKASA3","title":"访问主页","introduction":"好大一只咸鱼哇","avatar":"/medias/avatars/kewlgrl.jpg"},{"name":"Think Far Blog","url":"https://wuli749826.github.io","title":"访问主页","introduction":"我曾经拥有这一切，转眼都飘散如烟。","avatar":"/medias/avatars/gsy.jpg"},{"name":"望城风景","url":"https://www.itaowei.cn/","title":"访问主页","introduction":"用力活过的日子，才配得上此刻的缅怀。","avatar":"/medias/avatars/taowei.jpg"},{"name":"jxtxzzw空间","url":"https://www.jxtxzzw.com/wordpress","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/zzw.jpg"},{"name":"DREAMWINGS","url":"https://www.dreamwings.cn/","title":"访问主页","introduction":"夢はそこでないと、私の権利である","avatar":"/medias/avatars/qianqian.png"},{"name":"ElaineLv","url":"https://www.elainelv.com/","title":"访问主页","introduction":"Stay hungry, Stay foolish","avatar":"/medias/avatars/lyn-draw.jpg"},{"name":"Subject_No_i","url":"https://subjectnoi.github.io","title":"访问主页","introduction":"在原七海 中野三玖 中野二乃 樱岛麻衣的老公","avatar":"/medias/avatars/lzh.png"},{"name":"菁菁","url":"https://angericky.github.io/","title":"访问主页","introduction":"做什么都是因为喜欢","avatar":"/medias/avatars/jingjing.jpg"},{"name":"Sweet-Q","url":"https://sweet-q.github.io","title":"访问主页","introduction":"华东师范大学数学系","avatar":"/medias/avatars/babyq.png"},{"name":"伟大的蚊子","url":"https://www.cnblogs.com/cww97/","title":"访问主页","introduction":"鼓楼的夜晚时间匆匆","avatar":"/medias/avatars/cww97.jpg"},{"name":"Fun4wut","url":"https://blog.fun4go.top","title":"访问主页","introduction":"菜鸡欢迎大佬的光顾","avatar":"/medias/avatars/fun4go.png"},{"name":"Hael Chan","url":"https://haelchan.me/","title":"访问主页","introduction":"浙江大学 & NLP & ML","avatar":"/medias/avatars/hael.jpg"},{"name":"happygirlzt","url":"https://www.happygirlzt.com","title":"访问主页","introduction":"A Backend Engineer","avatar":"/medias/avatars/zhangting.jpg"},{"name":"星空无限","url":"https://liyangzone.com","title":"访问主页","introduction":"前端开发，死飞大佬。分享技术，分享生活。","avatar":"/medias/avatars/liyangzone.jpg"},{"name":"Mashiro","url":"https://2heng.xin/","title":"访问主页","introduction":"樱花庄的白猫","avatar":"/medias/avatars/mashiro.jpg"},{"name":"hzwer","url":"https://hzwer.com/","title":"访问主页","introduction":"北京大学计算机系","avatar":"/medias/avatars/hzwer.jpg"},{"name":"MPY634","url":"https://mpy634.cn/","title":"访问主页","introduction":"摸鱼，永无止境。","avatar":"/medias/avatars/mpy634.png"},{"name":"徐铭辰的博客","url":"https://michaelxucs.com","title":"访问主页","introduction":"埃克塞特大学计算机系","avatar":"/medias/avatars/michael.jpg"},{"name":"Mizunashi","url":"https://mizunashi.me","title":"访问主页","introduction":"欢迎大佬们来玩","avatar":"/medias/avatars/mizunashi.png"},{"name":"xuzhongyou","url":"https://xuzhongyou.github.io/","title":"访问主页","introduction":"我哽咽道：你是赵默笙，可我不是何以琛啊。","avatar":"/medias/avatars/xuzhongyou.jpg"},{"name":"zerol","url":"https://zerol.me/","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/huaji.jpg"},{"name":"Zhang Yi","url":"https://codewithzhangyi.com/","title":"访问主页","introduction":"Coding is the New Sexy","avatar":"/medias/avatars/zhangyi.jpg"},{"name":"科学空间","url":"https://spaces.ac.cn/","title":"访问主页","introduction":"中山大学基础数学研究生","avatar":"/medias/avatars/spacesac.png"},{"name":"lucifer的博客","url":"https://lucifer.ren/blog/","title":"访问主页","introduction":"一个脑洞很大的程序员。","avatar":"https://tva1.sinaimg.cn/large/006tNbRwly1ga7ognflh9j30b40b4q3w.jpg"},{"name":"钱栋伟","url":"https://sscjwdyzdw.club","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/qiandongwei.jpg"},{"name":"CJ Blog","url":"https://chrisju.cn/","title":"访问主页","introduction":"Failing means foolish.","avatar":"/medias/avatars/mouse.jpg"},{"name":"Tawn","url":"https://tawn0000.github.io/","title":"访问主页","introduction":"JNU ACMer","avatar":"/medias/avatars/tawn.jpg"},{"name":"Master X","url":"https://masterx.top/","title":"访问主页","introduction":"ECNU&ML&DL","avatar":"/medias/avatars/masterx.jpg"},{"name":"分享客","url":"https://sharerdiary.com/","title":"访问主页","introduction":"爱生活，爱分享！","avatar":"/medias/avatars/yezijie.png"},{"name":"taotao","url":"https://zouzhitao.github.io","title":"访问主页","introduction":"taotao 码字的地方","avatar":"/medias/avatars/taotao.jpg"},{"name":"Xiejiadong","url":"https://xiejiadong.com","title":"访问主页","introduction":"Xiejiadong's blog","avatar":"/medias/avatars/xiejiadong.jpg"},{"name":"飞吧","url":"https://fei.bar","title":"访问主页","introduction":"啓飞的个人博客","avatar":"/medias/avatars/feibar.png"},{"name":"ajin","url":"https://ajin.cloud","title":"访问主页","introduction":"Always be enthusiastic","avatar":"/medias/avatars/ajin.jpg"},{"name":"Hiyoung","url":"https://hiyoungai.com/","title":"访问主页","introduction":"宠辱不惊，看庭前花开花落；去留无意，望天空云卷云舒。","avatar":"https://cdn.jsdelivr.net/gh/hiyoung123/cdn/img/avatar.jpg"},{"name":"无言的博客","url":"https://www.yzplove.top","title":"访问主页","introduction":"代码真是越敲越香","avatar":"https://cdn.jsdelivr.net/gh/yzp-99/yzp-99.github.io/medias/avatars/me.jpg"},{"name":"Naixin Zhang","url":"https://naixinzhang.github.io/","title":"访问主页","introduction":"Econ Master | Data Analyst/scientist Candidate","avatar":"https://naixinzhang.github.io/medias/avatars/avatar.jpg"},{"name":"帅张的梦呓","url":"https://ishuaizhang.com","title":"访问主页","introduction":"XDUer","avatar":"https://ishuaizhang.com/medias/avatars/avatar.jpg"},{"name":"Gatsby’s blog","url":"https://a347807131.github.io/","title":"访问主页","introduction":"Nothing perfect, Noting special.","avatar":"https://a347807131.github.io/medias/avatar.gif"},{"name":"宇宙湾","url":"https://yuzhouwan.com/","title":"访问主页","introduction":"主要是大数据和人工智能的原创文章。","avatar":"https://yuzhouwan.com/yuzhouwan_logo_128x128.ico"},{"name":"Dotnet9的博客","url":"https://dotnet9.com","title":"访问主页","introduction":"一个热衷于互联网分享精神的个人博客站点","avatar":"https://img.dotnet9.com/logo-foot.png"},{"name":"Macchiato","url":"https://hcj123123.oschina.io","title":"访问主页","introduction":"java学习者","avatar":"https://y.gtimg.cn/music/photo_new/T002R300x300M000002qD7gF3fW0JL_1.jpg?max_age=2592000"},{"name":"过客~励む","url":"https://yafine-blog.cn","title":"访问主页","introduction":"你现在的努力，是为了以后有更多的选择。","avatar":"https://yafine-blog.cn/medias/avatar.jpg"},{"name":"meteorsh","url":"https://weisenhui.top","title":"访问主页","introduction":"Data Science & Engineering","avatar":"https://weisenhui.top/medias/avatar.jpg"},{"name":"Kuroko","url":"https://kuroko.info","title":"访问主页","introduction":"浓烟下的诗歌电台","avatar":"http://kuroko.info/wp-content/uploads/2020/11/2.jpg"}]}},"excerpt":"","more":"<blockquote>\n<p>九城爱数学</p>\n</blockquote>\n<h1 id=\"什么是无穷小？\"><a href=\"#什么是无穷小？\" class=\"headerlink\" title=\"什么是无穷小？\"></a>什么是无穷小？</h1><p>无穷小数学符号记为 $\\epsilon$ , 它的数学性质应该满足：<br><strong>对于任意给定实数 $\\gamma$&gt;0</strong>，都满足 0&lt;|$\\epsilon$|&lt;$\\gamma$。很明显，无穷小是数学概念，并不可能存在于实数域中。<br>以极限形式定义会得到更加简洁直观的表达：满足$\\lim\\limits_{x\\to c}f(x) = 0$ 的 $f(x)$ 是 $x\\to c$ 时的无穷小。</p>\n<p>无穷小有一个重要的隐含性质，即参考系无关，类似物理定律，在任意参照物系统里面，都绝对成立。<br>那么无穷小到底是一个数么？以反证法来说明，如果无穷小是一个数，那么这个数一定不会小于它本身，则违反了上述无穷小定义公式，所以无穷小并不是一个数。<br>实际上，在经典的极限和微积分定义中，无穷小通常是以函数、数列形式表达，可以自由表达。</p>\n<h1 id=\"关于0-and-无穷小\"><a href=\"#关于0-and-无穷小\" class=\"headerlink\" title=\"关于0 and 无穷小\"></a>关于0 and 无穷小</h1><p>0，你可以看成是常数，也可以是常数函数 $f(x)=0$ 或者常数数列 $ ${$0, 0, 0, …$}$ $，都符合无穷小的定义，绝对值小于任意正实数。<br>无穷小与0一个最重要的区别是数学上，无穷小可以用作除法，两个相关（相关的意义是具有函数关系）的无穷小的比值就是这个函数的导数。</p>\n<h1 id=\"无穷小-and-物理\"><a href=\"#无穷小-and-物理\" class=\"headerlink\" title=\"无穷小 and 物理\"></a>无穷小 and 物理</h1><p>数学意义上的无穷小，是一个混乱且容易引起歧义的量，正在逐渐消失在视野；但是在屋里中，这个无穷小确是切实存在的。<br>物理学的意义是用数学描述现实世界的科学，一个重要区别是数学本质是连续的，数学上的离散化是在连续基础上界定和设计出来，而物理学对现实世界的描述过程中，引发了多次革命，最为重要的一次革命就是现实世界的离散化（量子化），而这个离散化后的常量值就是物理世界中的无穷小，即普朗克常数。</p>\n<p>** 刚开始逼着写博客，有点累，休息了。实际上未完。。。 **</p>\n"},{"title":"基于广义内容的推荐算法系统","top":false,"cover":false,"toc":true,"mathjax":true,"date":"2021-11-04T07:26:03.000Z","password":null,"summary":null,"_content":"\n# 写在前面 - 什么是基于内容推荐算法\n广义内容，是指包括文本、图片、音频、视频等在内的多媒体信息。\n基于内容的推荐算法(Content-Based Recommendations)是基于标的物相关信息、用户相关信息及用户对标的物的操作行为来构建推荐算法模型，为用户提供推荐服务。这里的标的物相关信息可以是对标的物文字描述的metadata信息、标签、用户评论、人工标注的信息等。用户相关信息是指人口统计学信息(如年龄、性别、偏好、地域、收入等等)。用户对标的物的操作行为可以是评论、收藏、点赞、观看、浏览、点击、加购物车、购买等。基于内容的推荐算法一般只依赖于用户自身的行为为用户提供推荐，不涉及到其他用户的行为。\n\n广义的标的物相关信息不限于文本信息，图片、语音、视频等都可以作为内容推荐的信息来源，只不过这类信息处理成本较大，不光是算法难度大、处理的时间及存储成本也相对更高。\n\n基于内容的推荐算法算是最早应用于工程实践的推荐算法，有大量的应用案例，如今日头条的推荐有很大比例是基于内容的推荐算法。\n\n\n# 基于内容的推荐算法实现原理\n基于内容的推荐算法的基本原理是根据用户的历史行为，获得用户的兴趣偏好，为用户推荐跟他的兴趣偏好相似的标的物，下图展示了基于内容的推荐算法逻辑过程。\n![算法逻辑](alg_resis.jpeg)\n\n从上图也可以看出，要做基于内容的个性化推荐，一般需要三个步骤，它们分别是：基于用户信息及用户操作行为构建用户特征表示、基于标的物信息构建标的物特征表示、基于用户及标的物特征表示为用户推荐标的物。\n![核心步骤](alg_struc.jpeg)\n\n本节我们先介绍如何基于核心步骤的1和2喂用户做推荐（即达到步骤3），然后分别对这三个步骤加以说明，介绍每个步骤都有哪些方法和策略可供选择。\n\n## 基于用户和标的物特征为用户推荐的核心思想\n有了用户特征和标的物特征，推荐思路总结有三个：\n\n**1.基于用户历史行为记录了做推荐**\n我们需要事先计算标的物之间的相似性，然后将用户历史记录中的标的物的相似标的物推荐给用户。\n不管标的物包含哪类信息，一般的思路是将标的物特征转化为向量化表示，有了向量化表示，就可以通过cosin余弦计算两个标的物向量之间的相似度，余弦是相邻边比值，当比值近似1的情况，相似度最好。\n\n**2.用户和标的物特征都用显式的标签表示，利用该表示做推荐**\n标的物用标签来表示，反过来，每个标签就可以关联一组标的物，那么根据用户的标签表示，用户的兴趣标签就可以关联到一组标的物，这组通过标签关联到的标的物，就可以作为给用户推荐的候选集合。这类方法就是所谓的倒排索引，是搜索业务通用的解决方案。\n\n**3.用户和标的物嵌入到同一个向量空间，基于向量相似（即计算向量余弦值）做推荐**\n当用户和标的物嵌入到同一个向量空间后，就可以通过计算用户和标的物之间的相似度，然后按照标的物跟用户的相似度，为用户推荐相似度高的标的物。还可以基于用户向量表示计算用户相似度，将相似用户喜欢的标的物推荐给该用户，这时标的物的嵌入是不必要的。\n\n上面就是基于内容推荐的核心思想，那么如何构建用户表示特征向量和标的物表示特征向量就是推荐系统的关键。\n\n## 构建用户特征向量\n\n用户的特征总结来讲有如下方法构建\n+ 基于用户对标的物的操作行为，如点击/购买/收藏/播放/评论等构建用户对标的物的偏好画像；\n+ 基于用户自身的人口统计学特征表示。\n\n具体来说：\n**1.用户行为记录作为显示特征**\n比如用户浏览过A、B、C三个视频，同时根据每个视频用户观看时长占分别视频总时长的比例给用户行为打分，这是用户的兴趣偏好就可以记录为{$(A, S1), (B, S2), (C, S3)$}，其中S1, S2, S3分别是用户对视频A、B、C的评分。\n\n该方案直接将用户历史操作过的标的物作为用户特征表示，在推荐时可以将与用户操作过的标的物相似的标的物推荐给用高糊。\n\n**2.显示的标签特征**\n如果标的物是有标签来描述，那么这些标签可以用来表征标的物。用户的兴趣画像也可以基于用户对标的物的行为来打上对应的标签。拿视频推荐来举例，如果用户过去看了科幻和恐怖类电影，那么恐怖和科幻就是用户的偏好标签了。\n每个标的物的标签可以是包含权重的，而用户对标的物的操作行为也是有权重的，而用户对标的物的操作行为也是有权重的，从而用户的兴趣标签是有权重的。\n在具体推荐时，可以将用户的兴趣标签关联到的标的物(具备该标签的标的物)推荐给用户。\n\n**3.向量方法的兴趣特征**\n可以基于标的物的信息将标的物嵌入到向量空间中，利用向量来表示标的物，稍后讲解嵌入的算法实现方案。有了标的物的向量化表示，用户的兴趣向量就可以用他操作过的标的物的向量的平均向量来表示了。\n这里表示用户兴趣向量有多种策略，可以基于用户对操作过的标的物的评分以及时间加权来获取用户的加权偏好向量，而不是直接取平均。另外，我们也可以根据用户操作过的标的物之间的相似度，喂用户构建多个兴趣向量（比如对标的物聚类，用户在某一类上操作过的标的物的向量均值作为用户在这个类别上的兴趣向量），从而更好的表达用户多方位的兴趣偏好。\n有了用户的兴趣向量及标的物的兴趣向量，可以基于向量相似性计算用户对标的物的偏好度，再基于偏好度大小来为用户推荐标的物。\n\n**4.通过交互方式获取用户兴趣标签**\n在用户首次注册让用户选择自己的兴趣偏好标签，一旦用户勾选了自己的兴趣标签，那么这些兴趣标签就是系统为用户推荐标的物的逻辑基础，具体推荐策略逻辑就可以按照上述方法进行。\n\n**5.用户的人口统计学特征**\n用户在登陆、注册时提供的关于自身相关的信息、通过运营活动用户填写的信息、通过用户行为利用算法逻辑得出的结论，如年龄、性别、地域、收入、爱好、居住地、工作地点等是非常主要的信息。基于这些关于用户维度的信息，我们可以将用户特征用向量化表示出来，向量的维度就是可获取的用户特征数。\n有了用户特征向量就可以计算用户相似度，将相思用户喜欢的标的物推荐给用户。\n\n## 构建标的物特征表示\n标的物的特征，一般可以利用显示的标签来表示，也可以利用隐式的向量（当然one-hot编码也是向量表示，但是不是隐式的）来刻画，向量的每个维度就是一个隐式的特征项。前面提到某些推荐算法需要计算标的物之间的相似度，下面我们在讲标的物的各种特征表示时，也简单介绍一下标的物之间的相似度计算方法。顺便说一下，标的物关联标的物的推荐方式也需要知道标的物之间的相似度。下面从四个方面来详细讲解怎么构建标的物的特征表示。\n\n**1.标的物包含标签信息**\n最简单的方式是将标签按照某种顺序排列，每个标签看成一个纬度，那么每个标的物就可以表示成一个N维向量，如 {item， [tag1, tag2, tag3, ..., tagN]}，如果标的物包含某个标签，向量在相应标签上的分量值为1，否则为0，即所谓的one-hot编码。通常N可能非常大，比如视频领域，N可能是几万或者几十万上百万，这时向量是稀疏矩阵，因为一般标的物只有几个或者几十个标签，采用稀疏向量的表示来优化向量存储和计算，提升效率。有个标的物基于标签的向量化表示，很容易基于cosin余弦计算相似度了。\n\n实际上标签不是这么简单的，有很多业务标签是分级的，比如电商（像淘宝），有多级标签，标签的层级关系形成一颗树状结构，这时向量化有个简单的表示方案，即只考虑最低层级标签（叶节点），基于叶节点标签构建向量表示。更复杂的方法，可以基于层级结构构建标签表示及计算标的物相似度。\n![标签树](tag_tree.png)\n\n标签是可以通过算法获取的，比如通过NLP从文本信息中提取关键词作为标签。对于图片/视频，通过他们的描述信息提取标签，另外可以通过目标检测的方法从图片/视频中提取相关对象构建标签。\n\n标签可以是用户打的，很多产品在用户与标的物交互时互相可以为标的物打标签，这些标签就是标的物的一种刻画。标签也可以是人工标注，Netflix在做推荐时，就请了上万专家对视频从上千个纬度来打标签，质量很高。很多行业的标的物来源于第三方供应商，他们在入驻平台时会被要求按照某些规范填写相关标签信息。\n\n**2.标的物具备结构化的信息**\n有些行业标的物是具备结构化信息的，如视频行业，一般会有媒体资料库，库中对每个节目都会有标题、演职员、导演、标签、评分、地域等维度数据，这类数据一般存在传统数据库中。这类数据，可以将一个字段（也是一个特征）作为向量的一个纬度，这时向量化表示每个维度的值不一定是数值，但是形式还是向量化的形式，即所谓的向量空间模型（Vector Space Model，简称VSM）。这时可以通过如下的方式计算两个标的物之间的相似度。\n假设两个标的物的向量表示分别为\n$V1=(p_1, p_2, p_3, ......, p_k)$\n$V2=(q_1, q_2, q_3, ......, q_k)$\n\n这时两个标的物的相似性计算公式为 $$sim(V_1, V_2)=\\sum_{t=1}^k ksim(p_t, q_t)$$\n\n其中代表的是向量的两个分量之间的相似度。可以采用Jacard相似度等各种方法计算两个分量之间的相似度。上面公式中还可以针对不同的分量采用不同的权重策略，见下面公式，其中第t个分量（特征）的权重，具体权重的数值可以根据对业务的理解来人工设置，或者利用机器学习算法来训练学习得到。\n$$sim(V_1, V_2)=\\sum_{t=1}^k w_t*sim(p_t, q_t)$$\n\n**3.包含文本信息的标的物的特征表示**\n像头条等新闻资讯或搜索类app，标的物就是一篇篇文章（其中会包含图片或视频），文本信息是最重要的信息形式，构建标的物之间的相似性有很多种方法。下面对常用的方法做一些讲解说明。\n\na. 利用TF-IDF将文本信息转化为特征向量\nTF-IDF通过将所有文档（即标的物）粉刺，获得所有不同词的集合（假设有M个词），那么就可以为每个文档构建一个M维（每个词就是一个维度向量）的向量，而该向量中某个词所在维度的值可以通过统计每个词在文档中的重要性来衡量，这个重要性的度量就是TF-IDF。\nTF是某个词在某篇文章中出现的频次，用于衡量这个词在文档中的重要性，出现次数越多的词重要性越高，副词（的，地）和语气助词等会去掉度量，这些词对构建向量是没有任何实际价值的。TF具体计算公式如下 \n$$\nTF(t_k, d_j)=\\frac{||t_k\\in d_j||}{||d_j||}\n$$\n其中分子tk是第k个词在文档中出现的次数，分母是dj中词的总个数。\n\nIDF代表的是某个词在所有文档中的“区分度”，如果某个词只在少量几个文档中出现，那么它包含的价值就是巨大的，如果某个词在很多文档中出现，那么它就不能很好的度量这个文档。下面是IDF的计算公式，其中N是所有文档的个数，是包含次的文档个数，这个公式与前面描述一致，稀有词的区分度大。\n$$\nIDF(t_k)=\\log \\frac{N}{n_k}\n$$\n有了上面对TF和IDF的定义，实际的TF-IDF就是上面两个量的乘积：\n$$\nTF-IDF(t_k, d_j) = TF(t_k, d_j) * IDF(t_k)\n$$\n有了基于TF-IDF计算的标的物（即文档表示为TF-IDF向量）的向量表示，就很容易计算两个标的物（文档）的相似度了（cosin余弦相似度）\n\nb. 利用LDA算法构建文档（标的物）的主题\nLDA算法是一类文档主题生成模型，包含词、主题、文档三层结构，是一个三层的贝叶斯概率模型。对于语料库中的每篇文档，LDA定义了如下生成过程：\n1. 对于每篇文档，从主题分布中抽取一个主题；\n2. 从上述被抽取到的主题所对应的单词分布中抽取一个单词；\n3. 重复上述过程直至遍历文档中的每一个单词。\n\n我们通过对所有文档进行LDA训练，就可以构建每篇文档的主题分布，从而构建一个 *基于主题的向量（每个主题就是向量的一个分量，而值就是该主题的概率值）* ，这样我们就可以利用该向量来计算两篇文档的相似度了。主题模型可以理解为一个降维过程，将文档的词向量表示将维成主题的向量表示（主题的个数是远远小于词的个数的，所以是降维）。\n\nc. 利用doc2vec算法构建文本相似度\ndoc2vec或者叫做paragraph2vec, sentence embeddings，是一种非监督式算法，可以获得句子、段落、文章的稠密向量表达，它是word2vec的拓展，2014年被Google的两位大牛提出，并广泛应用于文本分类和情感分析中。通过doc2vec学习出句子、段落、文章的向量表示，可以通过计算向量之间距离来表达句子、段落、文章之间的相似性。\n\n这里我们简单描述一下doc2vec的核心思想。doc2vec受word2vec启发，由它推广而来，word2vec的设计思路是通过学习一个唯一的向量表示每个词，每个词向量作为矩阵W中的一列（W是所有词向量构成的矩阵），矩阵列可以通过词汇表为每个词做索引，排在索引第一位的放到矩阵W的第一列，如此类推。将学习问题转化为通过上下文词序列中前几个词来预测下一个词。具体的模型框架如下图：\n![word2vec算法框架](alg_word2vec.png)\n\n简单来说，给定一个待训练的词序列，词向量模型通过极大化平均对数概率\n$$\n\\frac{1}{T}\\sum_{t=k}^{T-k} \\log p(w_t|w_{t-k}, ..., w_{t+k})\n$$\n\n将预测任务通过softmax变换看成一个多分类问题\n\n$$\np(w_t|w_{t-k}, ..., w_{t+k}) = \\frac{e^{y_{w_t}}}{\\sum _ie^{y_i}}\n$$\n\n上面公式中词i的归一化对数概率，可以用下面公式计算，其中U、b是参数，h是通过词向量的拼接或者平均来构建的。\n\n$$\ny = b + Uh(w_{t-k}, ..., w_{t+k};W)\n$$\n\nword2vec算法随机初始化词向量，通过随机梯度下降法来训练神经网络模型，最终得到每个词的向量表示。\n\ndoc2vec类似，每个段落/文档表示为向量，作为矩阵D的一列，每个词也表示为一个向量，作为矩阵W的一列。将学习问题转化为通过上下文词序列中前几个词和段落/文档来预测下一个词。将段落/文档和词向量通过拼接或者平均来预测句子的下一个词（下图是通过“the”、“cat”、“sat”及段落id来预测下一个词“on“）。在训练的时候我们固定上下文的长度，用滑动窗口的方法产生训练集。段落向量/句向量在上下文中共享。\n![doc2vec模型结构](alg_doc2vec.jpeg)\n\n工程上有很多开源框架有word2vec和doc2vec的实现，比如gensim中就有很好的实现。[参考链接](https://radimrehurek.com/gensim/models/doc2vec.html)。\n\n**4.图片、音频、或者视频信息**\n如果标的物包含的是图片、音频或者视频信息，处理会更加复杂。一种方法是利用它们的文本信息（标题、评论、描述信息、利用图像技术提取的字幕文本信息、利用语音识别获取的文本信息等）采用（3）的技术方案获得向量化表示。对于图像或者视频，也可以利用opencv中的PSNR和SSIM算法来表示视频特征，也可以计算视频之间的相似度。总之，图片、图像、音频都可以转化为NLP问题或者图像处理问题，通过图像处理和NLP获得对应的特征表示，从而最终计算出相似度，如下图表示。\n![视频/图片问题转化为NLP或图像处理问题](alg_va.jpeg)\n\n\n## 为用户做个性化推荐\n有了上面用户和标的物的特征表示，剩下就是基于此为用户做个性化推荐了，总结了下面5种方法和策略。这里总结的推荐是完全个性化范式的推荐，为每个用户生成不一样的推荐结果。\n\n**1.采用跟基于物品的协同过滤类似的方式推荐**\n该方法采用基于用户行为记录的显示特征表示用户特征，通过将用户操作过的标的物最相似的标的物推荐给用户，算法原理跟基于物品的协同过滤类似，计算公式甚至是一样的，但是这里计算标的物相似度是基于标的物的自身信息来计算的，而基于物品的协同过滤是基于用户对标的物的行为矩阵来计算的。\n\n用户u对标的物s的喜好度 sim(u, s) 可以采用如下公式计算，其中U是所有用户操作过的标的物列表，是用户u对标的物的喜好度，是标的物与s的相似度。\n\n$$\nsim(u, s) = \\sum_{s_i \\in U} score(s_i) * sim(s_i, s)\n$$\n\n有了用户对每个标的物的相似度，基于相似度降序排列，就可以取topN推荐给用户了。\n除了采用上面的公式外，我们在推荐时也可以稍作变化，采用最近邻方法（K-NearestNeighbor, KNN）。对于用户操作/喜欢过的每个标的物，通过KNN找到最相似的k个标的物\n\n$$\nRec(u) = \\sum_{s_i \\in U} {s_j|s_j \\in kNN(s_i)}\n$$\n\n其中Rec(u)是给用户u的推荐，是标的物最近邻（最相似）的k个标的物。\n\n**2.采用跟基于用户协同过滤类似的方法计算推荐**\n如果我们获得了用户的人口统计学向量表示或者基于用户历史操作行为获得了用户的向量化表示，那么我们可以采用跟基于用户的协同过滤方法相似的方法来为用户提供个性化推荐，具体思路如下：\n我们可以将与该用户最相似的用户喜欢的标的物推荐给该用户，算法原理跟基于用户的协同过滤类似，计算公式甚至是一样的。但是这里计算用户相似度是基于用户的人口统计学特征向量表示来计算的（计算用户向量cosine余弦相似度）或者是基于用户历史行为嵌入获得的特征向量来计算的，而基于用户的协同过滤是基于用户对标的物的行为矩阵来计算用户之间的相似度。\n\n用户u对标的物s的喜好度 sim(u, s) 采用如下公式计算，其中U是与该用户最相似的用户集合，是用户对标的物s的喜好度，是用户与该用户u的相似度。\n\n$$\nsim(u, s) = \\sum_{u_i \\in U} sim(u, u_i) * score(u_i, s)\n$$\n\n有了用户对每个标的物的相似度，基于相似度降序排列，就可以取topN推荐给用户了。\n\n与前面一样我们也可以采用最近邻方法(K-NearesNeighbor, KNN)。通过KNN找到最相似的k个用户，将这些用户操作/喜欢过的每个标的物推荐给用户。\n\n$$\nRec(u) = \\sum_{u_i \\in KNN(u)} {s_j \\in A(u_i)}\n$$\n\n其中Rec(u)是给用户u的推荐， kNN(u)是用户相似的k个用户。是用户操作/喜欢过的标的物的集合。\n\n**3.基于标的物聚类的推荐**\n有了标的物的向量表示，我们可以用kmeans等聚类算法将标的物聚类，有了标的物的聚类，推荐就好办了。从用户历史行为中的标的物所在的类别挑选用户没有操作行为的标的物推荐给用户，这种推荐方式是非常直观的。电视猫的个性化推荐就采用了类似的思路。具体计算公式如下，其中是给用户u的推荐，H是用户的历史操作行为集合，Cluster(s)是标的物s所在的聚类。\n\n$$\nRec(u) = \\sum_{s\\in H}{t\\in Cluster(s) \\\\& t\\neq s}\n$$\n\n**4.基于向量相似的推荐**\n不管是前面提到的用户的显示兴趣特征（利用标签来衡量用户兴趣）或者是向量式的兴趣特征（将用户的兴趣投影到向量空间），我们都可以获得用户兴趣的向量表示。\n\n如果我们获得了用户的向量表示和标的物向量表示，那么我们就可以通过向量的cosine余弦相似度计算用户与标的物之间的相似度。一样的，有了用户对每个标的物的相似度，基于相似度降序排列，就可以去topN推荐给用户了。\n\n基于向量的相似的推荐，需要计算用户向量与每个标的物向量的相似性。如果标的物数量较多，整个计算过程相当耗时。同样，计算标的物最相似的K个标的物，也会涉及到与每个其他标的物计算相似度，也非常耗时。真个计算过程的时间复杂度是O(N)，其中N是标的物的总个数。\n\n上述复杂的计算过程可以利用Spark等分布式计算平台来加速。对于T+1级（每天更新一次推荐结果）的推荐服务，利用Spark提前计算好，将推荐结果存储起来供前端业务调用。\n\n另外一种可行的策略是利用高效的向量检索库，在极短时间（毫秒级）内为用户所引出topN最相似的标的物。目前facebook开源的[FAISS库](https://github.com/facebookresearch/faiss)就是一个高效的向量搜索与聚类库，可以在毫秒级响应查询及聚类需求，因此可以用于个性化的实时推荐。目前FAISS已经在推荐业务上得到广泛应用。\n\n[FAISS库](https://github.com/facebookresearch/faiss)适合稠密向量的检索和聚类，所以对于利用LDA、doc2vec算法构建向量表示的方案是实用的，因为这些方法构建的是稠密向量。而对于TF-IDF及基于标签构建的向量化，就不适用了，这两类方法构建的都是稀疏高位矩阵。\n\n**5.基于标签的反向倒排索引做推荐**\n基于标的物的标签和用户的历史兴趣，可以构建出用户基于标签兴趣的画像及推荐与标的物的倒排索引查询表。基于该反向索引表及用户的兴趣画像，我们就可以为用户做个性化推荐了。该类算法其实就是基于标签的召回算法。\n\n具体推荐过程见下图（基于倒排索引的电影推荐）：从用户画像中获取用户兴趣标签，基于用户的兴趣标签从倒排索引中获取该标签对应的标的物，这样就可以从用户关联到标的物了。其中用户的每个兴趣标签及标签关联到的标的物都是有权重的。\n\n![基于倒排索引的电影推荐](alg_antiindex.jpeg)\n\n假设用户的兴趣标签及对应的标签权重形如 $\\\\{(T_1, S_1), (T_2, S_2), (T_3, S_3), ......, (T_k, S_k)\\\\}$ ，其中T是标签， S是用户对标签的偏好权重。\n假设标签关联的标的物分别为\n\n$$\nT_1 \\longleftrightarrow \\\\{(O_{11}, W_{11}), (O_{12}, W_{12}), (O_{13}, W_{13}), ......, (O_{1p_1}, W_{1p_1})\\\\}\n$$\n\n$$\nT_2 \\longleftrightarrow \\\\{(O_{21}, W_{21}), (O_{22}, W_{22}), (O_{23}, W_{23}), ......, (O_{2p_2}, W_{2p_2})\\\\}\n$$\n\n$$\n\\cdots\n$$\n\n$$\nT_k \\longleftrightarrow \\\\{(O_{k1}, W_{k1}), (O_{k2}, W_{k2}), (O_{k3}, W_{k3}), ......, (O_{kp_k}, W_{kp_k})\\\\}\n$$ \n\n其中O、K分别是标的物及对应的权重，那么\n\n$$\nU=\\sum_{i=1}^k S_i*T_i \\\\\n$$\n\n$$\n=\\sum_{i=1}^k S_i*\\\\{(O_{i1}, W_{i1}), (O_{i2}, W_{i2}), (O_{i3}, W_{i3}), ..., (O_{ip_i}, W_{ip_i})\\\\}\n$$\n\n$$\n=\\sum_{i=1}^k\\sum_{j=1}^{p_i} S_i * W_{ij} * O_{ij}\n$$\n\n上式中U是用户对标的物的偏好集合，这里将标的物看成向量空间的基，所以有上面公式。不同的标签可以关联到相同的标的物（因为不同的标的物可以有相同的标签），上式中最后一个等号右边需要合并同类项，将相同基前面的系数相加。合并同类项后，标的物（基）前面的数值就是用户对该标的物的偏好程度了，我们对这些偏好程度降序排列，就可以为用户做topN推荐了。\n\n*以上就是基于内容的推荐算法的核心原理。*\n\n# 基于内容的推荐算法应用场景\n\n## 完全个性化推荐\n为每个用户生成不同的推荐结果。\n\n## 标的物关联标的物推荐\n即根据当前用户浏览标的物，做相关标的物列表topN推荐。\n\n## 配合其他推荐算法\n由于基于内容的推荐算法在精准度上不如协同过滤肃反啊，但是可以更好的适应冷启动，所以在实际业务中基于内容的推荐算法会配合其他算法一起服务于用户，常用方法是采用级联方式，先给用户协同过滤的推荐结果，如果该用户行为较少导致没有协同过滤推荐结果，就为该用户推荐基于内容的推荐算法产生推荐结果。\n\n## 主题推荐\n如果我们有标的物的推荐信息，并且基于推荐系统构建了一套推荐算法，那么我们就可以将用户喜欢的标签采用主题的方式推荐给用户，每个主题就是用户的一个兴趣标签。通过一系列主题罗列展示，让用户从中筛选自己感兴趣的内容。下图呈现了Netflix首页的示例。\n![Netflix首页推荐](alg_netflix.jpeg)\n\nNetflix的首页大量采用基于主题的推荐模式。主题推荐的好处是可以将用户所有的兴趣点按照兴趣偏好大小先后展示出来，可解释性强，并且让用户有更多维度的自由选择空间。\n\n在真实产品中可以采用比netflix这个示例首页更好的方式。具体来说，可以为每个标签通过人工编辑生成一句更有表达空间的话（如武侠标签，可以采用“江湖风云再起，各大门派齐聚论剑”这样更有深度的表述），具体前端展示映射到人工填充的话而不是直接展示原来的标签。\n\n## 给用户推荐标签\n另外一种可行的推荐策略是不直接给用户推荐标的物，而是给用户推荐标签，用户通过关注推荐的标签，自动获取具备该标签的标的物。除了可以通过推荐的标签关联到标的物获得直接推荐标的物类似的效果外，间接的通过用户对推荐的标签选择、关注等行为进一步获得了用户的兴趣偏好，这是一种更简简单可行的推荐产品实现方案。\n\n\n# 基于内容的推荐算法的优缺点\n## 优点\n1. 可以很好的识别用户偏好\n基于内容的推荐算法完全基于用户的历史兴趣来做推荐，推荐的标的物也跟用户的历史兴趣相似，所以推荐内容更加符合用户偏好。\n\n2. 直观易懂，解释性强\n算法基于用户的兴趣为其推荐相似标的物，原理简单、容易理解。同时，由于是基于用户历史兴趣推荐跟兴趣相似的标的物，用户也非常容易接受和认可。\n\n3. 更加容易的解决冷启动\n只要用户有一个系统操作系统，就可以基于内容为用户做推荐，随着行为加深，逐渐优化。同时对于新入库的标的物，只要它具备metadata信息等标的物相关信息，就可以利用基于内容的推荐算法将它分发出去。因此，对于强依赖于UGC内容的产品（抖音等），基于内容的推荐可以更好的对标的物提供方进行流量扶持。\n\n4. 算法实现相对简单\n基于内容的推荐可以基于标签维度做推荐，也可以将标的物嵌入向量空间中，利用相似度做推荐，不管哪种方式，算法实现简单，有现成的开源算法库，容易落地。\n\n5. 对于小众领域也能有较好的推荐效果\n对于冷门小众标的物，用户行为少，协同过滤等方法很难将这类内容分发出去，而基于内容的推荐算法受影响较小。\n\n6. 适合标的物快速增长的有时效性要求的产品\n对于标的物增长很快的产品，如今日头条等新闻类，每天都有海量标的物入库，实效性也很强。新的标的物一般用户行为少，协同过滤算法很难将这些大量实时产生的新的标的物推荐出去，这时就可以采用基于内容的推荐算法更好的分发这些内容\n\n## 缺点\n1. 推荐范围狭窄，新颖性不强\n由于该类算法只依赖于单个用户的行为为用户做推荐，推荐的结果会聚集在用户过去感兴趣的标的物类别上，如果用户不主动关注其他类型的标的物，很难为用户推荐多样性的结果，也无法挖掘用户深层次的潜在兴趣。特别对于新用户，只有少量行为，为用户推荐的标的物会比较单一。\n\n2. 需要知道相关的内容信息且处理起来较难\n内容信息主要是文本、视频、音频，处理起来费力，相对难度较大，依赖领域知识。同时这些信息大概率含有噪音，增加处理难度。另外，对内容理解的全面性、完整性及准确性会影响推荐的效果。\n\n3. 较难将长尾标的物分发出去\n基于内容的推荐需要用户对标的物有操作行为，长尾标的物一般操作行为少。由于基于内容的推荐只利用单个用户行为做推荐，所以更难将它分发给更多的用户。\n\n4. 推荐精准度不太高\n相比协同过滤算法，基于内容的推荐算法精准度要差一些。\n\n\n# 基于内容的推荐算法落地需要关注的重要问题\n基于内容的推荐算法虽然容易理解、实现相对简单，但落地过程中，总结出来如下关键问题需要提前思考。\n\n## 内容来源的获取\n\n1. 标的物“自身携带”的信息\n标的物在上架时，第三方会准备相关的内容信息，如天猫上的商品在上架时会补充很多必要的信息。对于音视频，各类metadata信息也是入库上架时需要填充的信息。我们要做的是增加对新标的物入库的监控和审核，及时发现信息不全的情况并做适当处理。\n\n2. 通过爬虫获取标的物相关信息\n通过爬虫爬取的信息可以作为标的物信息的补充，增加标的物特征完整表示能力的数据来源。\n\n3. 通过人工标注数据\n往往人工标注的数据价值密度高，通过人工精准的标注可以大大提升算法推荐的精准度。问题是成本高。\n\n4. 通过运营活动或者产品交互让用户填的内容\n通过抽奖活动让用户填写家庭组成、兴趣偏好等，在用户开始注册时让用户填写兴趣偏好特征，这些都是获取内容的手段。\n\n5. 通过收集用户行为直接获得或者预测推断出的内容\n通过请求用户GPS位置知道用户的活动轨迹，用户购买时填写收货地址，用户绑定的身份证和银行卡等，通过用户操作行为预测出用户的兴趣偏好，这些方法都可以获得部分用户数据。\n\n6. 通过与第三方合作或者产品矩阵之间补充信息\n目前中国有大数据交易市场，通过正规的数据交易或者跟其他公司合作，在不侵犯用户隐私的情况下，通过交换数据可以有效填补自己产品上缺失的数据。\n如果公司有多个产品，新产品可以借助老产品的巨大用户基数，将新产品的用户与老产品用户关联起来(id-maping或者账号打通)，这样老产品上丰富的用户行为信息可以赋能给新产品。\n\n## 利用负面反馈\n用户对标的物的操作行为不一定代表正向反馈，有可能是负向的。比如点开一个视频，看了不到几秒就退出来了，明显表明用户不喜欢。有很多产品会在用户交互中直接提供负向反馈能力，这样可以收集到更多负向反馈。下面是今日头条和百度APP推荐的文章，右下角有一个小叉叉(见下面图9中红色圈圈)，点击后展示上面的白色交互区域，读者可以勾选几类不同的负向反馈机制。\n![负面反馈形式](alg_negative.jpeg)\n\n负面反馈一般代表用户强烈的不满，因此利用好负反馈信息可以大大提升推荐系统的精准度和满意度。基于内容的推荐算法整合负反馈方式一般有以下几种：\n1. 将负向反馈整合到算法模型中\n在构建算法模型中整合负向反馈，跟正向反馈一起学习，从而更自然的整合负向反馈信息。\n\n2. 采用事后过滤方式\n先生成推荐列表，再从该列表中过滤掉负向反馈关联或者相似的标的物。\n\n## 兴趣随时间变化\n用户的兴趣不是一成不变的，算法如何整合用户的兴趣变化？可行的策略是对用户的兴趣根据时间衰减，将用户操作行为投射到时间线上，并根据时间线的先后顺序给予不同权重，同时给用户建立短期兴趣特征和长期（一般）兴趣特征，在推荐时既考虑短期有考虑长期兴趣，最终推荐列表中整合两部分结果呈现。\n\n## 数据清洗\n基于内容的推荐算法依赖于标的物相关的描述信息，这些信息更多的是以文本的形式存在，这就涉及到自然语言处理，文本中可能会存在很多歧义、符号、脏数据，我们需要实现对数据进行很好的处理，才能让后续的推荐算法产生好的效果。\n\n## 加速计算与节省资源\n在实际推荐算法落地时，我们会事先为每个标的物计算N(=50)个最相似的标的物，事先将计算好的标的物存起来，减少时间和空间成本，方便后续更好地做推荐。同时也可以利用各种分布式计算平台和快速查询平台(如Spark、FAISS库等)加速计算过程。另外，算法开发过程中尽量做到模块化，对业务做抽象封装，这可以大大提升开发效率，并且可能会节省很多资源。\n\n## 解决基于内容的推荐越推越窄的问题\n前面提到基于内容的推荐存在越推越窄的缺点，那怎么避免或者减弱这种影响呢？当然用协同过滤等其他算法是一个有效的方法。另外，我们可以给用户做兴趣探索，为用户推荐兴趣之外的特征关联的标的物，通过用户的反馈来拓展用户兴趣空间，这类方法就是强化学习中的EE方法。如果我们构造了标的物的知识图谱系统，我们就可以通过图谱拓展标的物更远的联系，通过长线的相关性来做推荐，同样可以有效解决越推越窄的问题。\n\n## 工程落地技术选型\n本篇文章主要讲的是基于内容的推荐系统的算法实现原理，具体工程实践时，需要考虑到数据处理、模型训练、分布式计算等技术，当前很多开源方案可以使用，常用的如Spark mllib，scikit-learn，Tensorflow，pytorch，gensim等，这些工具都封装了很多数据处理、特征提取、机器学习算法，我们可以基于第二节的算法思路来落地实现。\n\n## 业务的安全性\n除了技术外，在推荐产品落地中还需要考虑推荐的标的物的安全性，避免推荐反动、色情、标题党、低俗内容，这些就需要基于NLP或者CV技术对文本或者视频进行分析过滤。如果是UGC平台型的产品，还需要考虑怎么激励优质内容创作者，让好的内容得到更多的分发机会，同时对产生劣质内容的创作者采取一定的惩罚措施，比如限制发文频率、禁止一段时间的发文权限等。\n\n \n转载自 [基于内容的推荐算法](https://blog.csdn.net/qq_43045873/article/details/93816108)","source":"_posts/context-recalg.md","raw":"---\ntitle: 基于广义内容的推荐算法系统\ntop: false\ncover: false\ntoc: true\nmathjax: true\ndate: 2021-11-04 15:26:03\npassword:\nsummary:\ntags:\n- 内容推荐\n- 向量化表示\n- NLP\ncategories:\n- 算法\n---\n\n# 写在前面 - 什么是基于内容推荐算法\n广义内容，是指包括文本、图片、音频、视频等在内的多媒体信息。\n基于内容的推荐算法(Content-Based Recommendations)是基于标的物相关信息、用户相关信息及用户对标的物的操作行为来构建推荐算法模型，为用户提供推荐服务。这里的标的物相关信息可以是对标的物文字描述的metadata信息、标签、用户评论、人工标注的信息等。用户相关信息是指人口统计学信息(如年龄、性别、偏好、地域、收入等等)。用户对标的物的操作行为可以是评论、收藏、点赞、观看、浏览、点击、加购物车、购买等。基于内容的推荐算法一般只依赖于用户自身的行为为用户提供推荐，不涉及到其他用户的行为。\n\n广义的标的物相关信息不限于文本信息，图片、语音、视频等都可以作为内容推荐的信息来源，只不过这类信息处理成本较大，不光是算法难度大、处理的时间及存储成本也相对更高。\n\n基于内容的推荐算法算是最早应用于工程实践的推荐算法，有大量的应用案例，如今日头条的推荐有很大比例是基于内容的推荐算法。\n\n\n# 基于内容的推荐算法实现原理\n基于内容的推荐算法的基本原理是根据用户的历史行为，获得用户的兴趣偏好，为用户推荐跟他的兴趣偏好相似的标的物，下图展示了基于内容的推荐算法逻辑过程。\n![算法逻辑](alg_resis.jpeg)\n\n从上图也可以看出，要做基于内容的个性化推荐，一般需要三个步骤，它们分别是：基于用户信息及用户操作行为构建用户特征表示、基于标的物信息构建标的物特征表示、基于用户及标的物特征表示为用户推荐标的物。\n![核心步骤](alg_struc.jpeg)\n\n本节我们先介绍如何基于核心步骤的1和2喂用户做推荐（即达到步骤3），然后分别对这三个步骤加以说明，介绍每个步骤都有哪些方法和策略可供选择。\n\n## 基于用户和标的物特征为用户推荐的核心思想\n有了用户特征和标的物特征，推荐思路总结有三个：\n\n**1.基于用户历史行为记录了做推荐**\n我们需要事先计算标的物之间的相似性，然后将用户历史记录中的标的物的相似标的物推荐给用户。\n不管标的物包含哪类信息，一般的思路是将标的物特征转化为向量化表示，有了向量化表示，就可以通过cosin余弦计算两个标的物向量之间的相似度，余弦是相邻边比值，当比值近似1的情况，相似度最好。\n\n**2.用户和标的物特征都用显式的标签表示，利用该表示做推荐**\n标的物用标签来表示，反过来，每个标签就可以关联一组标的物，那么根据用户的标签表示，用户的兴趣标签就可以关联到一组标的物，这组通过标签关联到的标的物，就可以作为给用户推荐的候选集合。这类方法就是所谓的倒排索引，是搜索业务通用的解决方案。\n\n**3.用户和标的物嵌入到同一个向量空间，基于向量相似（即计算向量余弦值）做推荐**\n当用户和标的物嵌入到同一个向量空间后，就可以通过计算用户和标的物之间的相似度，然后按照标的物跟用户的相似度，为用户推荐相似度高的标的物。还可以基于用户向量表示计算用户相似度，将相似用户喜欢的标的物推荐给该用户，这时标的物的嵌入是不必要的。\n\n上面就是基于内容推荐的核心思想，那么如何构建用户表示特征向量和标的物表示特征向量就是推荐系统的关键。\n\n## 构建用户特征向量\n\n用户的特征总结来讲有如下方法构建\n+ 基于用户对标的物的操作行为，如点击/购买/收藏/播放/评论等构建用户对标的物的偏好画像；\n+ 基于用户自身的人口统计学特征表示。\n\n具体来说：\n**1.用户行为记录作为显示特征**\n比如用户浏览过A、B、C三个视频，同时根据每个视频用户观看时长占分别视频总时长的比例给用户行为打分，这是用户的兴趣偏好就可以记录为{$(A, S1), (B, S2), (C, S3)$}，其中S1, S2, S3分别是用户对视频A、B、C的评分。\n\n该方案直接将用户历史操作过的标的物作为用户特征表示，在推荐时可以将与用户操作过的标的物相似的标的物推荐给用高糊。\n\n**2.显示的标签特征**\n如果标的物是有标签来描述，那么这些标签可以用来表征标的物。用户的兴趣画像也可以基于用户对标的物的行为来打上对应的标签。拿视频推荐来举例，如果用户过去看了科幻和恐怖类电影，那么恐怖和科幻就是用户的偏好标签了。\n每个标的物的标签可以是包含权重的，而用户对标的物的操作行为也是有权重的，而用户对标的物的操作行为也是有权重的，从而用户的兴趣标签是有权重的。\n在具体推荐时，可以将用户的兴趣标签关联到的标的物(具备该标签的标的物)推荐给用户。\n\n**3.向量方法的兴趣特征**\n可以基于标的物的信息将标的物嵌入到向量空间中，利用向量来表示标的物，稍后讲解嵌入的算法实现方案。有了标的物的向量化表示，用户的兴趣向量就可以用他操作过的标的物的向量的平均向量来表示了。\n这里表示用户兴趣向量有多种策略，可以基于用户对操作过的标的物的评分以及时间加权来获取用户的加权偏好向量，而不是直接取平均。另外，我们也可以根据用户操作过的标的物之间的相似度，喂用户构建多个兴趣向量（比如对标的物聚类，用户在某一类上操作过的标的物的向量均值作为用户在这个类别上的兴趣向量），从而更好的表达用户多方位的兴趣偏好。\n有了用户的兴趣向量及标的物的兴趣向量，可以基于向量相似性计算用户对标的物的偏好度，再基于偏好度大小来为用户推荐标的物。\n\n**4.通过交互方式获取用户兴趣标签**\n在用户首次注册让用户选择自己的兴趣偏好标签，一旦用户勾选了自己的兴趣标签，那么这些兴趣标签就是系统为用户推荐标的物的逻辑基础，具体推荐策略逻辑就可以按照上述方法进行。\n\n**5.用户的人口统计学特征**\n用户在登陆、注册时提供的关于自身相关的信息、通过运营活动用户填写的信息、通过用户行为利用算法逻辑得出的结论，如年龄、性别、地域、收入、爱好、居住地、工作地点等是非常主要的信息。基于这些关于用户维度的信息，我们可以将用户特征用向量化表示出来，向量的维度就是可获取的用户特征数。\n有了用户特征向量就可以计算用户相似度，将相思用户喜欢的标的物推荐给用户。\n\n## 构建标的物特征表示\n标的物的特征，一般可以利用显示的标签来表示，也可以利用隐式的向量（当然one-hot编码也是向量表示，但是不是隐式的）来刻画，向量的每个维度就是一个隐式的特征项。前面提到某些推荐算法需要计算标的物之间的相似度，下面我们在讲标的物的各种特征表示时，也简单介绍一下标的物之间的相似度计算方法。顺便说一下，标的物关联标的物的推荐方式也需要知道标的物之间的相似度。下面从四个方面来详细讲解怎么构建标的物的特征表示。\n\n**1.标的物包含标签信息**\n最简单的方式是将标签按照某种顺序排列，每个标签看成一个纬度，那么每个标的物就可以表示成一个N维向量，如 {item， [tag1, tag2, tag3, ..., tagN]}，如果标的物包含某个标签，向量在相应标签上的分量值为1，否则为0，即所谓的one-hot编码。通常N可能非常大，比如视频领域，N可能是几万或者几十万上百万，这时向量是稀疏矩阵，因为一般标的物只有几个或者几十个标签，采用稀疏向量的表示来优化向量存储和计算，提升效率。有个标的物基于标签的向量化表示，很容易基于cosin余弦计算相似度了。\n\n实际上标签不是这么简单的，有很多业务标签是分级的，比如电商（像淘宝），有多级标签，标签的层级关系形成一颗树状结构，这时向量化有个简单的表示方案，即只考虑最低层级标签（叶节点），基于叶节点标签构建向量表示。更复杂的方法，可以基于层级结构构建标签表示及计算标的物相似度。\n![标签树](tag_tree.png)\n\n标签是可以通过算法获取的，比如通过NLP从文本信息中提取关键词作为标签。对于图片/视频，通过他们的描述信息提取标签，另外可以通过目标检测的方法从图片/视频中提取相关对象构建标签。\n\n标签可以是用户打的，很多产品在用户与标的物交互时互相可以为标的物打标签，这些标签就是标的物的一种刻画。标签也可以是人工标注，Netflix在做推荐时，就请了上万专家对视频从上千个纬度来打标签，质量很高。很多行业的标的物来源于第三方供应商，他们在入驻平台时会被要求按照某些规范填写相关标签信息。\n\n**2.标的物具备结构化的信息**\n有些行业标的物是具备结构化信息的，如视频行业，一般会有媒体资料库，库中对每个节目都会有标题、演职员、导演、标签、评分、地域等维度数据，这类数据一般存在传统数据库中。这类数据，可以将一个字段（也是一个特征）作为向量的一个纬度，这时向量化表示每个维度的值不一定是数值，但是形式还是向量化的形式，即所谓的向量空间模型（Vector Space Model，简称VSM）。这时可以通过如下的方式计算两个标的物之间的相似度。\n假设两个标的物的向量表示分别为\n$V1=(p_1, p_2, p_3, ......, p_k)$\n$V2=(q_1, q_2, q_3, ......, q_k)$\n\n这时两个标的物的相似性计算公式为 $$sim(V_1, V_2)=\\sum_{t=1}^k ksim(p_t, q_t)$$\n\n其中代表的是向量的两个分量之间的相似度。可以采用Jacard相似度等各种方法计算两个分量之间的相似度。上面公式中还可以针对不同的分量采用不同的权重策略，见下面公式，其中第t个分量（特征）的权重，具体权重的数值可以根据对业务的理解来人工设置，或者利用机器学习算法来训练学习得到。\n$$sim(V_1, V_2)=\\sum_{t=1}^k w_t*sim(p_t, q_t)$$\n\n**3.包含文本信息的标的物的特征表示**\n像头条等新闻资讯或搜索类app，标的物就是一篇篇文章（其中会包含图片或视频），文本信息是最重要的信息形式，构建标的物之间的相似性有很多种方法。下面对常用的方法做一些讲解说明。\n\na. 利用TF-IDF将文本信息转化为特征向量\nTF-IDF通过将所有文档（即标的物）粉刺，获得所有不同词的集合（假设有M个词），那么就可以为每个文档构建一个M维（每个词就是一个维度向量）的向量，而该向量中某个词所在维度的值可以通过统计每个词在文档中的重要性来衡量，这个重要性的度量就是TF-IDF。\nTF是某个词在某篇文章中出现的频次，用于衡量这个词在文档中的重要性，出现次数越多的词重要性越高，副词（的，地）和语气助词等会去掉度量，这些词对构建向量是没有任何实际价值的。TF具体计算公式如下 \n$$\nTF(t_k, d_j)=\\frac{||t_k\\in d_j||}{||d_j||}\n$$\n其中分子tk是第k个词在文档中出现的次数，分母是dj中词的总个数。\n\nIDF代表的是某个词在所有文档中的“区分度”，如果某个词只在少量几个文档中出现，那么它包含的价值就是巨大的，如果某个词在很多文档中出现，那么它就不能很好的度量这个文档。下面是IDF的计算公式，其中N是所有文档的个数，是包含次的文档个数，这个公式与前面描述一致，稀有词的区分度大。\n$$\nIDF(t_k)=\\log \\frac{N}{n_k}\n$$\n有了上面对TF和IDF的定义，实际的TF-IDF就是上面两个量的乘积：\n$$\nTF-IDF(t_k, d_j) = TF(t_k, d_j) * IDF(t_k)\n$$\n有了基于TF-IDF计算的标的物（即文档表示为TF-IDF向量）的向量表示，就很容易计算两个标的物（文档）的相似度了（cosin余弦相似度）\n\nb. 利用LDA算法构建文档（标的物）的主题\nLDA算法是一类文档主题生成模型，包含词、主题、文档三层结构，是一个三层的贝叶斯概率模型。对于语料库中的每篇文档，LDA定义了如下生成过程：\n1. 对于每篇文档，从主题分布中抽取一个主题；\n2. 从上述被抽取到的主题所对应的单词分布中抽取一个单词；\n3. 重复上述过程直至遍历文档中的每一个单词。\n\n我们通过对所有文档进行LDA训练，就可以构建每篇文档的主题分布，从而构建一个 *基于主题的向量（每个主题就是向量的一个分量，而值就是该主题的概率值）* ，这样我们就可以利用该向量来计算两篇文档的相似度了。主题模型可以理解为一个降维过程，将文档的词向量表示将维成主题的向量表示（主题的个数是远远小于词的个数的，所以是降维）。\n\nc. 利用doc2vec算法构建文本相似度\ndoc2vec或者叫做paragraph2vec, sentence embeddings，是一种非监督式算法，可以获得句子、段落、文章的稠密向量表达，它是word2vec的拓展，2014年被Google的两位大牛提出，并广泛应用于文本分类和情感分析中。通过doc2vec学习出句子、段落、文章的向量表示，可以通过计算向量之间距离来表达句子、段落、文章之间的相似性。\n\n这里我们简单描述一下doc2vec的核心思想。doc2vec受word2vec启发，由它推广而来，word2vec的设计思路是通过学习一个唯一的向量表示每个词，每个词向量作为矩阵W中的一列（W是所有词向量构成的矩阵），矩阵列可以通过词汇表为每个词做索引，排在索引第一位的放到矩阵W的第一列，如此类推。将学习问题转化为通过上下文词序列中前几个词来预测下一个词。具体的模型框架如下图：\n![word2vec算法框架](alg_word2vec.png)\n\n简单来说，给定一个待训练的词序列，词向量模型通过极大化平均对数概率\n$$\n\\frac{1}{T}\\sum_{t=k}^{T-k} \\log p(w_t|w_{t-k}, ..., w_{t+k})\n$$\n\n将预测任务通过softmax变换看成一个多分类问题\n\n$$\np(w_t|w_{t-k}, ..., w_{t+k}) = \\frac{e^{y_{w_t}}}{\\sum _ie^{y_i}}\n$$\n\n上面公式中词i的归一化对数概率，可以用下面公式计算，其中U、b是参数，h是通过词向量的拼接或者平均来构建的。\n\n$$\ny = b + Uh(w_{t-k}, ..., w_{t+k};W)\n$$\n\nword2vec算法随机初始化词向量，通过随机梯度下降法来训练神经网络模型，最终得到每个词的向量表示。\n\ndoc2vec类似，每个段落/文档表示为向量，作为矩阵D的一列，每个词也表示为一个向量，作为矩阵W的一列。将学习问题转化为通过上下文词序列中前几个词和段落/文档来预测下一个词。将段落/文档和词向量通过拼接或者平均来预测句子的下一个词（下图是通过“the”、“cat”、“sat”及段落id来预测下一个词“on“）。在训练的时候我们固定上下文的长度，用滑动窗口的方法产生训练集。段落向量/句向量在上下文中共享。\n![doc2vec模型结构](alg_doc2vec.jpeg)\n\n工程上有很多开源框架有word2vec和doc2vec的实现，比如gensim中就有很好的实现。[参考链接](https://radimrehurek.com/gensim/models/doc2vec.html)。\n\n**4.图片、音频、或者视频信息**\n如果标的物包含的是图片、音频或者视频信息，处理会更加复杂。一种方法是利用它们的文本信息（标题、评论、描述信息、利用图像技术提取的字幕文本信息、利用语音识别获取的文本信息等）采用（3）的技术方案获得向量化表示。对于图像或者视频，也可以利用opencv中的PSNR和SSIM算法来表示视频特征，也可以计算视频之间的相似度。总之，图片、图像、音频都可以转化为NLP问题或者图像处理问题，通过图像处理和NLP获得对应的特征表示，从而最终计算出相似度，如下图表示。\n![视频/图片问题转化为NLP或图像处理问题](alg_va.jpeg)\n\n\n## 为用户做个性化推荐\n有了上面用户和标的物的特征表示，剩下就是基于此为用户做个性化推荐了，总结了下面5种方法和策略。这里总结的推荐是完全个性化范式的推荐，为每个用户生成不一样的推荐结果。\n\n**1.采用跟基于物品的协同过滤类似的方式推荐**\n该方法采用基于用户行为记录的显示特征表示用户特征，通过将用户操作过的标的物最相似的标的物推荐给用户，算法原理跟基于物品的协同过滤类似，计算公式甚至是一样的，但是这里计算标的物相似度是基于标的物的自身信息来计算的，而基于物品的协同过滤是基于用户对标的物的行为矩阵来计算的。\n\n用户u对标的物s的喜好度 sim(u, s) 可以采用如下公式计算，其中U是所有用户操作过的标的物列表，是用户u对标的物的喜好度，是标的物与s的相似度。\n\n$$\nsim(u, s) = \\sum_{s_i \\in U} score(s_i) * sim(s_i, s)\n$$\n\n有了用户对每个标的物的相似度，基于相似度降序排列，就可以取topN推荐给用户了。\n除了采用上面的公式外，我们在推荐时也可以稍作变化，采用最近邻方法（K-NearestNeighbor, KNN）。对于用户操作/喜欢过的每个标的物，通过KNN找到最相似的k个标的物\n\n$$\nRec(u) = \\sum_{s_i \\in U} {s_j|s_j \\in kNN(s_i)}\n$$\n\n其中Rec(u)是给用户u的推荐，是标的物最近邻（最相似）的k个标的物。\n\n**2.采用跟基于用户协同过滤类似的方法计算推荐**\n如果我们获得了用户的人口统计学向量表示或者基于用户历史操作行为获得了用户的向量化表示，那么我们可以采用跟基于用户的协同过滤方法相似的方法来为用户提供个性化推荐，具体思路如下：\n我们可以将与该用户最相似的用户喜欢的标的物推荐给该用户，算法原理跟基于用户的协同过滤类似，计算公式甚至是一样的。但是这里计算用户相似度是基于用户的人口统计学特征向量表示来计算的（计算用户向量cosine余弦相似度）或者是基于用户历史行为嵌入获得的特征向量来计算的，而基于用户的协同过滤是基于用户对标的物的行为矩阵来计算用户之间的相似度。\n\n用户u对标的物s的喜好度 sim(u, s) 采用如下公式计算，其中U是与该用户最相似的用户集合，是用户对标的物s的喜好度，是用户与该用户u的相似度。\n\n$$\nsim(u, s) = \\sum_{u_i \\in U} sim(u, u_i) * score(u_i, s)\n$$\n\n有了用户对每个标的物的相似度，基于相似度降序排列，就可以取topN推荐给用户了。\n\n与前面一样我们也可以采用最近邻方法(K-NearesNeighbor, KNN)。通过KNN找到最相似的k个用户，将这些用户操作/喜欢过的每个标的物推荐给用户。\n\n$$\nRec(u) = \\sum_{u_i \\in KNN(u)} {s_j \\in A(u_i)}\n$$\n\n其中Rec(u)是给用户u的推荐， kNN(u)是用户相似的k个用户。是用户操作/喜欢过的标的物的集合。\n\n**3.基于标的物聚类的推荐**\n有了标的物的向量表示，我们可以用kmeans等聚类算法将标的物聚类，有了标的物的聚类，推荐就好办了。从用户历史行为中的标的物所在的类别挑选用户没有操作行为的标的物推荐给用户，这种推荐方式是非常直观的。电视猫的个性化推荐就采用了类似的思路。具体计算公式如下，其中是给用户u的推荐，H是用户的历史操作行为集合，Cluster(s)是标的物s所在的聚类。\n\n$$\nRec(u) = \\sum_{s\\in H}{t\\in Cluster(s) \\\\& t\\neq s}\n$$\n\n**4.基于向量相似的推荐**\n不管是前面提到的用户的显示兴趣特征（利用标签来衡量用户兴趣）或者是向量式的兴趣特征（将用户的兴趣投影到向量空间），我们都可以获得用户兴趣的向量表示。\n\n如果我们获得了用户的向量表示和标的物向量表示，那么我们就可以通过向量的cosine余弦相似度计算用户与标的物之间的相似度。一样的，有了用户对每个标的物的相似度，基于相似度降序排列，就可以去topN推荐给用户了。\n\n基于向量的相似的推荐，需要计算用户向量与每个标的物向量的相似性。如果标的物数量较多，整个计算过程相当耗时。同样，计算标的物最相似的K个标的物，也会涉及到与每个其他标的物计算相似度，也非常耗时。真个计算过程的时间复杂度是O(N)，其中N是标的物的总个数。\n\n上述复杂的计算过程可以利用Spark等分布式计算平台来加速。对于T+1级（每天更新一次推荐结果）的推荐服务，利用Spark提前计算好，将推荐结果存储起来供前端业务调用。\n\n另外一种可行的策略是利用高效的向量检索库，在极短时间（毫秒级）内为用户所引出topN最相似的标的物。目前facebook开源的[FAISS库](https://github.com/facebookresearch/faiss)就是一个高效的向量搜索与聚类库，可以在毫秒级响应查询及聚类需求，因此可以用于个性化的实时推荐。目前FAISS已经在推荐业务上得到广泛应用。\n\n[FAISS库](https://github.com/facebookresearch/faiss)适合稠密向量的检索和聚类，所以对于利用LDA、doc2vec算法构建向量表示的方案是实用的，因为这些方法构建的是稠密向量。而对于TF-IDF及基于标签构建的向量化，就不适用了，这两类方法构建的都是稀疏高位矩阵。\n\n**5.基于标签的反向倒排索引做推荐**\n基于标的物的标签和用户的历史兴趣，可以构建出用户基于标签兴趣的画像及推荐与标的物的倒排索引查询表。基于该反向索引表及用户的兴趣画像，我们就可以为用户做个性化推荐了。该类算法其实就是基于标签的召回算法。\n\n具体推荐过程见下图（基于倒排索引的电影推荐）：从用户画像中获取用户兴趣标签，基于用户的兴趣标签从倒排索引中获取该标签对应的标的物，这样就可以从用户关联到标的物了。其中用户的每个兴趣标签及标签关联到的标的物都是有权重的。\n\n![基于倒排索引的电影推荐](alg_antiindex.jpeg)\n\n假设用户的兴趣标签及对应的标签权重形如 $\\\\{(T_1, S_1), (T_2, S_2), (T_3, S_3), ......, (T_k, S_k)\\\\}$ ，其中T是标签， S是用户对标签的偏好权重。\n假设标签关联的标的物分别为\n\n$$\nT_1 \\longleftrightarrow \\\\{(O_{11}, W_{11}), (O_{12}, W_{12}), (O_{13}, W_{13}), ......, (O_{1p_1}, W_{1p_1})\\\\}\n$$\n\n$$\nT_2 \\longleftrightarrow \\\\{(O_{21}, W_{21}), (O_{22}, W_{22}), (O_{23}, W_{23}), ......, (O_{2p_2}, W_{2p_2})\\\\}\n$$\n\n$$\n\\cdots\n$$\n\n$$\nT_k \\longleftrightarrow \\\\{(O_{k1}, W_{k1}), (O_{k2}, W_{k2}), (O_{k3}, W_{k3}), ......, (O_{kp_k}, W_{kp_k})\\\\}\n$$ \n\n其中O、K分别是标的物及对应的权重，那么\n\n$$\nU=\\sum_{i=1}^k S_i*T_i \\\\\n$$\n\n$$\n=\\sum_{i=1}^k S_i*\\\\{(O_{i1}, W_{i1}), (O_{i2}, W_{i2}), (O_{i3}, W_{i3}), ..., (O_{ip_i}, W_{ip_i})\\\\}\n$$\n\n$$\n=\\sum_{i=1}^k\\sum_{j=1}^{p_i} S_i * W_{ij} * O_{ij}\n$$\n\n上式中U是用户对标的物的偏好集合，这里将标的物看成向量空间的基，所以有上面公式。不同的标签可以关联到相同的标的物（因为不同的标的物可以有相同的标签），上式中最后一个等号右边需要合并同类项，将相同基前面的系数相加。合并同类项后，标的物（基）前面的数值就是用户对该标的物的偏好程度了，我们对这些偏好程度降序排列，就可以为用户做topN推荐了。\n\n*以上就是基于内容的推荐算法的核心原理。*\n\n# 基于内容的推荐算法应用场景\n\n## 完全个性化推荐\n为每个用户生成不同的推荐结果。\n\n## 标的物关联标的物推荐\n即根据当前用户浏览标的物，做相关标的物列表topN推荐。\n\n## 配合其他推荐算法\n由于基于内容的推荐算法在精准度上不如协同过滤肃反啊，但是可以更好的适应冷启动，所以在实际业务中基于内容的推荐算法会配合其他算法一起服务于用户，常用方法是采用级联方式，先给用户协同过滤的推荐结果，如果该用户行为较少导致没有协同过滤推荐结果，就为该用户推荐基于内容的推荐算法产生推荐结果。\n\n## 主题推荐\n如果我们有标的物的推荐信息，并且基于推荐系统构建了一套推荐算法，那么我们就可以将用户喜欢的标签采用主题的方式推荐给用户，每个主题就是用户的一个兴趣标签。通过一系列主题罗列展示，让用户从中筛选自己感兴趣的内容。下图呈现了Netflix首页的示例。\n![Netflix首页推荐](alg_netflix.jpeg)\n\nNetflix的首页大量采用基于主题的推荐模式。主题推荐的好处是可以将用户所有的兴趣点按照兴趣偏好大小先后展示出来，可解释性强，并且让用户有更多维度的自由选择空间。\n\n在真实产品中可以采用比netflix这个示例首页更好的方式。具体来说，可以为每个标签通过人工编辑生成一句更有表达空间的话（如武侠标签，可以采用“江湖风云再起，各大门派齐聚论剑”这样更有深度的表述），具体前端展示映射到人工填充的话而不是直接展示原来的标签。\n\n## 给用户推荐标签\n另外一种可行的推荐策略是不直接给用户推荐标的物，而是给用户推荐标签，用户通过关注推荐的标签，自动获取具备该标签的标的物。除了可以通过推荐的标签关联到标的物获得直接推荐标的物类似的效果外，间接的通过用户对推荐的标签选择、关注等行为进一步获得了用户的兴趣偏好，这是一种更简简单可行的推荐产品实现方案。\n\n\n# 基于内容的推荐算法的优缺点\n## 优点\n1. 可以很好的识别用户偏好\n基于内容的推荐算法完全基于用户的历史兴趣来做推荐，推荐的标的物也跟用户的历史兴趣相似，所以推荐内容更加符合用户偏好。\n\n2. 直观易懂，解释性强\n算法基于用户的兴趣为其推荐相似标的物，原理简单、容易理解。同时，由于是基于用户历史兴趣推荐跟兴趣相似的标的物，用户也非常容易接受和认可。\n\n3. 更加容易的解决冷启动\n只要用户有一个系统操作系统，就可以基于内容为用户做推荐，随着行为加深，逐渐优化。同时对于新入库的标的物，只要它具备metadata信息等标的物相关信息，就可以利用基于内容的推荐算法将它分发出去。因此，对于强依赖于UGC内容的产品（抖音等），基于内容的推荐可以更好的对标的物提供方进行流量扶持。\n\n4. 算法实现相对简单\n基于内容的推荐可以基于标签维度做推荐，也可以将标的物嵌入向量空间中，利用相似度做推荐，不管哪种方式，算法实现简单，有现成的开源算法库，容易落地。\n\n5. 对于小众领域也能有较好的推荐效果\n对于冷门小众标的物，用户行为少，协同过滤等方法很难将这类内容分发出去，而基于内容的推荐算法受影响较小。\n\n6. 适合标的物快速增长的有时效性要求的产品\n对于标的物增长很快的产品，如今日头条等新闻类，每天都有海量标的物入库，实效性也很强。新的标的物一般用户行为少，协同过滤算法很难将这些大量实时产生的新的标的物推荐出去，这时就可以采用基于内容的推荐算法更好的分发这些内容\n\n## 缺点\n1. 推荐范围狭窄，新颖性不强\n由于该类算法只依赖于单个用户的行为为用户做推荐，推荐的结果会聚集在用户过去感兴趣的标的物类别上，如果用户不主动关注其他类型的标的物，很难为用户推荐多样性的结果，也无法挖掘用户深层次的潜在兴趣。特别对于新用户，只有少量行为，为用户推荐的标的物会比较单一。\n\n2. 需要知道相关的内容信息且处理起来较难\n内容信息主要是文本、视频、音频，处理起来费力，相对难度较大，依赖领域知识。同时这些信息大概率含有噪音，增加处理难度。另外，对内容理解的全面性、完整性及准确性会影响推荐的效果。\n\n3. 较难将长尾标的物分发出去\n基于内容的推荐需要用户对标的物有操作行为，长尾标的物一般操作行为少。由于基于内容的推荐只利用单个用户行为做推荐，所以更难将它分发给更多的用户。\n\n4. 推荐精准度不太高\n相比协同过滤算法，基于内容的推荐算法精准度要差一些。\n\n\n# 基于内容的推荐算法落地需要关注的重要问题\n基于内容的推荐算法虽然容易理解、实现相对简单，但落地过程中，总结出来如下关键问题需要提前思考。\n\n## 内容来源的获取\n\n1. 标的物“自身携带”的信息\n标的物在上架时，第三方会准备相关的内容信息，如天猫上的商品在上架时会补充很多必要的信息。对于音视频，各类metadata信息也是入库上架时需要填充的信息。我们要做的是增加对新标的物入库的监控和审核，及时发现信息不全的情况并做适当处理。\n\n2. 通过爬虫获取标的物相关信息\n通过爬虫爬取的信息可以作为标的物信息的补充，增加标的物特征完整表示能力的数据来源。\n\n3. 通过人工标注数据\n往往人工标注的数据价值密度高，通过人工精准的标注可以大大提升算法推荐的精准度。问题是成本高。\n\n4. 通过运营活动或者产品交互让用户填的内容\n通过抽奖活动让用户填写家庭组成、兴趣偏好等，在用户开始注册时让用户填写兴趣偏好特征，这些都是获取内容的手段。\n\n5. 通过收集用户行为直接获得或者预测推断出的内容\n通过请求用户GPS位置知道用户的活动轨迹，用户购买时填写收货地址，用户绑定的身份证和银行卡等，通过用户操作行为预测出用户的兴趣偏好，这些方法都可以获得部分用户数据。\n\n6. 通过与第三方合作或者产品矩阵之间补充信息\n目前中国有大数据交易市场，通过正规的数据交易或者跟其他公司合作，在不侵犯用户隐私的情况下，通过交换数据可以有效填补自己产品上缺失的数据。\n如果公司有多个产品，新产品可以借助老产品的巨大用户基数，将新产品的用户与老产品用户关联起来(id-maping或者账号打通)，这样老产品上丰富的用户行为信息可以赋能给新产品。\n\n## 利用负面反馈\n用户对标的物的操作行为不一定代表正向反馈，有可能是负向的。比如点开一个视频，看了不到几秒就退出来了，明显表明用户不喜欢。有很多产品会在用户交互中直接提供负向反馈能力，这样可以收集到更多负向反馈。下面是今日头条和百度APP推荐的文章，右下角有一个小叉叉(见下面图9中红色圈圈)，点击后展示上面的白色交互区域，读者可以勾选几类不同的负向反馈机制。\n![负面反馈形式](alg_negative.jpeg)\n\n负面反馈一般代表用户强烈的不满，因此利用好负反馈信息可以大大提升推荐系统的精准度和满意度。基于内容的推荐算法整合负反馈方式一般有以下几种：\n1. 将负向反馈整合到算法模型中\n在构建算法模型中整合负向反馈，跟正向反馈一起学习，从而更自然的整合负向反馈信息。\n\n2. 采用事后过滤方式\n先生成推荐列表，再从该列表中过滤掉负向反馈关联或者相似的标的物。\n\n## 兴趣随时间变化\n用户的兴趣不是一成不变的，算法如何整合用户的兴趣变化？可行的策略是对用户的兴趣根据时间衰减，将用户操作行为投射到时间线上，并根据时间线的先后顺序给予不同权重，同时给用户建立短期兴趣特征和长期（一般）兴趣特征，在推荐时既考虑短期有考虑长期兴趣，最终推荐列表中整合两部分结果呈现。\n\n## 数据清洗\n基于内容的推荐算法依赖于标的物相关的描述信息，这些信息更多的是以文本的形式存在，这就涉及到自然语言处理，文本中可能会存在很多歧义、符号、脏数据，我们需要实现对数据进行很好的处理，才能让后续的推荐算法产生好的效果。\n\n## 加速计算与节省资源\n在实际推荐算法落地时，我们会事先为每个标的物计算N(=50)个最相似的标的物，事先将计算好的标的物存起来，减少时间和空间成本，方便后续更好地做推荐。同时也可以利用各种分布式计算平台和快速查询平台(如Spark、FAISS库等)加速计算过程。另外，算法开发过程中尽量做到模块化，对业务做抽象封装，这可以大大提升开发效率，并且可能会节省很多资源。\n\n## 解决基于内容的推荐越推越窄的问题\n前面提到基于内容的推荐存在越推越窄的缺点，那怎么避免或者减弱这种影响呢？当然用协同过滤等其他算法是一个有效的方法。另外，我们可以给用户做兴趣探索，为用户推荐兴趣之外的特征关联的标的物，通过用户的反馈来拓展用户兴趣空间，这类方法就是强化学习中的EE方法。如果我们构造了标的物的知识图谱系统，我们就可以通过图谱拓展标的物更远的联系，通过长线的相关性来做推荐，同样可以有效解决越推越窄的问题。\n\n## 工程落地技术选型\n本篇文章主要讲的是基于内容的推荐系统的算法实现原理，具体工程实践时，需要考虑到数据处理、模型训练、分布式计算等技术，当前很多开源方案可以使用，常用的如Spark mllib，scikit-learn，Tensorflow，pytorch，gensim等，这些工具都封装了很多数据处理、特征提取、机器学习算法，我们可以基于第二节的算法思路来落地实现。\n\n## 业务的安全性\n除了技术外，在推荐产品落地中还需要考虑推荐的标的物的安全性，避免推荐反动、色情、标题党、低俗内容，这些就需要基于NLP或者CV技术对文本或者视频进行分析过滤。如果是UGC平台型的产品，还需要考虑怎么激励优质内容创作者，让好的内容得到更多的分发机会，同时对产生劣质内容的创作者采取一定的惩罚措施，比如限制发文频率、禁止一段时间的发文权限等。\n\n \n转载自 [基于内容的推荐算法](https://blog.csdn.net/qq_43045873/article/details/93816108)","slug":"context-recalg","published":1,"updated":"2021-11-11T07:12:23.707Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl10m9kgg0002duwg0vrbpkep","content":"<h1 id=\"写在前面-什么是基于内容推荐算法\"><a href=\"#写在前面-什么是基于内容推荐算法\" class=\"headerlink\" title=\"写在前面 - 什么是基于内容推荐算法\"></a>写在前面 - 什么是基于内容推荐算法</h1><p>广义内容，是指包括文本、图片、音频、视频等在内的多媒体信息。<br>基于内容的推荐算法(Content-Based Recommendations)是基于标的物相关信息、用户相关信息及用户对标的物的操作行为来构建推荐算法模型，为用户提供推荐服务。这里的标的物相关信息可以是对标的物文字描述的metadata信息、标签、用户评论、人工标注的信息等。用户相关信息是指人口统计学信息(如年龄、性别、偏好、地域、收入等等)。用户对标的物的操作行为可以是评论、收藏、点赞、观看、浏览、点击、加购物车、购买等。基于内容的推荐算法一般只依赖于用户自身的行为为用户提供推荐，不涉及到其他用户的行为。</p>\n<p>广义的标的物相关信息不限于文本信息，图片、语音、视频等都可以作为内容推荐的信息来源，只不过这类信息处理成本较大，不光是算法难度大、处理的时间及存储成本也相对更高。</p>\n<p>基于内容的推荐算法算是最早应用于工程实践的推荐算法，有大量的应用案例，如今日头条的推荐有很大比例是基于内容的推荐算法。</p>\n<h1 id=\"基于内容的推荐算法实现原理\"><a href=\"#基于内容的推荐算法实现原理\" class=\"headerlink\" title=\"基于内容的推荐算法实现原理\"></a>基于内容的推荐算法实现原理</h1><p>基于内容的推荐算法的基本原理是根据用户的历史行为，获得用户的兴趣偏好，为用户推荐跟他的兴趣偏好相似的标的物，下图展示了基于内容的推荐算法逻辑过程。<br><img src=\"alg_resis.jpeg\" alt=\"算法逻辑\"></p>\n<p>从上图也可以看出，要做基于内容的个性化推荐，一般需要三个步骤，它们分别是：基于用户信息及用户操作行为构建用户特征表示、基于标的物信息构建标的物特征表示、基于用户及标的物特征表示为用户推荐标的物。<br><img src=\"alg_struc.jpeg\" alt=\"核心步骤\"></p>\n<p>本节我们先介绍如何基于核心步骤的1和2喂用户做推荐（即达到步骤3），然后分别对这三个步骤加以说明，介绍每个步骤都有哪些方法和策略可供选择。</p>\n<h2 id=\"基于用户和标的物特征为用户推荐的核心思想\"><a href=\"#基于用户和标的物特征为用户推荐的核心思想\" class=\"headerlink\" title=\"基于用户和标的物特征为用户推荐的核心思想\"></a>基于用户和标的物特征为用户推荐的核心思想</h2><p>有了用户特征和标的物特征，推荐思路总结有三个：</p>\n<p><strong>1.基于用户历史行为记录了做推荐</strong><br>我们需要事先计算标的物之间的相似性，然后将用户历史记录中的标的物的相似标的物推荐给用户。<br>不管标的物包含哪类信息，一般的思路是将标的物特征转化为向量化表示，有了向量化表示，就可以通过cosin余弦计算两个标的物向量之间的相似度，余弦是相邻边比值，当比值近似1的情况，相似度最好。</p>\n<p><strong>2.用户和标的物特征都用显式的标签表示，利用该表示做推荐</strong><br>标的物用标签来表示，反过来，每个标签就可以关联一组标的物，那么根据用户的标签表示，用户的兴趣标签就可以关联到一组标的物，这组通过标签关联到的标的物，就可以作为给用户推荐的候选集合。这类方法就是所谓的倒排索引，是搜索业务通用的解决方案。</p>\n<p><strong>3.用户和标的物嵌入到同一个向量空间，基于向量相似（即计算向量余弦值）做推荐</strong><br>当用户和标的物嵌入到同一个向量空间后，就可以通过计算用户和标的物之间的相似度，然后按照标的物跟用户的相似度，为用户推荐相似度高的标的物。还可以基于用户向量表示计算用户相似度，将相似用户喜欢的标的物推荐给该用户，这时标的物的嵌入是不必要的。</p>\n<p>上面就是基于内容推荐的核心思想，那么如何构建用户表示特征向量和标的物表示特征向量就是推荐系统的关键。</p>\n<h2 id=\"构建用户特征向量\"><a href=\"#构建用户特征向量\" class=\"headerlink\" title=\"构建用户特征向量\"></a>构建用户特征向量</h2><p>用户的特征总结来讲有如下方法构建</p>\n<ul>\n<li>基于用户对标的物的操作行为，如点击/购买/收藏/播放/评论等构建用户对标的物的偏好画像；</li>\n<li>基于用户自身的人口统计学特征表示。</li>\n</ul>\n<p>具体来说：<br><strong>1.用户行为记录作为显示特征</strong><br>比如用户浏览过A、B、C三个视频，同时根据每个视频用户观看时长占分别视频总时长的比例给用户行为打分，这是用户的兴趣偏好就可以记录为{$(A, S1), (B, S2), (C, S3)$}，其中S1, S2, S3分别是用户对视频A、B、C的评分。</p>\n<p>该方案直接将用户历史操作过的标的物作为用户特征表示，在推荐时可以将与用户操作过的标的物相似的标的物推荐给用高糊。</p>\n<p><strong>2.显示的标签特征</strong><br>如果标的物是有标签来描述，那么这些标签可以用来表征标的物。用户的兴趣画像也可以基于用户对标的物的行为来打上对应的标签。拿视频推荐来举例，如果用户过去看了科幻和恐怖类电影，那么恐怖和科幻就是用户的偏好标签了。<br>每个标的物的标签可以是包含权重的，而用户对标的物的操作行为也是有权重的，而用户对标的物的操作行为也是有权重的，从而用户的兴趣标签是有权重的。<br>在具体推荐时，可以将用户的兴趣标签关联到的标的物(具备该标签的标的物)推荐给用户。</p>\n<p><strong>3.向量方法的兴趣特征</strong><br>可以基于标的物的信息将标的物嵌入到向量空间中，利用向量来表示标的物，稍后讲解嵌入的算法实现方案。有了标的物的向量化表示，用户的兴趣向量就可以用他操作过的标的物的向量的平均向量来表示了。<br>这里表示用户兴趣向量有多种策略，可以基于用户对操作过的标的物的评分以及时间加权来获取用户的加权偏好向量，而不是直接取平均。另外，我们也可以根据用户操作过的标的物之间的相似度，喂用户构建多个兴趣向量（比如对标的物聚类，用户在某一类上操作过的标的物的向量均值作为用户在这个类别上的兴趣向量），从而更好的表达用户多方位的兴趣偏好。<br>有了用户的兴趣向量及标的物的兴趣向量，可以基于向量相似性计算用户对标的物的偏好度，再基于偏好度大小来为用户推荐标的物。</p>\n<p><strong>4.通过交互方式获取用户兴趣标签</strong><br>在用户首次注册让用户选择自己的兴趣偏好标签，一旦用户勾选了自己的兴趣标签，那么这些兴趣标签就是系统为用户推荐标的物的逻辑基础，具体推荐策略逻辑就可以按照上述方法进行。</p>\n<p><strong>5.用户的人口统计学特征</strong><br>用户在登陆、注册时提供的关于自身相关的信息、通过运营活动用户填写的信息、通过用户行为利用算法逻辑得出的结论，如年龄、性别、地域、收入、爱好、居住地、工作地点等是非常主要的信息。基于这些关于用户维度的信息，我们可以将用户特征用向量化表示出来，向量的维度就是可获取的用户特征数。<br>有了用户特征向量就可以计算用户相似度，将相思用户喜欢的标的物推荐给用户。</p>\n<h2 id=\"构建标的物特征表示\"><a href=\"#构建标的物特征表示\" class=\"headerlink\" title=\"构建标的物特征表示\"></a>构建标的物特征表示</h2><p>标的物的特征，一般可以利用显示的标签来表示，也可以利用隐式的向量（当然one-hot编码也是向量表示，但是不是隐式的）来刻画，向量的每个维度就是一个隐式的特征项。前面提到某些推荐算法需要计算标的物之间的相似度，下面我们在讲标的物的各种特征表示时，也简单介绍一下标的物之间的相似度计算方法。顺便说一下，标的物关联标的物的推荐方式也需要知道标的物之间的相似度。下面从四个方面来详细讲解怎么构建标的物的特征表示。</p>\n<p><strong>1.标的物包含标签信息</strong><br>最简单的方式是将标签按照某种顺序排列，每个标签看成一个纬度，那么每个标的物就可以表示成一个N维向量，如 {item， [tag1, tag2, tag3, …, tagN]}，如果标的物包含某个标签，向量在相应标签上的分量值为1，否则为0，即所谓的one-hot编码。通常N可能非常大，比如视频领域，N可能是几万或者几十万上百万，这时向量是稀疏矩阵，因为一般标的物只有几个或者几十个标签，采用稀疏向量的表示来优化向量存储和计算，提升效率。有个标的物基于标签的向量化表示，很容易基于cosin余弦计算相似度了。</p>\n<p>实际上标签不是这么简单的，有很多业务标签是分级的，比如电商（像淘宝），有多级标签，标签的层级关系形成一颗树状结构，这时向量化有个简单的表示方案，即只考虑最低层级标签（叶节点），基于叶节点标签构建向量表示。更复杂的方法，可以基于层级结构构建标签表示及计算标的物相似度。<br><img src=\"tag_tree.png\" alt=\"标签树\"></p>\n<p>标签是可以通过算法获取的，比如通过NLP从文本信息中提取关键词作为标签。对于图片/视频，通过他们的描述信息提取标签，另外可以通过目标检测的方法从图片/视频中提取相关对象构建标签。</p>\n<p>标签可以是用户打的，很多产品在用户与标的物交互时互相可以为标的物打标签，这些标签就是标的物的一种刻画。标签也可以是人工标注，Netflix在做推荐时，就请了上万专家对视频从上千个纬度来打标签，质量很高。很多行业的标的物来源于第三方供应商，他们在入驻平台时会被要求按照某些规范填写相关标签信息。</p>\n<p><strong>2.标的物具备结构化的信息</strong><br>有些行业标的物是具备结构化信息的，如视频行业，一般会有媒体资料库，库中对每个节目都会有标题、演职员、导演、标签、评分、地域等维度数据，这类数据一般存在传统数据库中。这类数据，可以将一个字段（也是一个特征）作为向量的一个纬度，这时向量化表示每个维度的值不一定是数值，但是形式还是向量化的形式，即所谓的向量空间模型（Vector Space Model，简称VSM）。这时可以通过如下的方式计算两个标的物之间的相似度。<br>假设两个标的物的向量表示分别为<br>$V1=(p_1, p_2, p_3, ……, p_k)$<br>$V2=(q_1, q_2, q_3, ……, q_k)$</p>\n<p>这时两个标的物的相似性计算公式为 $$sim(V_1, V_2)=\\sum_{t=1}^k ksim(p_t, q_t)$$</p>\n<p>其中代表的是向量的两个分量之间的相似度。可以采用Jacard相似度等各种方法计算两个分量之间的相似度。上面公式中还可以针对不同的分量采用不同的权重策略，见下面公式，其中第t个分量（特征）的权重，具体权重的数值可以根据对业务的理解来人工设置，或者利用机器学习算法来训练学习得到。<br>$$sim(V_1, V_2)=\\sum_{t=1}^k w_t*sim(p_t, q_t)$$</p>\n<p><strong>3.包含文本信息的标的物的特征表示</strong><br>像头条等新闻资讯或搜索类app，标的物就是一篇篇文章（其中会包含图片或视频），文本信息是最重要的信息形式，构建标的物之间的相似性有很多种方法。下面对常用的方法做一些讲解说明。</p>\n<p>a. 利用TF-IDF将文本信息转化为特征向量<br>TF-IDF通过将所有文档（即标的物）粉刺，获得所有不同词的集合（假设有M个词），那么就可以为每个文档构建一个M维（每个词就是一个维度向量）的向量，而该向量中某个词所在维度的值可以通过统计每个词在文档中的重要性来衡量，这个重要性的度量就是TF-IDF。<br>TF是某个词在某篇文章中出现的频次，用于衡量这个词在文档中的重要性，出现次数越多的词重要性越高，副词（的，地）和语气助词等会去掉度量，这些词对构建向量是没有任何实际价值的。TF具体计算公式如下<br>$$<br>TF(t_k, d_j)=\\frac{||t_k\\in d_j||}{||d_j||}<br>$$<br>其中分子tk是第k个词在文档中出现的次数，分母是dj中词的总个数。</p>\n<p>IDF代表的是某个词在所有文档中的“区分度”，如果某个词只在少量几个文档中出现，那么它包含的价值就是巨大的，如果某个词在很多文档中出现，那么它就不能很好的度量这个文档。下面是IDF的计算公式，其中N是所有文档的个数，是包含次的文档个数，这个公式与前面描述一致，稀有词的区分度大。<br>$$<br>IDF(t_k)=\\log \\frac{N}{n_k}<br>$$<br>有了上面对TF和IDF的定义，实际的TF-IDF就是上面两个量的乘积：<br>$$<br>TF-IDF(t_k, d_j) = TF(t_k, d_j) * IDF(t_k)<br>$$<br>有了基于TF-IDF计算的标的物（即文档表示为TF-IDF向量）的向量表示，就很容易计算两个标的物（文档）的相似度了（cosin余弦相似度）</p>\n<p>b. 利用LDA算法构建文档（标的物）的主题<br>LDA算法是一类文档主题生成模型，包含词、主题、文档三层结构，是一个三层的贝叶斯概率模型。对于语料库中的每篇文档，LDA定义了如下生成过程：</p>\n<ol>\n<li>对于每篇文档，从主题分布中抽取一个主题；</li>\n<li>从上述被抽取到的主题所对应的单词分布中抽取一个单词；</li>\n<li>重复上述过程直至遍历文档中的每一个单词。</li>\n</ol>\n<p>我们通过对所有文档进行LDA训练，就可以构建每篇文档的主题分布，从而构建一个 <em>基于主题的向量（每个主题就是向量的一个分量，而值就是该主题的概率值）</em> ，这样我们就可以利用该向量来计算两篇文档的相似度了。主题模型可以理解为一个降维过程，将文档的词向量表示将维成主题的向量表示（主题的个数是远远小于词的个数的，所以是降维）。</p>\n<p>c. 利用doc2vec算法构建文本相似度<br>doc2vec或者叫做paragraph2vec, sentence embeddings，是一种非监督式算法，可以获得句子、段落、文章的稠密向量表达，它是word2vec的拓展，2014年被Google的两位大牛提出，并广泛应用于文本分类和情感分析中。通过doc2vec学习出句子、段落、文章的向量表示，可以通过计算向量之间距离来表达句子、段落、文章之间的相似性。</p>\n<p>这里我们简单描述一下doc2vec的核心思想。doc2vec受word2vec启发，由它推广而来，word2vec的设计思路是通过学习一个唯一的向量表示每个词，每个词向量作为矩阵W中的一列（W是所有词向量构成的矩阵），矩阵列可以通过词汇表为每个词做索引，排在索引第一位的放到矩阵W的第一列，如此类推。将学习问题转化为通过上下文词序列中前几个词来预测下一个词。具体的模型框架如下图：<br><img src=\"alg_word2vec.png\" alt=\"word2vec算法框架\"></p>\n<p>简单来说，给定一个待训练的词序列，词向量模型通过极大化平均对数概率<br>$$<br>\\frac{1}{T}\\sum_{t=k}^{T-k} \\log p(w_t|w_{t-k}, …, w_{t+k})<br>$$</p>\n<p>将预测任务通过softmax变换看成一个多分类问题</p>\n<p>$$<br>p(w_t|w_{t-k}, …, w_{t+k}) = \\frac{e^{y_{w_t}}}{\\sum _ie^{y_i}}<br>$$</p>\n<p>上面公式中词i的归一化对数概率，可以用下面公式计算，其中U、b是参数，h是通过词向量的拼接或者平均来构建的。</p>\n<p>$$<br>y = b + Uh(w_{t-k}, …, w_{t+k};W)<br>$$</p>\n<p>word2vec算法随机初始化词向量，通过随机梯度下降法来训练神经网络模型，最终得到每个词的向量表示。</p>\n<p>doc2vec类似，每个段落/文档表示为向量，作为矩阵D的一列，每个词也表示为一个向量，作为矩阵W的一列。将学习问题转化为通过上下文词序列中前几个词和段落/文档来预测下一个词。将段落/文档和词向量通过拼接或者平均来预测句子的下一个词（下图是通过“the”、“cat”、“sat”及段落id来预测下一个词“on“）。在训练的时候我们固定上下文的长度，用滑动窗口的方法产生训练集。段落向量/句向量在上下文中共享。<br><img src=\"alg_doc2vec.jpeg\" alt=\"doc2vec模型结构\"></p>\n<p>工程上有很多开源框架有word2vec和doc2vec的实现，比如gensim中就有很好的实现。<a href=\"https://radimrehurek.com/gensim/models/doc2vec.html\" target=\"_blank\" rel=\"noopener\">参考链接</a>。</p>\n<p><strong>4.图片、音频、或者视频信息</strong><br>如果标的物包含的是图片、音频或者视频信息，处理会更加复杂。一种方法是利用它们的文本信息（标题、评论、描述信息、利用图像技术提取的字幕文本信息、利用语音识别获取的文本信息等）采用（3）的技术方案获得向量化表示。对于图像或者视频，也可以利用opencv中的PSNR和SSIM算法来表示视频特征，也可以计算视频之间的相似度。总之，图片、图像、音频都可以转化为NLP问题或者图像处理问题，通过图像处理和NLP获得对应的特征表示，从而最终计算出相似度，如下图表示。<br><img src=\"alg_va.jpeg\" alt=\"视频/图片问题转化为NLP或图像处理问题\"></p>\n<h2 id=\"为用户做个性化推荐\"><a href=\"#为用户做个性化推荐\" class=\"headerlink\" title=\"为用户做个性化推荐\"></a>为用户做个性化推荐</h2><p>有了上面用户和标的物的特征表示，剩下就是基于此为用户做个性化推荐了，总结了下面5种方法和策略。这里总结的推荐是完全个性化范式的推荐，为每个用户生成不一样的推荐结果。</p>\n<p><strong>1.采用跟基于物品的协同过滤类似的方式推荐</strong><br>该方法采用基于用户行为记录的显示特征表示用户特征，通过将用户操作过的标的物最相似的标的物推荐给用户，算法原理跟基于物品的协同过滤类似，计算公式甚至是一样的，但是这里计算标的物相似度是基于标的物的自身信息来计算的，而基于物品的协同过滤是基于用户对标的物的行为矩阵来计算的。</p>\n<p>用户u对标的物s的喜好度 sim(u, s) 可以采用如下公式计算，其中U是所有用户操作过的标的物列表，是用户u对标的物的喜好度，是标的物与s的相似度。</p>\n<p>$$<br>sim(u, s) = \\sum_{s_i \\in U} score(s_i) * sim(s_i, s)<br>$$</p>\n<p>有了用户对每个标的物的相似度，基于相似度降序排列，就可以取topN推荐给用户了。<br>除了采用上面的公式外，我们在推荐时也可以稍作变化，采用最近邻方法（K-NearestNeighbor, KNN）。对于用户操作/喜欢过的每个标的物，通过KNN找到最相似的k个标的物</p>\n<p>$$<br>Rec(u) = \\sum_{s_i \\in U} {s_j|s_j \\in kNN(s_i)}<br>$$</p>\n<p>其中Rec(u)是给用户u的推荐，是标的物最近邻（最相似）的k个标的物。</p>\n<p><strong>2.采用跟基于用户协同过滤类似的方法计算推荐</strong><br>如果我们获得了用户的人口统计学向量表示或者基于用户历史操作行为获得了用户的向量化表示，那么我们可以采用跟基于用户的协同过滤方法相似的方法来为用户提供个性化推荐，具体思路如下：<br>我们可以将与该用户最相似的用户喜欢的标的物推荐给该用户，算法原理跟基于用户的协同过滤类似，计算公式甚至是一样的。但是这里计算用户相似度是基于用户的人口统计学特征向量表示来计算的（计算用户向量cosine余弦相似度）或者是基于用户历史行为嵌入获得的特征向量来计算的，而基于用户的协同过滤是基于用户对标的物的行为矩阵来计算用户之间的相似度。</p>\n<p>用户u对标的物s的喜好度 sim(u, s) 采用如下公式计算，其中U是与该用户最相似的用户集合，是用户对标的物s的喜好度，是用户与该用户u的相似度。</p>\n<p>$$<br>sim(u, s) = \\sum_{u_i \\in U} sim(u, u_i) * score(u_i, s)<br>$$</p>\n<p>有了用户对每个标的物的相似度，基于相似度降序排列，就可以取topN推荐给用户了。</p>\n<p>与前面一样我们也可以采用最近邻方法(K-NearesNeighbor, KNN)。通过KNN找到最相似的k个用户，将这些用户操作/喜欢过的每个标的物推荐给用户。</p>\n<p>$$<br>Rec(u) = \\sum_{u_i \\in KNN(u)} {s_j \\in A(u_i)}<br>$$</p>\n<p>其中Rec(u)是给用户u的推荐， kNN(u)是用户相似的k个用户。是用户操作/喜欢过的标的物的集合。</p>\n<p><strong>3.基于标的物聚类的推荐</strong><br>有了标的物的向量表示，我们可以用kmeans等聚类算法将标的物聚类，有了标的物的聚类，推荐就好办了。从用户历史行为中的标的物所在的类别挑选用户没有操作行为的标的物推荐给用户，这种推荐方式是非常直观的。电视猫的个性化推荐就采用了类似的思路。具体计算公式如下，其中是给用户u的推荐，H是用户的历史操作行为集合，Cluster(s)是标的物s所在的聚类。</p>\n<p>$$<br>Rec(u) = \\sum_{s\\in H}{t\\in Cluster(s) \\&amp; t\\neq s}<br>$$</p>\n<p><strong>4.基于向量相似的推荐</strong><br>不管是前面提到的用户的显示兴趣特征（利用标签来衡量用户兴趣）或者是向量式的兴趣特征（将用户的兴趣投影到向量空间），我们都可以获得用户兴趣的向量表示。</p>\n<p>如果我们获得了用户的向量表示和标的物向量表示，那么我们就可以通过向量的cosine余弦相似度计算用户与标的物之间的相似度。一样的，有了用户对每个标的物的相似度，基于相似度降序排列，就可以去topN推荐给用户了。</p>\n<p>基于向量的相似的推荐，需要计算用户向量与每个标的物向量的相似性。如果标的物数量较多，整个计算过程相当耗时。同样，计算标的物最相似的K个标的物，也会涉及到与每个其他标的物计算相似度，也非常耗时。真个计算过程的时间复杂度是O(N)，其中N是标的物的总个数。</p>\n<p>上述复杂的计算过程可以利用Spark等分布式计算平台来加速。对于T+1级（每天更新一次推荐结果）的推荐服务，利用Spark提前计算好，将推荐结果存储起来供前端业务调用。</p>\n<p>另外一种可行的策略是利用高效的向量检索库，在极短时间（毫秒级）内为用户所引出topN最相似的标的物。目前facebook开源的<a href=\"https://github.com/facebookresearch/faiss\" target=\"_blank\" rel=\"noopener\">FAISS库</a>就是一个高效的向量搜索与聚类库，可以在毫秒级响应查询及聚类需求，因此可以用于个性化的实时推荐。目前FAISS已经在推荐业务上得到广泛应用。</p>\n<p><a href=\"https://github.com/facebookresearch/faiss\" target=\"_blank\" rel=\"noopener\">FAISS库</a>适合稠密向量的检索和聚类，所以对于利用LDA、doc2vec算法构建向量表示的方案是实用的，因为这些方法构建的是稠密向量。而对于TF-IDF及基于标签构建的向量化，就不适用了，这两类方法构建的都是稀疏高位矩阵。</p>\n<p><strong>5.基于标签的反向倒排索引做推荐</strong><br>基于标的物的标签和用户的历史兴趣，可以构建出用户基于标签兴趣的画像及推荐与标的物的倒排索引查询表。基于该反向索引表及用户的兴趣画像，我们就可以为用户做个性化推荐了。该类算法其实就是基于标签的召回算法。</p>\n<p>具体推荐过程见下图（基于倒排索引的电影推荐）：从用户画像中获取用户兴趣标签，基于用户的兴趣标签从倒排索引中获取该标签对应的标的物，这样就可以从用户关联到标的物了。其中用户的每个兴趣标签及标签关联到的标的物都是有权重的。</p>\n<p><img src=\"alg_antiindex.jpeg\" alt=\"基于倒排索引的电影推荐\"></p>\n<p>假设用户的兴趣标签及对应的标签权重形如 $\\{(T_1, S_1), (T_2, S_2), (T_3, S_3), ……, (T_k, S_k)\\}$ ，其中T是标签， S是用户对标签的偏好权重。<br>假设标签关联的标的物分别为</p>\n<p>$$<br>T_1 \\longleftrightarrow \\{(O_{11}, W_{11}), (O_{12}, W_{12}), (O_{13}, W_{13}), ……, (O_{1p_1}, W_{1p_1})\\}<br>$$</p>\n<p>$$<br>T_2 \\longleftrightarrow \\{(O_{21}, W_{21}), (O_{22}, W_{22}), (O_{23}, W_{23}), ……, (O_{2p_2}, W_{2p_2})\\}<br>$$</p>\n<p>$$<br>\\cdots<br>$$</p>\n<p>$$<br>T_k \\longleftrightarrow \\{(O_{k1}, W_{k1}), (O_{k2}, W_{k2}), (O_{k3}, W_{k3}), ……, (O_{kp_k}, W_{kp_k})\\}<br>$$ </p>\n<p>其中O、K分别是标的物及对应的权重，那么</p>\n<p>$$<br>U=\\sum_{i=1}^k S_i*T_i \\<br>$$</p>\n<p>$$<br>=\\sum_{i=1}^k S_i*\\{(O_{i1}, W_{i1}), (O_{i2}, W_{i2}), (O_{i3}, W_{i3}), …, (O_{ip_i}, W_{ip_i})\\}<br>$$</p>\n<p>$$<br>=\\sum_{i=1}^k\\sum_{j=1}^{p_i} S_i * W_{ij} * O_{ij}<br>$$</p>\n<p>上式中U是用户对标的物的偏好集合，这里将标的物看成向量空间的基，所以有上面公式。不同的标签可以关联到相同的标的物（因为不同的标的物可以有相同的标签），上式中最后一个等号右边需要合并同类项，将相同基前面的系数相加。合并同类项后，标的物（基）前面的数值就是用户对该标的物的偏好程度了，我们对这些偏好程度降序排列，就可以为用户做topN推荐了。</p>\n<p><em>以上就是基于内容的推荐算法的核心原理。</em></p>\n<h1 id=\"基于内容的推荐算法应用场景\"><a href=\"#基于内容的推荐算法应用场景\" class=\"headerlink\" title=\"基于内容的推荐算法应用场景\"></a>基于内容的推荐算法应用场景</h1><h2 id=\"完全个性化推荐\"><a href=\"#完全个性化推荐\" class=\"headerlink\" title=\"完全个性化推荐\"></a>完全个性化推荐</h2><p>为每个用户生成不同的推荐结果。</p>\n<h2 id=\"标的物关联标的物推荐\"><a href=\"#标的物关联标的物推荐\" class=\"headerlink\" title=\"标的物关联标的物推荐\"></a>标的物关联标的物推荐</h2><p>即根据当前用户浏览标的物，做相关标的物列表topN推荐。</p>\n<h2 id=\"配合其他推荐算法\"><a href=\"#配合其他推荐算法\" class=\"headerlink\" title=\"配合其他推荐算法\"></a>配合其他推荐算法</h2><p>由于基于内容的推荐算法在精准度上不如协同过滤肃反啊，但是可以更好的适应冷启动，所以在实际业务中基于内容的推荐算法会配合其他算法一起服务于用户，常用方法是采用级联方式，先给用户协同过滤的推荐结果，如果该用户行为较少导致没有协同过滤推荐结果，就为该用户推荐基于内容的推荐算法产生推荐结果。</p>\n<h2 id=\"主题推荐\"><a href=\"#主题推荐\" class=\"headerlink\" title=\"主题推荐\"></a>主题推荐</h2><p>如果我们有标的物的推荐信息，并且基于推荐系统构建了一套推荐算法，那么我们就可以将用户喜欢的标签采用主题的方式推荐给用户，每个主题就是用户的一个兴趣标签。通过一系列主题罗列展示，让用户从中筛选自己感兴趣的内容。下图呈现了Netflix首页的示例。<br><img src=\"alg_netflix.jpeg\" alt=\"Netflix首页推荐\"></p>\n<p>Netflix的首页大量采用基于主题的推荐模式。主题推荐的好处是可以将用户所有的兴趣点按照兴趣偏好大小先后展示出来，可解释性强，并且让用户有更多维度的自由选择空间。</p>\n<p>在真实产品中可以采用比netflix这个示例首页更好的方式。具体来说，可以为每个标签通过人工编辑生成一句更有表达空间的话（如武侠标签，可以采用“江湖风云再起，各大门派齐聚论剑”这样更有深度的表述），具体前端展示映射到人工填充的话而不是直接展示原来的标签。</p>\n<h2 id=\"给用户推荐标签\"><a href=\"#给用户推荐标签\" class=\"headerlink\" title=\"给用户推荐标签\"></a>给用户推荐标签</h2><p>另外一种可行的推荐策略是不直接给用户推荐标的物，而是给用户推荐标签，用户通过关注推荐的标签，自动获取具备该标签的标的物。除了可以通过推荐的标签关联到标的物获得直接推荐标的物类似的效果外，间接的通过用户对推荐的标签选择、关注等行为进一步获得了用户的兴趣偏好，这是一种更简简单可行的推荐产品实现方案。</p>\n<h1 id=\"基于内容的推荐算法的优缺点\"><a href=\"#基于内容的推荐算法的优缺点\" class=\"headerlink\" title=\"基于内容的推荐算法的优缺点\"></a>基于内容的推荐算法的优缺点</h1><h2 id=\"优点\"><a href=\"#优点\" class=\"headerlink\" title=\"优点\"></a>优点</h2><ol>\n<li><p>可以很好的识别用户偏好<br>基于内容的推荐算法完全基于用户的历史兴趣来做推荐，推荐的标的物也跟用户的历史兴趣相似，所以推荐内容更加符合用户偏好。</p>\n</li>\n<li><p>直观易懂，解释性强<br>算法基于用户的兴趣为其推荐相似标的物，原理简单、容易理解。同时，由于是基于用户历史兴趣推荐跟兴趣相似的标的物，用户也非常容易接受和认可。</p>\n</li>\n<li><p>更加容易的解决冷启动<br>只要用户有一个系统操作系统，就可以基于内容为用户做推荐，随着行为加深，逐渐优化。同时对于新入库的标的物，只要它具备metadata信息等标的物相关信息，就可以利用基于内容的推荐算法将它分发出去。因此，对于强依赖于UGC内容的产品（抖音等），基于内容的推荐可以更好的对标的物提供方进行流量扶持。</p>\n</li>\n<li><p>算法实现相对简单<br>基于内容的推荐可以基于标签维度做推荐，也可以将标的物嵌入向量空间中，利用相似度做推荐，不管哪种方式，算法实现简单，有现成的开源算法库，容易落地。</p>\n</li>\n<li><p>对于小众领域也能有较好的推荐效果<br>对于冷门小众标的物，用户行为少，协同过滤等方法很难将这类内容分发出去，而基于内容的推荐算法受影响较小。</p>\n</li>\n<li><p>适合标的物快速增长的有时效性要求的产品<br>对于标的物增长很快的产品，如今日头条等新闻类，每天都有海量标的物入库，实效性也很强。新的标的物一般用户行为少，协同过滤算法很难将这些大量实时产生的新的标的物推荐出去，这时就可以采用基于内容的推荐算法更好的分发这些内容</p>\n</li>\n</ol>\n<h2 id=\"缺点\"><a href=\"#缺点\" class=\"headerlink\" title=\"缺点\"></a>缺点</h2><ol>\n<li><p>推荐范围狭窄，新颖性不强<br>由于该类算法只依赖于单个用户的行为为用户做推荐，推荐的结果会聚集在用户过去感兴趣的标的物类别上，如果用户不主动关注其他类型的标的物，很难为用户推荐多样性的结果，也无法挖掘用户深层次的潜在兴趣。特别对于新用户，只有少量行为，为用户推荐的标的物会比较单一。</p>\n</li>\n<li><p>需要知道相关的内容信息且处理起来较难<br>内容信息主要是文本、视频、音频，处理起来费力，相对难度较大，依赖领域知识。同时这些信息大概率含有噪音，增加处理难度。另外，对内容理解的全面性、完整性及准确性会影响推荐的效果。</p>\n</li>\n<li><p>较难将长尾标的物分发出去<br>基于内容的推荐需要用户对标的物有操作行为，长尾标的物一般操作行为少。由于基于内容的推荐只利用单个用户行为做推荐，所以更难将它分发给更多的用户。</p>\n</li>\n<li><p>推荐精准度不太高<br>相比协同过滤算法，基于内容的推荐算法精准度要差一些。</p>\n</li>\n</ol>\n<h1 id=\"基于内容的推荐算法落地需要关注的重要问题\"><a href=\"#基于内容的推荐算法落地需要关注的重要问题\" class=\"headerlink\" title=\"基于内容的推荐算法落地需要关注的重要问题\"></a>基于内容的推荐算法落地需要关注的重要问题</h1><p>基于内容的推荐算法虽然容易理解、实现相对简单，但落地过程中，总结出来如下关键问题需要提前思考。</p>\n<h2 id=\"内容来源的获取\"><a href=\"#内容来源的获取\" class=\"headerlink\" title=\"内容来源的获取\"></a>内容来源的获取</h2><ol>\n<li><p>标的物“自身携带”的信息<br>标的物在上架时，第三方会准备相关的内容信息，如天猫上的商品在上架时会补充很多必要的信息。对于音视频，各类metadata信息也是入库上架时需要填充的信息。我们要做的是增加对新标的物入库的监控和审核，及时发现信息不全的情况并做适当处理。</p>\n</li>\n<li><p>通过爬虫获取标的物相关信息<br>通过爬虫爬取的信息可以作为标的物信息的补充，增加标的物特征完整表示能力的数据来源。</p>\n</li>\n<li><p>通过人工标注数据<br>往往人工标注的数据价值密度高，通过人工精准的标注可以大大提升算法推荐的精准度。问题是成本高。</p>\n</li>\n<li><p>通过运营活动或者产品交互让用户填的内容<br>通过抽奖活动让用户填写家庭组成、兴趣偏好等，在用户开始注册时让用户填写兴趣偏好特征，这些都是获取内容的手段。</p>\n</li>\n<li><p>通过收集用户行为直接获得或者预测推断出的内容<br>通过请求用户GPS位置知道用户的活动轨迹，用户购买时填写收货地址，用户绑定的身份证和银行卡等，通过用户操作行为预测出用户的兴趣偏好，这些方法都可以获得部分用户数据。</p>\n</li>\n<li><p>通过与第三方合作或者产品矩阵之间补充信息<br>目前中国有大数据交易市场，通过正规的数据交易或者跟其他公司合作，在不侵犯用户隐私的情况下，通过交换数据可以有效填补自己产品上缺失的数据。<br>如果公司有多个产品，新产品可以借助老产品的巨大用户基数，将新产品的用户与老产品用户关联起来(id-maping或者账号打通)，这样老产品上丰富的用户行为信息可以赋能给新产品。</p>\n</li>\n</ol>\n<h2 id=\"利用负面反馈\"><a href=\"#利用负面反馈\" class=\"headerlink\" title=\"利用负面反馈\"></a>利用负面反馈</h2><p>用户对标的物的操作行为不一定代表正向反馈，有可能是负向的。比如点开一个视频，看了不到几秒就退出来了，明显表明用户不喜欢。有很多产品会在用户交互中直接提供负向反馈能力，这样可以收集到更多负向反馈。下面是今日头条和百度APP推荐的文章，右下角有一个小叉叉(见下面图9中红色圈圈)，点击后展示上面的白色交互区域，读者可以勾选几类不同的负向反馈机制。<br><img src=\"alg_negative.jpeg\" alt=\"负面反馈形式\"></p>\n<p>负面反馈一般代表用户强烈的不满，因此利用好负反馈信息可以大大提升推荐系统的精准度和满意度。基于内容的推荐算法整合负反馈方式一般有以下几种：</p>\n<ol>\n<li><p>将负向反馈整合到算法模型中<br>在构建算法模型中整合负向反馈，跟正向反馈一起学习，从而更自然的整合负向反馈信息。</p>\n</li>\n<li><p>采用事后过滤方式<br>先生成推荐列表，再从该列表中过滤掉负向反馈关联或者相似的标的物。</p>\n</li>\n</ol>\n<h2 id=\"兴趣随时间变化\"><a href=\"#兴趣随时间变化\" class=\"headerlink\" title=\"兴趣随时间变化\"></a>兴趣随时间变化</h2><p>用户的兴趣不是一成不变的，算法如何整合用户的兴趣变化？可行的策略是对用户的兴趣根据时间衰减，将用户操作行为投射到时间线上，并根据时间线的先后顺序给予不同权重，同时给用户建立短期兴趣特征和长期（一般）兴趣特征，在推荐时既考虑短期有考虑长期兴趣，最终推荐列表中整合两部分结果呈现。</p>\n<h2 id=\"数据清洗\"><a href=\"#数据清洗\" class=\"headerlink\" title=\"数据清洗\"></a>数据清洗</h2><p>基于内容的推荐算法依赖于标的物相关的描述信息，这些信息更多的是以文本的形式存在，这就涉及到自然语言处理，文本中可能会存在很多歧义、符号、脏数据，我们需要实现对数据进行很好的处理，才能让后续的推荐算法产生好的效果。</p>\n<h2 id=\"加速计算与节省资源\"><a href=\"#加速计算与节省资源\" class=\"headerlink\" title=\"加速计算与节省资源\"></a>加速计算与节省资源</h2><p>在实际推荐算法落地时，我们会事先为每个标的物计算N(=50)个最相似的标的物，事先将计算好的标的物存起来，减少时间和空间成本，方便后续更好地做推荐。同时也可以利用各种分布式计算平台和快速查询平台(如Spark、FAISS库等)加速计算过程。另外，算法开发过程中尽量做到模块化，对业务做抽象封装，这可以大大提升开发效率，并且可能会节省很多资源。</p>\n<h2 id=\"解决基于内容的推荐越推越窄的问题\"><a href=\"#解决基于内容的推荐越推越窄的问题\" class=\"headerlink\" title=\"解决基于内容的推荐越推越窄的问题\"></a>解决基于内容的推荐越推越窄的问题</h2><p>前面提到基于内容的推荐存在越推越窄的缺点，那怎么避免或者减弱这种影响呢？当然用协同过滤等其他算法是一个有效的方法。另外，我们可以给用户做兴趣探索，为用户推荐兴趣之外的特征关联的标的物，通过用户的反馈来拓展用户兴趣空间，这类方法就是强化学习中的EE方法。如果我们构造了标的物的知识图谱系统，我们就可以通过图谱拓展标的物更远的联系，通过长线的相关性来做推荐，同样可以有效解决越推越窄的问题。</p>\n<h2 id=\"工程落地技术选型\"><a href=\"#工程落地技术选型\" class=\"headerlink\" title=\"工程落地技术选型\"></a>工程落地技术选型</h2><p>本篇文章主要讲的是基于内容的推荐系统的算法实现原理，具体工程实践时，需要考虑到数据处理、模型训练、分布式计算等技术，当前很多开源方案可以使用，常用的如Spark mllib，scikit-learn，Tensorflow，pytorch，gensim等，这些工具都封装了很多数据处理、特征提取、机器学习算法，我们可以基于第二节的算法思路来落地实现。</p>\n<h2 id=\"业务的安全性\"><a href=\"#业务的安全性\" class=\"headerlink\" title=\"业务的安全性\"></a>业务的安全性</h2><p>除了技术外，在推荐产品落地中还需要考虑推荐的标的物的安全性，避免推荐反动、色情、标题党、低俗内容，这些就需要基于NLP或者CV技术对文本或者视频进行分析过滤。如果是UGC平台型的产品，还需要考虑怎么激励优质内容创作者，让好的内容得到更多的分发机会，同时对产生劣质内容的创作者采取一定的惩罚措施，比如限制发文频率、禁止一段时间的发文权限等。</p>\n<p>转载自 <a href=\"https://blog.csdn.net/qq_43045873/article/details/93816108\" target=\"_blank\" rel=\"noopener\">基于内容的推荐算法</a></p>\n","site":{"data":{"musics":[{"name":"夜曲","artist":"周杰伦","url":"/medias/music/yequ.mp3","cover":"/medias/music/avatars/yequ.jpg"},{"name":"一路向北","artist":"周杰伦","url":"/medias/music/yiluxiangbei.mp3","cover":"/medias/music/avatars/yiluxiangbei.jpg"},{"name":"来自天堂的魔鬼","artist":"邓紫棋","url":"/medias/music/tiantangdemogui.mp3","cover":"/medias/music/avatars/tiantangdemogui.jpg"},{"name":"倒数","artist":"邓紫棋","url":"/medias/music/daoshu.mp3","cover":"/medias/music/avatars/daoshu.jpg"}],"friends":[{"name":"知乎专栏","url":"https://zhuanlan.zhihu.com/godweiyang","title":"访问主页","introduction":"算法码上来","avatar":"/medias/avatars/myzhihu.png"},{"name":"火山翻译","url":"https://translate.volcengine.cn","title":"访问主页","introduction":"提供全球领先的翻译技术与服务","avatar":"/medias/avatars/bytedtrans.png"},{"name":"AntNLP","url":"https://antnlp.org","title":"访问主页","introduction":"华东师范大学自然语言处理实验室欢迎您的加入！","avatar":"/medias/avatars/antnlp.ico"},{"name":"IDS²","url":"https://www.smart-dependable-sino-europe.institute","title":"访问主页","introduction":"中欧可靠智能软件联合实验室欢迎您的加入！","avatar":"/medias/avatars/ids2.jpg"},{"name":"孙长志","url":"https://www.czsun.site","title":"访问主页","introduction":"AntNLP博士大师兄！","avatar":"/medias/avatars/sunchangzhi.jpg"},{"name":"纪焘","url":"https://taoji.site","title":"访问主页","introduction":"AntNLP博士带明星！","avatar":"/medias/avatars/jitao.jpg"},{"name":"杜雨沛","url":"https://yupei-du.github.io/","title":"访问主页","introduction":"AntNLP唱跳RAP打篮球全能师兄！","avatar":"/medias/avatars/duyupei.jpg"},{"name":"0xbirdpwn","url":"https://0xbird.top/","title":"访问主页","introduction":"十步杀一人，千里不留行，事了拂衣去，深藏功与名。","avatar":"/medias/avatars/0xbird.png"},{"name":"李佳倩的博客","url":"https://jiaqianlee.com/","title":"访问主页","introduction":"一只小白的成长之路！","avatar":"/medias/avatars/lijiaqian.png"},{"name":"kewlgrl","url":"https://blog.csdn.net/MIKASA3","title":"访问主页","introduction":"好大一只咸鱼哇","avatar":"/medias/avatars/kewlgrl.jpg"},{"name":"Think Far Blog","url":"https://wuli749826.github.io","title":"访问主页","introduction":"我曾经拥有这一切，转眼都飘散如烟。","avatar":"/medias/avatars/gsy.jpg"},{"name":"望城风景","url":"https://www.itaowei.cn/","title":"访问主页","introduction":"用力活过的日子，才配得上此刻的缅怀。","avatar":"/medias/avatars/taowei.jpg"},{"name":"jxtxzzw空间","url":"https://www.jxtxzzw.com/wordpress","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/zzw.jpg"},{"name":"DREAMWINGS","url":"https://www.dreamwings.cn/","title":"访问主页","introduction":"夢はそこでないと、私の権利である","avatar":"/medias/avatars/qianqian.png"},{"name":"ElaineLv","url":"https://www.elainelv.com/","title":"访问主页","introduction":"Stay hungry, Stay foolish","avatar":"/medias/avatars/lyn-draw.jpg"},{"name":"Subject_No_i","url":"https://subjectnoi.github.io","title":"访问主页","introduction":"在原七海 中野三玖 中野二乃 樱岛麻衣的老公","avatar":"/medias/avatars/lzh.png"},{"name":"菁菁","url":"https://angericky.github.io/","title":"访问主页","introduction":"做什么都是因为喜欢","avatar":"/medias/avatars/jingjing.jpg"},{"name":"Sweet-Q","url":"https://sweet-q.github.io","title":"访问主页","introduction":"华东师范大学数学系","avatar":"/medias/avatars/babyq.png"},{"name":"伟大的蚊子","url":"https://www.cnblogs.com/cww97/","title":"访问主页","introduction":"鼓楼的夜晚时间匆匆","avatar":"/medias/avatars/cww97.jpg"},{"name":"Fun4wut","url":"https://blog.fun4go.top","title":"访问主页","introduction":"菜鸡欢迎大佬的光顾","avatar":"/medias/avatars/fun4go.png"},{"name":"Hael Chan","url":"https://haelchan.me/","title":"访问主页","introduction":"浙江大学 & NLP & ML","avatar":"/medias/avatars/hael.jpg"},{"name":"happygirlzt","url":"https://www.happygirlzt.com","title":"访问主页","introduction":"A Backend Engineer","avatar":"/medias/avatars/zhangting.jpg"},{"name":"星空无限","url":"https://liyangzone.com","title":"访问主页","introduction":"前端开发，死飞大佬。分享技术，分享生活。","avatar":"/medias/avatars/liyangzone.jpg"},{"name":"Mashiro","url":"https://2heng.xin/","title":"访问主页","introduction":"樱花庄的白猫","avatar":"/medias/avatars/mashiro.jpg"},{"name":"hzwer","url":"https://hzwer.com/","title":"访问主页","introduction":"北京大学计算机系","avatar":"/medias/avatars/hzwer.jpg"},{"name":"MPY634","url":"https://mpy634.cn/","title":"访问主页","introduction":"摸鱼，永无止境。","avatar":"/medias/avatars/mpy634.png"},{"name":"徐铭辰的博客","url":"https://michaelxucs.com","title":"访问主页","introduction":"埃克塞特大学计算机系","avatar":"/medias/avatars/michael.jpg"},{"name":"Mizunashi","url":"https://mizunashi.me","title":"访问主页","introduction":"欢迎大佬们来玩","avatar":"/medias/avatars/mizunashi.png"},{"name":"xuzhongyou","url":"https://xuzhongyou.github.io/","title":"访问主页","introduction":"我哽咽道：你是赵默笙，可我不是何以琛啊。","avatar":"/medias/avatars/xuzhongyou.jpg"},{"name":"zerol","url":"https://zerol.me/","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/huaji.jpg"},{"name":"Zhang Yi","url":"https://codewithzhangyi.com/","title":"访问主页","introduction":"Coding is the New Sexy","avatar":"/medias/avatars/zhangyi.jpg"},{"name":"科学空间","url":"https://spaces.ac.cn/","title":"访问主页","introduction":"中山大学基础数学研究生","avatar":"/medias/avatars/spacesac.png"},{"name":"lucifer的博客","url":"https://lucifer.ren/blog/","title":"访问主页","introduction":"一个脑洞很大的程序员。","avatar":"https://tva1.sinaimg.cn/large/006tNbRwly1ga7ognflh9j30b40b4q3w.jpg"},{"name":"钱栋伟","url":"https://sscjwdyzdw.club","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/qiandongwei.jpg"},{"name":"CJ Blog","url":"https://chrisju.cn/","title":"访问主页","introduction":"Failing means foolish.","avatar":"/medias/avatars/mouse.jpg"},{"name":"Tawn","url":"https://tawn0000.github.io/","title":"访问主页","introduction":"JNU ACMer","avatar":"/medias/avatars/tawn.jpg"},{"name":"Master X","url":"https://masterx.top/","title":"访问主页","introduction":"ECNU&ML&DL","avatar":"/medias/avatars/masterx.jpg"},{"name":"分享客","url":"https://sharerdiary.com/","title":"访问主页","introduction":"爱生活，爱分享！","avatar":"/medias/avatars/yezijie.png"},{"name":"taotao","url":"https://zouzhitao.github.io","title":"访问主页","introduction":"taotao 码字的地方","avatar":"/medias/avatars/taotao.jpg"},{"name":"Xiejiadong","url":"https://xiejiadong.com","title":"访问主页","introduction":"Xiejiadong's blog","avatar":"/medias/avatars/xiejiadong.jpg"},{"name":"飞吧","url":"https://fei.bar","title":"访问主页","introduction":"啓飞的个人博客","avatar":"/medias/avatars/feibar.png"},{"name":"ajin","url":"https://ajin.cloud","title":"访问主页","introduction":"Always be enthusiastic","avatar":"/medias/avatars/ajin.jpg"},{"name":"Hiyoung","url":"https://hiyoungai.com/","title":"访问主页","introduction":"宠辱不惊，看庭前花开花落；去留无意，望天空云卷云舒。","avatar":"https://cdn.jsdelivr.net/gh/hiyoung123/cdn/img/avatar.jpg"},{"name":"无言的博客","url":"https://www.yzplove.top","title":"访问主页","introduction":"代码真是越敲越香","avatar":"https://cdn.jsdelivr.net/gh/yzp-99/yzp-99.github.io/medias/avatars/me.jpg"},{"name":"Naixin Zhang","url":"https://naixinzhang.github.io/","title":"访问主页","introduction":"Econ Master | Data Analyst/scientist Candidate","avatar":"https://naixinzhang.github.io/medias/avatars/avatar.jpg"},{"name":"帅张的梦呓","url":"https://ishuaizhang.com","title":"访问主页","introduction":"XDUer","avatar":"https://ishuaizhang.com/medias/avatars/avatar.jpg"},{"name":"Gatsby’s blog","url":"https://a347807131.github.io/","title":"访问主页","introduction":"Nothing perfect, Noting special.","avatar":"https://a347807131.github.io/medias/avatar.gif"},{"name":"宇宙湾","url":"https://yuzhouwan.com/","title":"访问主页","introduction":"主要是大数据和人工智能的原创文章。","avatar":"https://yuzhouwan.com/yuzhouwan_logo_128x128.ico"},{"name":"Dotnet9的博客","url":"https://dotnet9.com","title":"访问主页","introduction":"一个热衷于互联网分享精神的个人博客站点","avatar":"https://img.dotnet9.com/logo-foot.png"},{"name":"Macchiato","url":"https://hcj123123.oschina.io","title":"访问主页","introduction":"java学习者","avatar":"https://y.gtimg.cn/music/photo_new/T002R300x300M000002qD7gF3fW0JL_1.jpg?max_age=2592000"},{"name":"过客~励む","url":"https://yafine-blog.cn","title":"访问主页","introduction":"你现在的努力，是为了以后有更多的选择。","avatar":"https://yafine-blog.cn/medias/avatar.jpg"},{"name":"meteorsh","url":"https://weisenhui.top","title":"访问主页","introduction":"Data Science & Engineering","avatar":"https://weisenhui.top/medias/avatar.jpg"},{"name":"Kuroko","url":"https://kuroko.info","title":"访问主页","introduction":"浓烟下的诗歌电台","avatar":"http://kuroko.info/wp-content/uploads/2020/11/2.jpg"}]}},"excerpt":"","more":"<h1 id=\"写在前面-什么是基于内容推荐算法\"><a href=\"#写在前面-什么是基于内容推荐算法\" class=\"headerlink\" title=\"写在前面 - 什么是基于内容推荐算法\"></a>写在前面 - 什么是基于内容推荐算法</h1><p>广义内容，是指包括文本、图片、音频、视频等在内的多媒体信息。<br>基于内容的推荐算法(Content-Based Recommendations)是基于标的物相关信息、用户相关信息及用户对标的物的操作行为来构建推荐算法模型，为用户提供推荐服务。这里的标的物相关信息可以是对标的物文字描述的metadata信息、标签、用户评论、人工标注的信息等。用户相关信息是指人口统计学信息(如年龄、性别、偏好、地域、收入等等)。用户对标的物的操作行为可以是评论、收藏、点赞、观看、浏览、点击、加购物车、购买等。基于内容的推荐算法一般只依赖于用户自身的行为为用户提供推荐，不涉及到其他用户的行为。</p>\n<p>广义的标的物相关信息不限于文本信息，图片、语音、视频等都可以作为内容推荐的信息来源，只不过这类信息处理成本较大，不光是算法难度大、处理的时间及存储成本也相对更高。</p>\n<p>基于内容的推荐算法算是最早应用于工程实践的推荐算法，有大量的应用案例，如今日头条的推荐有很大比例是基于内容的推荐算法。</p>\n<h1 id=\"基于内容的推荐算法实现原理\"><a href=\"#基于内容的推荐算法实现原理\" class=\"headerlink\" title=\"基于内容的推荐算法实现原理\"></a>基于内容的推荐算法实现原理</h1><p>基于内容的推荐算法的基本原理是根据用户的历史行为，获得用户的兴趣偏好，为用户推荐跟他的兴趣偏好相似的标的物，下图展示了基于内容的推荐算法逻辑过程。<br><img src=\"alg_resis.jpeg\" alt=\"算法逻辑\"></p>\n<p>从上图也可以看出，要做基于内容的个性化推荐，一般需要三个步骤，它们分别是：基于用户信息及用户操作行为构建用户特征表示、基于标的物信息构建标的物特征表示、基于用户及标的物特征表示为用户推荐标的物。<br><img src=\"alg_struc.jpeg\" alt=\"核心步骤\"></p>\n<p>本节我们先介绍如何基于核心步骤的1和2喂用户做推荐（即达到步骤3），然后分别对这三个步骤加以说明，介绍每个步骤都有哪些方法和策略可供选择。</p>\n<h2 id=\"基于用户和标的物特征为用户推荐的核心思想\"><a href=\"#基于用户和标的物特征为用户推荐的核心思想\" class=\"headerlink\" title=\"基于用户和标的物特征为用户推荐的核心思想\"></a>基于用户和标的物特征为用户推荐的核心思想</h2><p>有了用户特征和标的物特征，推荐思路总结有三个：</p>\n<p><strong>1.基于用户历史行为记录了做推荐</strong><br>我们需要事先计算标的物之间的相似性，然后将用户历史记录中的标的物的相似标的物推荐给用户。<br>不管标的物包含哪类信息，一般的思路是将标的物特征转化为向量化表示，有了向量化表示，就可以通过cosin余弦计算两个标的物向量之间的相似度，余弦是相邻边比值，当比值近似1的情况，相似度最好。</p>\n<p><strong>2.用户和标的物特征都用显式的标签表示，利用该表示做推荐</strong><br>标的物用标签来表示，反过来，每个标签就可以关联一组标的物，那么根据用户的标签表示，用户的兴趣标签就可以关联到一组标的物，这组通过标签关联到的标的物，就可以作为给用户推荐的候选集合。这类方法就是所谓的倒排索引，是搜索业务通用的解决方案。</p>\n<p><strong>3.用户和标的物嵌入到同一个向量空间，基于向量相似（即计算向量余弦值）做推荐</strong><br>当用户和标的物嵌入到同一个向量空间后，就可以通过计算用户和标的物之间的相似度，然后按照标的物跟用户的相似度，为用户推荐相似度高的标的物。还可以基于用户向量表示计算用户相似度，将相似用户喜欢的标的物推荐给该用户，这时标的物的嵌入是不必要的。</p>\n<p>上面就是基于内容推荐的核心思想，那么如何构建用户表示特征向量和标的物表示特征向量就是推荐系统的关键。</p>\n<h2 id=\"构建用户特征向量\"><a href=\"#构建用户特征向量\" class=\"headerlink\" title=\"构建用户特征向量\"></a>构建用户特征向量</h2><p>用户的特征总结来讲有如下方法构建</p>\n<ul>\n<li>基于用户对标的物的操作行为，如点击/购买/收藏/播放/评论等构建用户对标的物的偏好画像；</li>\n<li>基于用户自身的人口统计学特征表示。</li>\n</ul>\n<p>具体来说：<br><strong>1.用户行为记录作为显示特征</strong><br>比如用户浏览过A、B、C三个视频，同时根据每个视频用户观看时长占分别视频总时长的比例给用户行为打分，这是用户的兴趣偏好就可以记录为{$(A, S1), (B, S2), (C, S3)$}，其中S1, S2, S3分别是用户对视频A、B、C的评分。</p>\n<p>该方案直接将用户历史操作过的标的物作为用户特征表示，在推荐时可以将与用户操作过的标的物相似的标的物推荐给用高糊。</p>\n<p><strong>2.显示的标签特征</strong><br>如果标的物是有标签来描述，那么这些标签可以用来表征标的物。用户的兴趣画像也可以基于用户对标的物的行为来打上对应的标签。拿视频推荐来举例，如果用户过去看了科幻和恐怖类电影，那么恐怖和科幻就是用户的偏好标签了。<br>每个标的物的标签可以是包含权重的，而用户对标的物的操作行为也是有权重的，而用户对标的物的操作行为也是有权重的，从而用户的兴趣标签是有权重的。<br>在具体推荐时，可以将用户的兴趣标签关联到的标的物(具备该标签的标的物)推荐给用户。</p>\n<p><strong>3.向量方法的兴趣特征</strong><br>可以基于标的物的信息将标的物嵌入到向量空间中，利用向量来表示标的物，稍后讲解嵌入的算法实现方案。有了标的物的向量化表示，用户的兴趣向量就可以用他操作过的标的物的向量的平均向量来表示了。<br>这里表示用户兴趣向量有多种策略，可以基于用户对操作过的标的物的评分以及时间加权来获取用户的加权偏好向量，而不是直接取平均。另外，我们也可以根据用户操作过的标的物之间的相似度，喂用户构建多个兴趣向量（比如对标的物聚类，用户在某一类上操作过的标的物的向量均值作为用户在这个类别上的兴趣向量），从而更好的表达用户多方位的兴趣偏好。<br>有了用户的兴趣向量及标的物的兴趣向量，可以基于向量相似性计算用户对标的物的偏好度，再基于偏好度大小来为用户推荐标的物。</p>\n<p><strong>4.通过交互方式获取用户兴趣标签</strong><br>在用户首次注册让用户选择自己的兴趣偏好标签，一旦用户勾选了自己的兴趣标签，那么这些兴趣标签就是系统为用户推荐标的物的逻辑基础，具体推荐策略逻辑就可以按照上述方法进行。</p>\n<p><strong>5.用户的人口统计学特征</strong><br>用户在登陆、注册时提供的关于自身相关的信息、通过运营活动用户填写的信息、通过用户行为利用算法逻辑得出的结论，如年龄、性别、地域、收入、爱好、居住地、工作地点等是非常主要的信息。基于这些关于用户维度的信息，我们可以将用户特征用向量化表示出来，向量的维度就是可获取的用户特征数。<br>有了用户特征向量就可以计算用户相似度，将相思用户喜欢的标的物推荐给用户。</p>\n<h2 id=\"构建标的物特征表示\"><a href=\"#构建标的物特征表示\" class=\"headerlink\" title=\"构建标的物特征表示\"></a>构建标的物特征表示</h2><p>标的物的特征，一般可以利用显示的标签来表示，也可以利用隐式的向量（当然one-hot编码也是向量表示，但是不是隐式的）来刻画，向量的每个维度就是一个隐式的特征项。前面提到某些推荐算法需要计算标的物之间的相似度，下面我们在讲标的物的各种特征表示时，也简单介绍一下标的物之间的相似度计算方法。顺便说一下，标的物关联标的物的推荐方式也需要知道标的物之间的相似度。下面从四个方面来详细讲解怎么构建标的物的特征表示。</p>\n<p><strong>1.标的物包含标签信息</strong><br>最简单的方式是将标签按照某种顺序排列，每个标签看成一个纬度，那么每个标的物就可以表示成一个N维向量，如 {item， [tag1, tag2, tag3, …, tagN]}，如果标的物包含某个标签，向量在相应标签上的分量值为1，否则为0，即所谓的one-hot编码。通常N可能非常大，比如视频领域，N可能是几万或者几十万上百万，这时向量是稀疏矩阵，因为一般标的物只有几个或者几十个标签，采用稀疏向量的表示来优化向量存储和计算，提升效率。有个标的物基于标签的向量化表示，很容易基于cosin余弦计算相似度了。</p>\n<p>实际上标签不是这么简单的，有很多业务标签是分级的，比如电商（像淘宝），有多级标签，标签的层级关系形成一颗树状结构，这时向量化有个简单的表示方案，即只考虑最低层级标签（叶节点），基于叶节点标签构建向量表示。更复杂的方法，可以基于层级结构构建标签表示及计算标的物相似度。<br><img src=\"tag_tree.png\" alt=\"标签树\"></p>\n<p>标签是可以通过算法获取的，比如通过NLP从文本信息中提取关键词作为标签。对于图片/视频，通过他们的描述信息提取标签，另外可以通过目标检测的方法从图片/视频中提取相关对象构建标签。</p>\n<p>标签可以是用户打的，很多产品在用户与标的物交互时互相可以为标的物打标签，这些标签就是标的物的一种刻画。标签也可以是人工标注，Netflix在做推荐时，就请了上万专家对视频从上千个纬度来打标签，质量很高。很多行业的标的物来源于第三方供应商，他们在入驻平台时会被要求按照某些规范填写相关标签信息。</p>\n<p><strong>2.标的物具备结构化的信息</strong><br>有些行业标的物是具备结构化信息的，如视频行业，一般会有媒体资料库，库中对每个节目都会有标题、演职员、导演、标签、评分、地域等维度数据，这类数据一般存在传统数据库中。这类数据，可以将一个字段（也是一个特征）作为向量的一个纬度，这时向量化表示每个维度的值不一定是数值，但是形式还是向量化的形式，即所谓的向量空间模型（Vector Space Model，简称VSM）。这时可以通过如下的方式计算两个标的物之间的相似度。<br>假设两个标的物的向量表示分别为<br>$V1=(p_1, p_2, p_3, ……, p_k)$<br>$V2=(q_1, q_2, q_3, ……, q_k)$</p>\n<p>这时两个标的物的相似性计算公式为 $$sim(V_1, V_2)=\\sum_{t=1}^k ksim(p_t, q_t)$$</p>\n<p>其中代表的是向量的两个分量之间的相似度。可以采用Jacard相似度等各种方法计算两个分量之间的相似度。上面公式中还可以针对不同的分量采用不同的权重策略，见下面公式，其中第t个分量（特征）的权重，具体权重的数值可以根据对业务的理解来人工设置，或者利用机器学习算法来训练学习得到。<br>$$sim(V_1, V_2)=\\sum_{t=1}^k w_t*sim(p_t, q_t)$$</p>\n<p><strong>3.包含文本信息的标的物的特征表示</strong><br>像头条等新闻资讯或搜索类app，标的物就是一篇篇文章（其中会包含图片或视频），文本信息是最重要的信息形式，构建标的物之间的相似性有很多种方法。下面对常用的方法做一些讲解说明。</p>\n<p>a. 利用TF-IDF将文本信息转化为特征向量<br>TF-IDF通过将所有文档（即标的物）粉刺，获得所有不同词的集合（假设有M个词），那么就可以为每个文档构建一个M维（每个词就是一个维度向量）的向量，而该向量中某个词所在维度的值可以通过统计每个词在文档中的重要性来衡量，这个重要性的度量就是TF-IDF。<br>TF是某个词在某篇文章中出现的频次，用于衡量这个词在文档中的重要性，出现次数越多的词重要性越高，副词（的，地）和语气助词等会去掉度量，这些词对构建向量是没有任何实际价值的。TF具体计算公式如下<br>$$<br>TF(t_k, d_j)=\\frac{||t_k\\in d_j||}{||d_j||}<br>$$<br>其中分子tk是第k个词在文档中出现的次数，分母是dj中词的总个数。</p>\n<p>IDF代表的是某个词在所有文档中的“区分度”，如果某个词只在少量几个文档中出现，那么它包含的价值就是巨大的，如果某个词在很多文档中出现，那么它就不能很好的度量这个文档。下面是IDF的计算公式，其中N是所有文档的个数，是包含次的文档个数，这个公式与前面描述一致，稀有词的区分度大。<br>$$<br>IDF(t_k)=\\log \\frac{N}{n_k}<br>$$<br>有了上面对TF和IDF的定义，实际的TF-IDF就是上面两个量的乘积：<br>$$<br>TF-IDF(t_k, d_j) = TF(t_k, d_j) * IDF(t_k)<br>$$<br>有了基于TF-IDF计算的标的物（即文档表示为TF-IDF向量）的向量表示，就很容易计算两个标的物（文档）的相似度了（cosin余弦相似度）</p>\n<p>b. 利用LDA算法构建文档（标的物）的主题<br>LDA算法是一类文档主题生成模型，包含词、主题、文档三层结构，是一个三层的贝叶斯概率模型。对于语料库中的每篇文档，LDA定义了如下生成过程：</p>\n<ol>\n<li>对于每篇文档，从主题分布中抽取一个主题；</li>\n<li>从上述被抽取到的主题所对应的单词分布中抽取一个单词；</li>\n<li>重复上述过程直至遍历文档中的每一个单词。</li>\n</ol>\n<p>我们通过对所有文档进行LDA训练，就可以构建每篇文档的主题分布，从而构建一个 <em>基于主题的向量（每个主题就是向量的一个分量，而值就是该主题的概率值）</em> ，这样我们就可以利用该向量来计算两篇文档的相似度了。主题模型可以理解为一个降维过程，将文档的词向量表示将维成主题的向量表示（主题的个数是远远小于词的个数的，所以是降维）。</p>\n<p>c. 利用doc2vec算法构建文本相似度<br>doc2vec或者叫做paragraph2vec, sentence embeddings，是一种非监督式算法，可以获得句子、段落、文章的稠密向量表达，它是word2vec的拓展，2014年被Google的两位大牛提出，并广泛应用于文本分类和情感分析中。通过doc2vec学习出句子、段落、文章的向量表示，可以通过计算向量之间距离来表达句子、段落、文章之间的相似性。</p>\n<p>这里我们简单描述一下doc2vec的核心思想。doc2vec受word2vec启发，由它推广而来，word2vec的设计思路是通过学习一个唯一的向量表示每个词，每个词向量作为矩阵W中的一列（W是所有词向量构成的矩阵），矩阵列可以通过词汇表为每个词做索引，排在索引第一位的放到矩阵W的第一列，如此类推。将学习问题转化为通过上下文词序列中前几个词来预测下一个词。具体的模型框架如下图：<br><img src=\"alg_word2vec.png\" alt=\"word2vec算法框架\"></p>\n<p>简单来说，给定一个待训练的词序列，词向量模型通过极大化平均对数概率<br>$$<br>\\frac{1}{T}\\sum_{t=k}^{T-k} \\log p(w_t|w_{t-k}, …, w_{t+k})<br>$$</p>\n<p>将预测任务通过softmax变换看成一个多分类问题</p>\n<p>$$<br>p(w_t|w_{t-k}, …, w_{t+k}) = \\frac{e^{y_{w_t}}}{\\sum _ie^{y_i}}<br>$$</p>\n<p>上面公式中词i的归一化对数概率，可以用下面公式计算，其中U、b是参数，h是通过词向量的拼接或者平均来构建的。</p>\n<p>$$<br>y = b + Uh(w_{t-k}, …, w_{t+k};W)<br>$$</p>\n<p>word2vec算法随机初始化词向量，通过随机梯度下降法来训练神经网络模型，最终得到每个词的向量表示。</p>\n<p>doc2vec类似，每个段落/文档表示为向量，作为矩阵D的一列，每个词也表示为一个向量，作为矩阵W的一列。将学习问题转化为通过上下文词序列中前几个词和段落/文档来预测下一个词。将段落/文档和词向量通过拼接或者平均来预测句子的下一个词（下图是通过“the”、“cat”、“sat”及段落id来预测下一个词“on“）。在训练的时候我们固定上下文的长度，用滑动窗口的方法产生训练集。段落向量/句向量在上下文中共享。<br><img src=\"alg_doc2vec.jpeg\" alt=\"doc2vec模型结构\"></p>\n<p>工程上有很多开源框架有word2vec和doc2vec的实现，比如gensim中就有很好的实现。<a href=\"https://radimrehurek.com/gensim/models/doc2vec.html\" target=\"_blank\" rel=\"noopener\">参考链接</a>。</p>\n<p><strong>4.图片、音频、或者视频信息</strong><br>如果标的物包含的是图片、音频或者视频信息，处理会更加复杂。一种方法是利用它们的文本信息（标题、评论、描述信息、利用图像技术提取的字幕文本信息、利用语音识别获取的文本信息等）采用（3）的技术方案获得向量化表示。对于图像或者视频，也可以利用opencv中的PSNR和SSIM算法来表示视频特征，也可以计算视频之间的相似度。总之，图片、图像、音频都可以转化为NLP问题或者图像处理问题，通过图像处理和NLP获得对应的特征表示，从而最终计算出相似度，如下图表示。<br><img src=\"alg_va.jpeg\" alt=\"视频/图片问题转化为NLP或图像处理问题\"></p>\n<h2 id=\"为用户做个性化推荐\"><a href=\"#为用户做个性化推荐\" class=\"headerlink\" title=\"为用户做个性化推荐\"></a>为用户做个性化推荐</h2><p>有了上面用户和标的物的特征表示，剩下就是基于此为用户做个性化推荐了，总结了下面5种方法和策略。这里总结的推荐是完全个性化范式的推荐，为每个用户生成不一样的推荐结果。</p>\n<p><strong>1.采用跟基于物品的协同过滤类似的方式推荐</strong><br>该方法采用基于用户行为记录的显示特征表示用户特征，通过将用户操作过的标的物最相似的标的物推荐给用户，算法原理跟基于物品的协同过滤类似，计算公式甚至是一样的，但是这里计算标的物相似度是基于标的物的自身信息来计算的，而基于物品的协同过滤是基于用户对标的物的行为矩阵来计算的。</p>\n<p>用户u对标的物s的喜好度 sim(u, s) 可以采用如下公式计算，其中U是所有用户操作过的标的物列表，是用户u对标的物的喜好度，是标的物与s的相似度。</p>\n<p>$$<br>sim(u, s) = \\sum_{s_i \\in U} score(s_i) * sim(s_i, s)<br>$$</p>\n<p>有了用户对每个标的物的相似度，基于相似度降序排列，就可以取topN推荐给用户了。<br>除了采用上面的公式外，我们在推荐时也可以稍作变化，采用最近邻方法（K-NearestNeighbor, KNN）。对于用户操作/喜欢过的每个标的物，通过KNN找到最相似的k个标的物</p>\n<p>$$<br>Rec(u) = \\sum_{s_i \\in U} {s_j|s_j \\in kNN(s_i)}<br>$$</p>\n<p>其中Rec(u)是给用户u的推荐，是标的物最近邻（最相似）的k个标的物。</p>\n<p><strong>2.采用跟基于用户协同过滤类似的方法计算推荐</strong><br>如果我们获得了用户的人口统计学向量表示或者基于用户历史操作行为获得了用户的向量化表示，那么我们可以采用跟基于用户的协同过滤方法相似的方法来为用户提供个性化推荐，具体思路如下：<br>我们可以将与该用户最相似的用户喜欢的标的物推荐给该用户，算法原理跟基于用户的协同过滤类似，计算公式甚至是一样的。但是这里计算用户相似度是基于用户的人口统计学特征向量表示来计算的（计算用户向量cosine余弦相似度）或者是基于用户历史行为嵌入获得的特征向量来计算的，而基于用户的协同过滤是基于用户对标的物的行为矩阵来计算用户之间的相似度。</p>\n<p>用户u对标的物s的喜好度 sim(u, s) 采用如下公式计算，其中U是与该用户最相似的用户集合，是用户对标的物s的喜好度，是用户与该用户u的相似度。</p>\n<p>$$<br>sim(u, s) = \\sum_{u_i \\in U} sim(u, u_i) * score(u_i, s)<br>$$</p>\n<p>有了用户对每个标的物的相似度，基于相似度降序排列，就可以取topN推荐给用户了。</p>\n<p>与前面一样我们也可以采用最近邻方法(K-NearesNeighbor, KNN)。通过KNN找到最相似的k个用户，将这些用户操作/喜欢过的每个标的物推荐给用户。</p>\n<p>$$<br>Rec(u) = \\sum_{u_i \\in KNN(u)} {s_j \\in A(u_i)}<br>$$</p>\n<p>其中Rec(u)是给用户u的推荐， kNN(u)是用户相似的k个用户。是用户操作/喜欢过的标的物的集合。</p>\n<p><strong>3.基于标的物聚类的推荐</strong><br>有了标的物的向量表示，我们可以用kmeans等聚类算法将标的物聚类，有了标的物的聚类，推荐就好办了。从用户历史行为中的标的物所在的类别挑选用户没有操作行为的标的物推荐给用户，这种推荐方式是非常直观的。电视猫的个性化推荐就采用了类似的思路。具体计算公式如下，其中是给用户u的推荐，H是用户的历史操作行为集合，Cluster(s)是标的物s所在的聚类。</p>\n<p>$$<br>Rec(u) = \\sum_{s\\in H}{t\\in Cluster(s) \\&amp; t\\neq s}<br>$$</p>\n<p><strong>4.基于向量相似的推荐</strong><br>不管是前面提到的用户的显示兴趣特征（利用标签来衡量用户兴趣）或者是向量式的兴趣特征（将用户的兴趣投影到向量空间），我们都可以获得用户兴趣的向量表示。</p>\n<p>如果我们获得了用户的向量表示和标的物向量表示，那么我们就可以通过向量的cosine余弦相似度计算用户与标的物之间的相似度。一样的，有了用户对每个标的物的相似度，基于相似度降序排列，就可以去topN推荐给用户了。</p>\n<p>基于向量的相似的推荐，需要计算用户向量与每个标的物向量的相似性。如果标的物数量较多，整个计算过程相当耗时。同样，计算标的物最相似的K个标的物，也会涉及到与每个其他标的物计算相似度，也非常耗时。真个计算过程的时间复杂度是O(N)，其中N是标的物的总个数。</p>\n<p>上述复杂的计算过程可以利用Spark等分布式计算平台来加速。对于T+1级（每天更新一次推荐结果）的推荐服务，利用Spark提前计算好，将推荐结果存储起来供前端业务调用。</p>\n<p>另外一种可行的策略是利用高效的向量检索库，在极短时间（毫秒级）内为用户所引出topN最相似的标的物。目前facebook开源的<a href=\"https://github.com/facebookresearch/faiss\" target=\"_blank\" rel=\"noopener\">FAISS库</a>就是一个高效的向量搜索与聚类库，可以在毫秒级响应查询及聚类需求，因此可以用于个性化的实时推荐。目前FAISS已经在推荐业务上得到广泛应用。</p>\n<p><a href=\"https://github.com/facebookresearch/faiss\" target=\"_blank\" rel=\"noopener\">FAISS库</a>适合稠密向量的检索和聚类，所以对于利用LDA、doc2vec算法构建向量表示的方案是实用的，因为这些方法构建的是稠密向量。而对于TF-IDF及基于标签构建的向量化，就不适用了，这两类方法构建的都是稀疏高位矩阵。</p>\n<p><strong>5.基于标签的反向倒排索引做推荐</strong><br>基于标的物的标签和用户的历史兴趣，可以构建出用户基于标签兴趣的画像及推荐与标的物的倒排索引查询表。基于该反向索引表及用户的兴趣画像，我们就可以为用户做个性化推荐了。该类算法其实就是基于标签的召回算法。</p>\n<p>具体推荐过程见下图（基于倒排索引的电影推荐）：从用户画像中获取用户兴趣标签，基于用户的兴趣标签从倒排索引中获取该标签对应的标的物，这样就可以从用户关联到标的物了。其中用户的每个兴趣标签及标签关联到的标的物都是有权重的。</p>\n<p><img src=\"alg_antiindex.jpeg\" alt=\"基于倒排索引的电影推荐\"></p>\n<p>假设用户的兴趣标签及对应的标签权重形如 $\\{(T_1, S_1), (T_2, S_2), (T_3, S_3), ……, (T_k, S_k)\\}$ ，其中T是标签， S是用户对标签的偏好权重。<br>假设标签关联的标的物分别为</p>\n<p>$$<br>T_1 \\longleftrightarrow \\{(O_{11}, W_{11}), (O_{12}, W_{12}), (O_{13}, W_{13}), ……, (O_{1p_1}, W_{1p_1})\\}<br>$$</p>\n<p>$$<br>T_2 \\longleftrightarrow \\{(O_{21}, W_{21}), (O_{22}, W_{22}), (O_{23}, W_{23}), ……, (O_{2p_2}, W_{2p_2})\\}<br>$$</p>\n<p>$$<br>\\cdots<br>$$</p>\n<p>$$<br>T_k \\longleftrightarrow \\{(O_{k1}, W_{k1}), (O_{k2}, W_{k2}), (O_{k3}, W_{k3}), ……, (O_{kp_k}, W_{kp_k})\\}<br>$$ </p>\n<p>其中O、K分别是标的物及对应的权重，那么</p>\n<p>$$<br>U=\\sum_{i=1}^k S_i*T_i \\<br>$$</p>\n<p>$$<br>=\\sum_{i=1}^k S_i*\\{(O_{i1}, W_{i1}), (O_{i2}, W_{i2}), (O_{i3}, W_{i3}), …, (O_{ip_i}, W_{ip_i})\\}<br>$$</p>\n<p>$$<br>=\\sum_{i=1}^k\\sum_{j=1}^{p_i} S_i * W_{ij} * O_{ij}<br>$$</p>\n<p>上式中U是用户对标的物的偏好集合，这里将标的物看成向量空间的基，所以有上面公式。不同的标签可以关联到相同的标的物（因为不同的标的物可以有相同的标签），上式中最后一个等号右边需要合并同类项，将相同基前面的系数相加。合并同类项后，标的物（基）前面的数值就是用户对该标的物的偏好程度了，我们对这些偏好程度降序排列，就可以为用户做topN推荐了。</p>\n<p><em>以上就是基于内容的推荐算法的核心原理。</em></p>\n<h1 id=\"基于内容的推荐算法应用场景\"><a href=\"#基于内容的推荐算法应用场景\" class=\"headerlink\" title=\"基于内容的推荐算法应用场景\"></a>基于内容的推荐算法应用场景</h1><h2 id=\"完全个性化推荐\"><a href=\"#完全个性化推荐\" class=\"headerlink\" title=\"完全个性化推荐\"></a>完全个性化推荐</h2><p>为每个用户生成不同的推荐结果。</p>\n<h2 id=\"标的物关联标的物推荐\"><a href=\"#标的物关联标的物推荐\" class=\"headerlink\" title=\"标的物关联标的物推荐\"></a>标的物关联标的物推荐</h2><p>即根据当前用户浏览标的物，做相关标的物列表topN推荐。</p>\n<h2 id=\"配合其他推荐算法\"><a href=\"#配合其他推荐算法\" class=\"headerlink\" title=\"配合其他推荐算法\"></a>配合其他推荐算法</h2><p>由于基于内容的推荐算法在精准度上不如协同过滤肃反啊，但是可以更好的适应冷启动，所以在实际业务中基于内容的推荐算法会配合其他算法一起服务于用户，常用方法是采用级联方式，先给用户协同过滤的推荐结果，如果该用户行为较少导致没有协同过滤推荐结果，就为该用户推荐基于内容的推荐算法产生推荐结果。</p>\n<h2 id=\"主题推荐\"><a href=\"#主题推荐\" class=\"headerlink\" title=\"主题推荐\"></a>主题推荐</h2><p>如果我们有标的物的推荐信息，并且基于推荐系统构建了一套推荐算法，那么我们就可以将用户喜欢的标签采用主题的方式推荐给用户，每个主题就是用户的一个兴趣标签。通过一系列主题罗列展示，让用户从中筛选自己感兴趣的内容。下图呈现了Netflix首页的示例。<br><img src=\"alg_netflix.jpeg\" alt=\"Netflix首页推荐\"></p>\n<p>Netflix的首页大量采用基于主题的推荐模式。主题推荐的好处是可以将用户所有的兴趣点按照兴趣偏好大小先后展示出来，可解释性强，并且让用户有更多维度的自由选择空间。</p>\n<p>在真实产品中可以采用比netflix这个示例首页更好的方式。具体来说，可以为每个标签通过人工编辑生成一句更有表达空间的话（如武侠标签，可以采用“江湖风云再起，各大门派齐聚论剑”这样更有深度的表述），具体前端展示映射到人工填充的话而不是直接展示原来的标签。</p>\n<h2 id=\"给用户推荐标签\"><a href=\"#给用户推荐标签\" class=\"headerlink\" title=\"给用户推荐标签\"></a>给用户推荐标签</h2><p>另外一种可行的推荐策略是不直接给用户推荐标的物，而是给用户推荐标签，用户通过关注推荐的标签，自动获取具备该标签的标的物。除了可以通过推荐的标签关联到标的物获得直接推荐标的物类似的效果外，间接的通过用户对推荐的标签选择、关注等行为进一步获得了用户的兴趣偏好，这是一种更简简单可行的推荐产品实现方案。</p>\n<h1 id=\"基于内容的推荐算法的优缺点\"><a href=\"#基于内容的推荐算法的优缺点\" class=\"headerlink\" title=\"基于内容的推荐算法的优缺点\"></a>基于内容的推荐算法的优缺点</h1><h2 id=\"优点\"><a href=\"#优点\" class=\"headerlink\" title=\"优点\"></a>优点</h2><ol>\n<li><p>可以很好的识别用户偏好<br>基于内容的推荐算法完全基于用户的历史兴趣来做推荐，推荐的标的物也跟用户的历史兴趣相似，所以推荐内容更加符合用户偏好。</p>\n</li>\n<li><p>直观易懂，解释性强<br>算法基于用户的兴趣为其推荐相似标的物，原理简单、容易理解。同时，由于是基于用户历史兴趣推荐跟兴趣相似的标的物，用户也非常容易接受和认可。</p>\n</li>\n<li><p>更加容易的解决冷启动<br>只要用户有一个系统操作系统，就可以基于内容为用户做推荐，随着行为加深，逐渐优化。同时对于新入库的标的物，只要它具备metadata信息等标的物相关信息，就可以利用基于内容的推荐算法将它分发出去。因此，对于强依赖于UGC内容的产品（抖音等），基于内容的推荐可以更好的对标的物提供方进行流量扶持。</p>\n</li>\n<li><p>算法实现相对简单<br>基于内容的推荐可以基于标签维度做推荐，也可以将标的物嵌入向量空间中，利用相似度做推荐，不管哪种方式，算法实现简单，有现成的开源算法库，容易落地。</p>\n</li>\n<li><p>对于小众领域也能有较好的推荐效果<br>对于冷门小众标的物，用户行为少，协同过滤等方法很难将这类内容分发出去，而基于内容的推荐算法受影响较小。</p>\n</li>\n<li><p>适合标的物快速增长的有时效性要求的产品<br>对于标的物增长很快的产品，如今日头条等新闻类，每天都有海量标的物入库，实效性也很强。新的标的物一般用户行为少，协同过滤算法很难将这些大量实时产生的新的标的物推荐出去，这时就可以采用基于内容的推荐算法更好的分发这些内容</p>\n</li>\n</ol>\n<h2 id=\"缺点\"><a href=\"#缺点\" class=\"headerlink\" title=\"缺点\"></a>缺点</h2><ol>\n<li><p>推荐范围狭窄，新颖性不强<br>由于该类算法只依赖于单个用户的行为为用户做推荐，推荐的结果会聚集在用户过去感兴趣的标的物类别上，如果用户不主动关注其他类型的标的物，很难为用户推荐多样性的结果，也无法挖掘用户深层次的潜在兴趣。特别对于新用户，只有少量行为，为用户推荐的标的物会比较单一。</p>\n</li>\n<li><p>需要知道相关的内容信息且处理起来较难<br>内容信息主要是文本、视频、音频，处理起来费力，相对难度较大，依赖领域知识。同时这些信息大概率含有噪音，增加处理难度。另外，对内容理解的全面性、完整性及准确性会影响推荐的效果。</p>\n</li>\n<li><p>较难将长尾标的物分发出去<br>基于内容的推荐需要用户对标的物有操作行为，长尾标的物一般操作行为少。由于基于内容的推荐只利用单个用户行为做推荐，所以更难将它分发给更多的用户。</p>\n</li>\n<li><p>推荐精准度不太高<br>相比协同过滤算法，基于内容的推荐算法精准度要差一些。</p>\n</li>\n</ol>\n<h1 id=\"基于内容的推荐算法落地需要关注的重要问题\"><a href=\"#基于内容的推荐算法落地需要关注的重要问题\" class=\"headerlink\" title=\"基于内容的推荐算法落地需要关注的重要问题\"></a>基于内容的推荐算法落地需要关注的重要问题</h1><p>基于内容的推荐算法虽然容易理解、实现相对简单，但落地过程中，总结出来如下关键问题需要提前思考。</p>\n<h2 id=\"内容来源的获取\"><a href=\"#内容来源的获取\" class=\"headerlink\" title=\"内容来源的获取\"></a>内容来源的获取</h2><ol>\n<li><p>标的物“自身携带”的信息<br>标的物在上架时，第三方会准备相关的内容信息，如天猫上的商品在上架时会补充很多必要的信息。对于音视频，各类metadata信息也是入库上架时需要填充的信息。我们要做的是增加对新标的物入库的监控和审核，及时发现信息不全的情况并做适当处理。</p>\n</li>\n<li><p>通过爬虫获取标的物相关信息<br>通过爬虫爬取的信息可以作为标的物信息的补充，增加标的物特征完整表示能力的数据来源。</p>\n</li>\n<li><p>通过人工标注数据<br>往往人工标注的数据价值密度高，通过人工精准的标注可以大大提升算法推荐的精准度。问题是成本高。</p>\n</li>\n<li><p>通过运营活动或者产品交互让用户填的内容<br>通过抽奖活动让用户填写家庭组成、兴趣偏好等，在用户开始注册时让用户填写兴趣偏好特征，这些都是获取内容的手段。</p>\n</li>\n<li><p>通过收集用户行为直接获得或者预测推断出的内容<br>通过请求用户GPS位置知道用户的活动轨迹，用户购买时填写收货地址，用户绑定的身份证和银行卡等，通过用户操作行为预测出用户的兴趣偏好，这些方法都可以获得部分用户数据。</p>\n</li>\n<li><p>通过与第三方合作或者产品矩阵之间补充信息<br>目前中国有大数据交易市场，通过正规的数据交易或者跟其他公司合作，在不侵犯用户隐私的情况下，通过交换数据可以有效填补自己产品上缺失的数据。<br>如果公司有多个产品，新产品可以借助老产品的巨大用户基数，将新产品的用户与老产品用户关联起来(id-maping或者账号打通)，这样老产品上丰富的用户行为信息可以赋能给新产品。</p>\n</li>\n</ol>\n<h2 id=\"利用负面反馈\"><a href=\"#利用负面反馈\" class=\"headerlink\" title=\"利用负面反馈\"></a>利用负面反馈</h2><p>用户对标的物的操作行为不一定代表正向反馈，有可能是负向的。比如点开一个视频，看了不到几秒就退出来了，明显表明用户不喜欢。有很多产品会在用户交互中直接提供负向反馈能力，这样可以收集到更多负向反馈。下面是今日头条和百度APP推荐的文章，右下角有一个小叉叉(见下面图9中红色圈圈)，点击后展示上面的白色交互区域，读者可以勾选几类不同的负向反馈机制。<br><img src=\"alg_negative.jpeg\" alt=\"负面反馈形式\"></p>\n<p>负面反馈一般代表用户强烈的不满，因此利用好负反馈信息可以大大提升推荐系统的精准度和满意度。基于内容的推荐算法整合负反馈方式一般有以下几种：</p>\n<ol>\n<li><p>将负向反馈整合到算法模型中<br>在构建算法模型中整合负向反馈，跟正向反馈一起学习，从而更自然的整合负向反馈信息。</p>\n</li>\n<li><p>采用事后过滤方式<br>先生成推荐列表，再从该列表中过滤掉负向反馈关联或者相似的标的物。</p>\n</li>\n</ol>\n<h2 id=\"兴趣随时间变化\"><a href=\"#兴趣随时间变化\" class=\"headerlink\" title=\"兴趣随时间变化\"></a>兴趣随时间变化</h2><p>用户的兴趣不是一成不变的，算法如何整合用户的兴趣变化？可行的策略是对用户的兴趣根据时间衰减，将用户操作行为投射到时间线上，并根据时间线的先后顺序给予不同权重，同时给用户建立短期兴趣特征和长期（一般）兴趣特征，在推荐时既考虑短期有考虑长期兴趣，最终推荐列表中整合两部分结果呈现。</p>\n<h2 id=\"数据清洗\"><a href=\"#数据清洗\" class=\"headerlink\" title=\"数据清洗\"></a>数据清洗</h2><p>基于内容的推荐算法依赖于标的物相关的描述信息，这些信息更多的是以文本的形式存在，这就涉及到自然语言处理，文本中可能会存在很多歧义、符号、脏数据，我们需要实现对数据进行很好的处理，才能让后续的推荐算法产生好的效果。</p>\n<h2 id=\"加速计算与节省资源\"><a href=\"#加速计算与节省资源\" class=\"headerlink\" title=\"加速计算与节省资源\"></a>加速计算与节省资源</h2><p>在实际推荐算法落地时，我们会事先为每个标的物计算N(=50)个最相似的标的物，事先将计算好的标的物存起来，减少时间和空间成本，方便后续更好地做推荐。同时也可以利用各种分布式计算平台和快速查询平台(如Spark、FAISS库等)加速计算过程。另外，算法开发过程中尽量做到模块化，对业务做抽象封装，这可以大大提升开发效率，并且可能会节省很多资源。</p>\n<h2 id=\"解决基于内容的推荐越推越窄的问题\"><a href=\"#解决基于内容的推荐越推越窄的问题\" class=\"headerlink\" title=\"解决基于内容的推荐越推越窄的问题\"></a>解决基于内容的推荐越推越窄的问题</h2><p>前面提到基于内容的推荐存在越推越窄的缺点，那怎么避免或者减弱这种影响呢？当然用协同过滤等其他算法是一个有效的方法。另外，我们可以给用户做兴趣探索，为用户推荐兴趣之外的特征关联的标的物，通过用户的反馈来拓展用户兴趣空间，这类方法就是强化学习中的EE方法。如果我们构造了标的物的知识图谱系统，我们就可以通过图谱拓展标的物更远的联系，通过长线的相关性来做推荐，同样可以有效解决越推越窄的问题。</p>\n<h2 id=\"工程落地技术选型\"><a href=\"#工程落地技术选型\" class=\"headerlink\" title=\"工程落地技术选型\"></a>工程落地技术选型</h2><p>本篇文章主要讲的是基于内容的推荐系统的算法实现原理，具体工程实践时，需要考虑到数据处理、模型训练、分布式计算等技术，当前很多开源方案可以使用，常用的如Spark mllib，scikit-learn，Tensorflow，pytorch，gensim等，这些工具都封装了很多数据处理、特征提取、机器学习算法，我们可以基于第二节的算法思路来落地实现。</p>\n<h2 id=\"业务的安全性\"><a href=\"#业务的安全性\" class=\"headerlink\" title=\"业务的安全性\"></a>业务的安全性</h2><p>除了技术外，在推荐产品落地中还需要考虑推荐的标的物的安全性，避免推荐反动、色情、标题党、低俗内容，这些就需要基于NLP或者CV技术对文本或者视频进行分析过滤。如果是UGC平台型的产品，还需要考虑怎么激励优质内容创作者，让好的内容得到更多的分发机会，同时对产生劣质内容的创作者采取一定的惩罚措施，比如限制发文频率、禁止一段时间的发文权限等。</p>\n<p>转载自 <a href=\"https://blog.csdn.net/qq_43045873/article/details/93816108\" target=\"_blank\" rel=\"noopener\">基于内容的推荐算法</a></p>\n"},{"title":"关于EIP-1559协议","top":false,"cover":false,"toc":true,"mathjax":true,"date":"2021-10-24T02:57:13.000Z","password":null,"summary":null,"_content":"\n# 写在前面\n比特币以一种全新的思路重建了货币体系，这个传统情况下被认为一定需要权威中心（政府）背书和管理的核心金融基础设施，以太坊则带来了由加密货币到去中心化应用生态爆发，从ICO到Defi，再到NFT，区块链已经越来越接近真实生活。秉承去中心化理念的全面应用，以太坊升级也是去中心化的，任何一个feature改进或升级都需要参与者共同确认，因为EIP（以太坊改进提案）应运而生，而EIP1559则可视为以太坊最重要的提案之一，因为它的目的是改革ETH的Gas费定价机制，让用户以合理可接受的成本使用以太坊。\n\n# 以太坊提案EIP-1559\nEIP-1559是以太坊的重要提案，它对未来ETH的价值捕获、用户体验、安全性等方面都会产生重大影响。中短期内，EIP-1559提案对ETH的价格冲击力可能仅次于ETH的PoS，从长期看，可能会有更持久的影响力。\n\n## 什么是EIP-1559？\nEIP-1559本质上是关于以太坊网络交易定价机制的解决方案，它包括每区块网络费用的固定部分base fee（也就是基础费用，会被销毁，矿工收不到这笔费用），同时还有动态的可伸缩的区块大小设计，以应对瞬时的网络拥堵。\n\n虽然每区块的基础费用是固定的，但是它会根据网络的拥堵情况，调节每区块的基础费用，它有一个公式用来调整基础费用的上升或下降。它会根据上一个区块所用的gas和目标gas（gas target，也就是之前的gas limit）来调整。当区块高于目标gas价格，基础费用上升，当区块低于目标gas价格，基础费用下降。\n\n除了基础费用，还可以有打赏费用（小费）。在拥堵时，小费用于激励矿工将用户交易打包进区块。交易可以指定基础费用和小费的上限。这一提案还包括过渡性方案。开始时，区块的一半保留原来的竞价机制，一半采用新的费用机制，并逐渐过渡到新的方案。\n\n这里有几个关键点：\n\n费用结构\n\n基本费用+小费\n\n费用流向\n\n基本费用会被销毁，矿工无法获得；矿工的收益主要是新增区块奖励+小费\n\n弹性区块\n\n可伸缩区块用以应对网络拥堵，同时基本费用也根据拥堵情况进行调整。\n\n![eip1559提案](eip1559.jpeg)\n\n## 为什么要搞EIP-1559？\n对发生在以太坊上的交易，目前的收费方案是拍卖机制。由用户出价，矿工选择出价最高的交易，将其打包进区块。这种方式看上去简单且高效，不过也有问题：\n\n竞价的低效率\n\n以太坊上的最低出价可能会存在极大的差异。这导致出价效率低下。用户发送交易时选择出价的费用上限，而矿工选择最高出价的交易。对用户来说，出价多少合适是很难预估的，即便有复杂的费用预估算法，也不太可能做到很好的估算，经常会出现超额费用支付的情况。\n\n造成延误\n\n由于每区块gas limit的限制和交易量的自然波动，这会导致交易可能需要等待几个区块才能被打包进入。对用户来说，可能会造成延误。而EIP-1559提出弹性区块的机制，可以让一个区块变大，而下一个区块变小，实现更长期的平均区块大小限制，允许不同区块存在一定的大小差异。这解决了当前一些区块过满，而一些区块使用过少的现状。\n\n安全性\n\n随着区块奖励的减少（如比特币和Zcash），未来交易费成为奖励矿工的主要来源。因此需要有足够的交易规模来支撑网络的安全，同时还可能会导致矿工的自私挖矿等问题，产生一些不稳定因素。\n\nEIP-1559为了解决上述问题，它改变了付费结构和付费流向：将交易费用分为基本费用+小费，同时基本费用被销毁，矿工无法获得，矿工可以获得打赏费用，也可以获得新增发的区块奖励，从而减少矿工操纵交易费用的动机，并让包括矿工在内各种参与者有机会获益。\n\n此外，在EIP-1559的设计中，当网络超出每区块目标gas使用量，基本费用会在接下来的区块增加，而当容量低于目标gas使用量，则下降。因此，gas费用的变化是根据需求情况进行调整的，其区块之间的费用差异是可预测的。\n\n这对于用户体验来说会有提升。EIP-1559实施之前的以太坊采用的是类似于比特币的第一价格拍卖机制（First Price Auctions），其缺点之一是需要进行费用估算。而EIP-1559则对所有交易尽可能实施相同的费率。用户需要决定的是是否支付费用，而不用太多考虑出价多少。钱包可以帮助用户预测基本费用以及自动设置一点打赏费用，减少了大多数用户手动调整gas费用的操作。当然，如果用户手动设置交易费用上限也是可以的,用户通过手动设置费用上限可以限制其最高成本。\n\n除了用户体验提升，还可以提升以太坊的安全性以及解决经济抽象等问题。\n\n由于矿工在交易费用中仅仅捕获打赏费用，而基本费用被协议销毁，这样可以消除矿工操作费用以获得更多费用的动机。更重要的是，它改变了ETH的价值捕获机制。之前的ETH更多代表了以太坊上价值流通和价值存储，本身并没有捕获费用价值。\n\n而基本费用改变了这一局面。基本费用的捕获意味着ETH开始捕获以太坊网络的交易费用，而交易费用的多少取决于以太坊上交易规模。随着以太坊交易规模的增大，ETH可以捕获的费用就越多。\n\n同时，在EIP-1559实施前的以太坊交易费用支付中，并不是一定得用ETH支付。而实施之后基本费用是使用ETH支付，这也在一定程度上解决了之前讨论的“经济抽象”的问题。所谓的“经济抽象”，就是说用户可以使用稳定币或其他代币支付手续费。这不仅会威胁原生代币ETH在网络中的位置，而且也不利于网络安全。EIP-1559要求消耗特定数量的ETH，会增加经济抽象的难度。\n\n如果以太坊上的交易规模足够大，那么它可以捕获大量的基本费用，这些用ETH支付的基本费用会被销毁，这会降低ETH的通胀率，甚至可能通缩的情况（假设增发低于销毁）。这有利于ETH的价值支撑。\n\n从安全性来看，在比特币的激励中，当区块补贴完毕，它主要依靠交易费用来维持其安全，这种模式如何获得可持续目前还是存在争议的。而以太坊通过将交易手续费销毁，并将矿工激励通过区块奖励持续运作下去。这是一个更为弹性的机制。由于交易手续费销毁，价值转移到ETH上，以太坊采用ETH区块奖励对矿工进行补贴，这为以太坊安全的长期可持续提供了基础。\n\n## EIP-1559对ETH价值的支撑\n通过过去一段时间的实践，我们可以看到单纯挖矿代币的价值支撑存在很大的问题。有些挖矿奖励代币，或者说是所谓的“治理代币”，有很大的抛压，但价值支撑不够，最终导致币价下跌，激励下降，甚至出现了不少死亡螺旋的代币。\n\n有些头部DEX交易量很好，流动性也不错，协议的年化手续费用也非常高，基本面一片大好，但同样也无法支撑起价值。因为它们也同样面临“挖卖提”的情况。其代币本身只是“治理代币”，没有捕获协议价值。目前的协议费用中，绝大部分收益依然没有融入到代币中来，而是直接分给LP。这意味着代币和协议的价值成长并没有达成高度融合。这就是在当前情况下它们的价值无法支撑的原因所在。当然，未来这种局面可能会随着治理的深入发生改变，因为治理本身可以改变这个局面。目前的治理代币更多是代表了未来的可能性。\n\nEIP-1559对ETH的影响也是类似的。EIP-1559实施之前的ETH并没有捕获到以太坊网络费用的价值，这导致ETH在泡沫破灭时完全无法实现价值的支撑，从泡沫时最高的近1500美元跌至底点的100多美元。\n\n而EIP-1559之前的ETH将捕获以太坊网络的费用价值，截止到蓝狐笔记写稿时，以太坊的年化网络费用超过了13亿美元，这是一笔不小的费用。\n\n这意味着，未来ETH除了作为价值存储和价值媒介之外，还可以真正捕获到大规模的价值。就其当前价值捕获的规模看，它是目前所有公链中最强势的，这让ETH在未来有更坚实的价值支撑。\n\n","source":"_posts/eip1559.md","raw":"---\ntitle: 关于EIP-1559协议\ntop: false\ncover: false\ntoc: true\nmathjax: true\ndate: 2021-10-24 10:57:13\npassword:\nsummary:\ntags:\n- 以太坊\ncategories:\n- 区块链\n---\n\n# 写在前面\n比特币以一种全新的思路重建了货币体系，这个传统情况下被认为一定需要权威中心（政府）背书和管理的核心金融基础设施，以太坊则带来了由加密货币到去中心化应用生态爆发，从ICO到Defi，再到NFT，区块链已经越来越接近真实生活。秉承去中心化理念的全面应用，以太坊升级也是去中心化的，任何一个feature改进或升级都需要参与者共同确认，因为EIP（以太坊改进提案）应运而生，而EIP1559则可视为以太坊最重要的提案之一，因为它的目的是改革ETH的Gas费定价机制，让用户以合理可接受的成本使用以太坊。\n\n# 以太坊提案EIP-1559\nEIP-1559是以太坊的重要提案，它对未来ETH的价值捕获、用户体验、安全性等方面都会产生重大影响。中短期内，EIP-1559提案对ETH的价格冲击力可能仅次于ETH的PoS，从长期看，可能会有更持久的影响力。\n\n## 什么是EIP-1559？\nEIP-1559本质上是关于以太坊网络交易定价机制的解决方案，它包括每区块网络费用的固定部分base fee（也就是基础费用，会被销毁，矿工收不到这笔费用），同时还有动态的可伸缩的区块大小设计，以应对瞬时的网络拥堵。\n\n虽然每区块的基础费用是固定的，但是它会根据网络的拥堵情况，调节每区块的基础费用，它有一个公式用来调整基础费用的上升或下降。它会根据上一个区块所用的gas和目标gas（gas target，也就是之前的gas limit）来调整。当区块高于目标gas价格，基础费用上升，当区块低于目标gas价格，基础费用下降。\n\n除了基础费用，还可以有打赏费用（小费）。在拥堵时，小费用于激励矿工将用户交易打包进区块。交易可以指定基础费用和小费的上限。这一提案还包括过渡性方案。开始时，区块的一半保留原来的竞价机制，一半采用新的费用机制，并逐渐过渡到新的方案。\n\n这里有几个关键点：\n\n费用结构\n\n基本费用+小费\n\n费用流向\n\n基本费用会被销毁，矿工无法获得；矿工的收益主要是新增区块奖励+小费\n\n弹性区块\n\n可伸缩区块用以应对网络拥堵，同时基本费用也根据拥堵情况进行调整。\n\n![eip1559提案](eip1559.jpeg)\n\n## 为什么要搞EIP-1559？\n对发生在以太坊上的交易，目前的收费方案是拍卖机制。由用户出价，矿工选择出价最高的交易，将其打包进区块。这种方式看上去简单且高效，不过也有问题：\n\n竞价的低效率\n\n以太坊上的最低出价可能会存在极大的差异。这导致出价效率低下。用户发送交易时选择出价的费用上限，而矿工选择最高出价的交易。对用户来说，出价多少合适是很难预估的，即便有复杂的费用预估算法，也不太可能做到很好的估算，经常会出现超额费用支付的情况。\n\n造成延误\n\n由于每区块gas limit的限制和交易量的自然波动，这会导致交易可能需要等待几个区块才能被打包进入。对用户来说，可能会造成延误。而EIP-1559提出弹性区块的机制，可以让一个区块变大，而下一个区块变小，实现更长期的平均区块大小限制，允许不同区块存在一定的大小差异。这解决了当前一些区块过满，而一些区块使用过少的现状。\n\n安全性\n\n随着区块奖励的减少（如比特币和Zcash），未来交易费成为奖励矿工的主要来源。因此需要有足够的交易规模来支撑网络的安全，同时还可能会导致矿工的自私挖矿等问题，产生一些不稳定因素。\n\nEIP-1559为了解决上述问题，它改变了付费结构和付费流向：将交易费用分为基本费用+小费，同时基本费用被销毁，矿工无法获得，矿工可以获得打赏费用，也可以获得新增发的区块奖励，从而减少矿工操纵交易费用的动机，并让包括矿工在内各种参与者有机会获益。\n\n此外，在EIP-1559的设计中，当网络超出每区块目标gas使用量，基本费用会在接下来的区块增加，而当容量低于目标gas使用量，则下降。因此，gas费用的变化是根据需求情况进行调整的，其区块之间的费用差异是可预测的。\n\n这对于用户体验来说会有提升。EIP-1559实施之前的以太坊采用的是类似于比特币的第一价格拍卖机制（First Price Auctions），其缺点之一是需要进行费用估算。而EIP-1559则对所有交易尽可能实施相同的费率。用户需要决定的是是否支付费用，而不用太多考虑出价多少。钱包可以帮助用户预测基本费用以及自动设置一点打赏费用，减少了大多数用户手动调整gas费用的操作。当然，如果用户手动设置交易费用上限也是可以的,用户通过手动设置费用上限可以限制其最高成本。\n\n除了用户体验提升，还可以提升以太坊的安全性以及解决经济抽象等问题。\n\n由于矿工在交易费用中仅仅捕获打赏费用，而基本费用被协议销毁，这样可以消除矿工操作费用以获得更多费用的动机。更重要的是，它改变了ETH的价值捕获机制。之前的ETH更多代表了以太坊上价值流通和价值存储，本身并没有捕获费用价值。\n\n而基本费用改变了这一局面。基本费用的捕获意味着ETH开始捕获以太坊网络的交易费用，而交易费用的多少取决于以太坊上交易规模。随着以太坊交易规模的增大，ETH可以捕获的费用就越多。\n\n同时，在EIP-1559实施前的以太坊交易费用支付中，并不是一定得用ETH支付。而实施之后基本费用是使用ETH支付，这也在一定程度上解决了之前讨论的“经济抽象”的问题。所谓的“经济抽象”，就是说用户可以使用稳定币或其他代币支付手续费。这不仅会威胁原生代币ETH在网络中的位置，而且也不利于网络安全。EIP-1559要求消耗特定数量的ETH，会增加经济抽象的难度。\n\n如果以太坊上的交易规模足够大，那么它可以捕获大量的基本费用，这些用ETH支付的基本费用会被销毁，这会降低ETH的通胀率，甚至可能通缩的情况（假设增发低于销毁）。这有利于ETH的价值支撑。\n\n从安全性来看，在比特币的激励中，当区块补贴完毕，它主要依靠交易费用来维持其安全，这种模式如何获得可持续目前还是存在争议的。而以太坊通过将交易手续费销毁，并将矿工激励通过区块奖励持续运作下去。这是一个更为弹性的机制。由于交易手续费销毁，价值转移到ETH上，以太坊采用ETH区块奖励对矿工进行补贴，这为以太坊安全的长期可持续提供了基础。\n\n## EIP-1559对ETH价值的支撑\n通过过去一段时间的实践，我们可以看到单纯挖矿代币的价值支撑存在很大的问题。有些挖矿奖励代币，或者说是所谓的“治理代币”，有很大的抛压，但价值支撑不够，最终导致币价下跌，激励下降，甚至出现了不少死亡螺旋的代币。\n\n有些头部DEX交易量很好，流动性也不错，协议的年化手续费用也非常高，基本面一片大好，但同样也无法支撑起价值。因为它们也同样面临“挖卖提”的情况。其代币本身只是“治理代币”，没有捕获协议价值。目前的协议费用中，绝大部分收益依然没有融入到代币中来，而是直接分给LP。这意味着代币和协议的价值成长并没有达成高度融合。这就是在当前情况下它们的价值无法支撑的原因所在。当然，未来这种局面可能会随着治理的深入发生改变，因为治理本身可以改变这个局面。目前的治理代币更多是代表了未来的可能性。\n\nEIP-1559对ETH的影响也是类似的。EIP-1559实施之前的ETH并没有捕获到以太坊网络费用的价值，这导致ETH在泡沫破灭时完全无法实现价值的支撑，从泡沫时最高的近1500美元跌至底点的100多美元。\n\n而EIP-1559之前的ETH将捕获以太坊网络的费用价值，截止到蓝狐笔记写稿时，以太坊的年化网络费用超过了13亿美元，这是一笔不小的费用。\n\n这意味着，未来ETH除了作为价值存储和价值媒介之外，还可以真正捕获到大规模的价值。就其当前价值捕获的规模看，它是目前所有公链中最强势的，这让ETH在未来有更坚实的价值支撑。\n\n","slug":"eip1559","published":1,"updated":"2021-10-24T03:20:44.157Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl10m9kgj0005duwgrmhiuo26","content":"<h1 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h1><p>比特币以一种全新的思路重建了货币体系，这个传统情况下被认为一定需要权威中心（政府）背书和管理的核心金融基础设施，以太坊则带来了由加密货币到去中心化应用生态爆发，从ICO到Defi，再到NFT，区块链已经越来越接近真实生活。秉承去中心化理念的全面应用，以太坊升级也是去中心化的，任何一个feature改进或升级都需要参与者共同确认，因为EIP（以太坊改进提案）应运而生，而EIP1559则可视为以太坊最重要的提案之一，因为它的目的是改革ETH的Gas费定价机制，让用户以合理可接受的成本使用以太坊。</p>\n<h1 id=\"以太坊提案EIP-1559\"><a href=\"#以太坊提案EIP-1559\" class=\"headerlink\" title=\"以太坊提案EIP-1559\"></a>以太坊提案EIP-1559</h1><p>EIP-1559是以太坊的重要提案，它对未来ETH的价值捕获、用户体验、安全性等方面都会产生重大影响。中短期内，EIP-1559提案对ETH的价格冲击力可能仅次于ETH的PoS，从长期看，可能会有更持久的影响力。</p>\n<h2 id=\"什么是EIP-1559？\"><a href=\"#什么是EIP-1559？\" class=\"headerlink\" title=\"什么是EIP-1559？\"></a>什么是EIP-1559？</h2><p>EIP-1559本质上是关于以太坊网络交易定价机制的解决方案，它包括每区块网络费用的固定部分base fee（也就是基础费用，会被销毁，矿工收不到这笔费用），同时还有动态的可伸缩的区块大小设计，以应对瞬时的网络拥堵。</p>\n<p>虽然每区块的基础费用是固定的，但是它会根据网络的拥堵情况，调节每区块的基础费用，它有一个公式用来调整基础费用的上升或下降。它会根据上一个区块所用的gas和目标gas（gas target，也就是之前的gas limit）来调整。当区块高于目标gas价格，基础费用上升，当区块低于目标gas价格，基础费用下降。</p>\n<p>除了基础费用，还可以有打赏费用（小费）。在拥堵时，小费用于激励矿工将用户交易打包进区块。交易可以指定基础费用和小费的上限。这一提案还包括过渡性方案。开始时，区块的一半保留原来的竞价机制，一半采用新的费用机制，并逐渐过渡到新的方案。</p>\n<p>这里有几个关键点：</p>\n<p>费用结构</p>\n<p>基本费用+小费</p>\n<p>费用流向</p>\n<p>基本费用会被销毁，矿工无法获得；矿工的收益主要是新增区块奖励+小费</p>\n<p>弹性区块</p>\n<p>可伸缩区块用以应对网络拥堵，同时基本费用也根据拥堵情况进行调整。</p>\n<p><img src=\"eip1559.jpeg\" alt=\"eip1559提案\"></p>\n<h2 id=\"为什么要搞EIP-1559？\"><a href=\"#为什么要搞EIP-1559？\" class=\"headerlink\" title=\"为什么要搞EIP-1559？\"></a>为什么要搞EIP-1559？</h2><p>对发生在以太坊上的交易，目前的收费方案是拍卖机制。由用户出价，矿工选择出价最高的交易，将其打包进区块。这种方式看上去简单且高效，不过也有问题：</p>\n<p>竞价的低效率</p>\n<p>以太坊上的最低出价可能会存在极大的差异。这导致出价效率低下。用户发送交易时选择出价的费用上限，而矿工选择最高出价的交易。对用户来说，出价多少合适是很难预估的，即便有复杂的费用预估算法，也不太可能做到很好的估算，经常会出现超额费用支付的情况。</p>\n<p>造成延误</p>\n<p>由于每区块gas limit的限制和交易量的自然波动，这会导致交易可能需要等待几个区块才能被打包进入。对用户来说，可能会造成延误。而EIP-1559提出弹性区块的机制，可以让一个区块变大，而下一个区块变小，实现更长期的平均区块大小限制，允许不同区块存在一定的大小差异。这解决了当前一些区块过满，而一些区块使用过少的现状。</p>\n<p>安全性</p>\n<p>随着区块奖励的减少（如比特币和Zcash），未来交易费成为奖励矿工的主要来源。因此需要有足够的交易规模来支撑网络的安全，同时还可能会导致矿工的自私挖矿等问题，产生一些不稳定因素。</p>\n<p>EIP-1559为了解决上述问题，它改变了付费结构和付费流向：将交易费用分为基本费用+小费，同时基本费用被销毁，矿工无法获得，矿工可以获得打赏费用，也可以获得新增发的区块奖励，从而减少矿工操纵交易费用的动机，并让包括矿工在内各种参与者有机会获益。</p>\n<p>此外，在EIP-1559的设计中，当网络超出每区块目标gas使用量，基本费用会在接下来的区块增加，而当容量低于目标gas使用量，则下降。因此，gas费用的变化是根据需求情况进行调整的，其区块之间的费用差异是可预测的。</p>\n<p>这对于用户体验来说会有提升。EIP-1559实施之前的以太坊采用的是类似于比特币的第一价格拍卖机制（First Price Auctions），其缺点之一是需要进行费用估算。而EIP-1559则对所有交易尽可能实施相同的费率。用户需要决定的是是否支付费用，而不用太多考虑出价多少。钱包可以帮助用户预测基本费用以及自动设置一点打赏费用，减少了大多数用户手动调整gas费用的操作。当然，如果用户手动设置交易费用上限也是可以的,用户通过手动设置费用上限可以限制其最高成本。</p>\n<p>除了用户体验提升，还可以提升以太坊的安全性以及解决经济抽象等问题。</p>\n<p>由于矿工在交易费用中仅仅捕获打赏费用，而基本费用被协议销毁，这样可以消除矿工操作费用以获得更多费用的动机。更重要的是，它改变了ETH的价值捕获机制。之前的ETH更多代表了以太坊上价值流通和价值存储，本身并没有捕获费用价值。</p>\n<p>而基本费用改变了这一局面。基本费用的捕获意味着ETH开始捕获以太坊网络的交易费用，而交易费用的多少取决于以太坊上交易规模。随着以太坊交易规模的增大，ETH可以捕获的费用就越多。</p>\n<p>同时，在EIP-1559实施前的以太坊交易费用支付中，并不是一定得用ETH支付。而实施之后基本费用是使用ETH支付，这也在一定程度上解决了之前讨论的“经济抽象”的问题。所谓的“经济抽象”，就是说用户可以使用稳定币或其他代币支付手续费。这不仅会威胁原生代币ETH在网络中的位置，而且也不利于网络安全。EIP-1559要求消耗特定数量的ETH，会增加经济抽象的难度。</p>\n<p>如果以太坊上的交易规模足够大，那么它可以捕获大量的基本费用，这些用ETH支付的基本费用会被销毁，这会降低ETH的通胀率，甚至可能通缩的情况（假设增发低于销毁）。这有利于ETH的价值支撑。</p>\n<p>从安全性来看，在比特币的激励中，当区块补贴完毕，它主要依靠交易费用来维持其安全，这种模式如何获得可持续目前还是存在争议的。而以太坊通过将交易手续费销毁，并将矿工激励通过区块奖励持续运作下去。这是一个更为弹性的机制。由于交易手续费销毁，价值转移到ETH上，以太坊采用ETH区块奖励对矿工进行补贴，这为以太坊安全的长期可持续提供了基础。</p>\n<h2 id=\"EIP-1559对ETH价值的支撑\"><a href=\"#EIP-1559对ETH价值的支撑\" class=\"headerlink\" title=\"EIP-1559对ETH价值的支撑\"></a>EIP-1559对ETH价值的支撑</h2><p>通过过去一段时间的实践，我们可以看到单纯挖矿代币的价值支撑存在很大的问题。有些挖矿奖励代币，或者说是所谓的“治理代币”，有很大的抛压，但价值支撑不够，最终导致币价下跌，激励下降，甚至出现了不少死亡螺旋的代币。</p>\n<p>有些头部DEX交易量很好，流动性也不错，协议的年化手续费用也非常高，基本面一片大好，但同样也无法支撑起价值。因为它们也同样面临“挖卖提”的情况。其代币本身只是“治理代币”，没有捕获协议价值。目前的协议费用中，绝大部分收益依然没有融入到代币中来，而是直接分给LP。这意味着代币和协议的价值成长并没有达成高度融合。这就是在当前情况下它们的价值无法支撑的原因所在。当然，未来这种局面可能会随着治理的深入发生改变，因为治理本身可以改变这个局面。目前的治理代币更多是代表了未来的可能性。</p>\n<p>EIP-1559对ETH的影响也是类似的。EIP-1559实施之前的ETH并没有捕获到以太坊网络费用的价值，这导致ETH在泡沫破灭时完全无法实现价值的支撑，从泡沫时最高的近1500美元跌至底点的100多美元。</p>\n<p>而EIP-1559之前的ETH将捕获以太坊网络的费用价值，截止到蓝狐笔记写稿时，以太坊的年化网络费用超过了13亿美元，这是一笔不小的费用。</p>\n<p>这意味着，未来ETH除了作为价值存储和价值媒介之外，还可以真正捕获到大规模的价值。就其当前价值捕获的规模看，它是目前所有公链中最强势的，这让ETH在未来有更坚实的价值支撑。</p>\n","site":{"data":{"musics":[{"name":"夜曲","artist":"周杰伦","url":"/medias/music/yequ.mp3","cover":"/medias/music/avatars/yequ.jpg"},{"name":"一路向北","artist":"周杰伦","url":"/medias/music/yiluxiangbei.mp3","cover":"/medias/music/avatars/yiluxiangbei.jpg"},{"name":"来自天堂的魔鬼","artist":"邓紫棋","url":"/medias/music/tiantangdemogui.mp3","cover":"/medias/music/avatars/tiantangdemogui.jpg"},{"name":"倒数","artist":"邓紫棋","url":"/medias/music/daoshu.mp3","cover":"/medias/music/avatars/daoshu.jpg"}],"friends":[{"name":"知乎专栏","url":"https://zhuanlan.zhihu.com/godweiyang","title":"访问主页","introduction":"算法码上来","avatar":"/medias/avatars/myzhihu.png"},{"name":"火山翻译","url":"https://translate.volcengine.cn","title":"访问主页","introduction":"提供全球领先的翻译技术与服务","avatar":"/medias/avatars/bytedtrans.png"},{"name":"AntNLP","url":"https://antnlp.org","title":"访问主页","introduction":"华东师范大学自然语言处理实验室欢迎您的加入！","avatar":"/medias/avatars/antnlp.ico"},{"name":"IDS²","url":"https://www.smart-dependable-sino-europe.institute","title":"访问主页","introduction":"中欧可靠智能软件联合实验室欢迎您的加入！","avatar":"/medias/avatars/ids2.jpg"},{"name":"孙长志","url":"https://www.czsun.site","title":"访问主页","introduction":"AntNLP博士大师兄！","avatar":"/medias/avatars/sunchangzhi.jpg"},{"name":"纪焘","url":"https://taoji.site","title":"访问主页","introduction":"AntNLP博士带明星！","avatar":"/medias/avatars/jitao.jpg"},{"name":"杜雨沛","url":"https://yupei-du.github.io/","title":"访问主页","introduction":"AntNLP唱跳RAP打篮球全能师兄！","avatar":"/medias/avatars/duyupei.jpg"},{"name":"0xbirdpwn","url":"https://0xbird.top/","title":"访问主页","introduction":"十步杀一人，千里不留行，事了拂衣去，深藏功与名。","avatar":"/medias/avatars/0xbird.png"},{"name":"李佳倩的博客","url":"https://jiaqianlee.com/","title":"访问主页","introduction":"一只小白的成长之路！","avatar":"/medias/avatars/lijiaqian.png"},{"name":"kewlgrl","url":"https://blog.csdn.net/MIKASA3","title":"访问主页","introduction":"好大一只咸鱼哇","avatar":"/medias/avatars/kewlgrl.jpg"},{"name":"Think Far Blog","url":"https://wuli749826.github.io","title":"访问主页","introduction":"我曾经拥有这一切，转眼都飘散如烟。","avatar":"/medias/avatars/gsy.jpg"},{"name":"望城风景","url":"https://www.itaowei.cn/","title":"访问主页","introduction":"用力活过的日子，才配得上此刻的缅怀。","avatar":"/medias/avatars/taowei.jpg"},{"name":"jxtxzzw空间","url":"https://www.jxtxzzw.com/wordpress","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/zzw.jpg"},{"name":"DREAMWINGS","url":"https://www.dreamwings.cn/","title":"访问主页","introduction":"夢はそこでないと、私の権利である","avatar":"/medias/avatars/qianqian.png"},{"name":"ElaineLv","url":"https://www.elainelv.com/","title":"访问主页","introduction":"Stay hungry, Stay foolish","avatar":"/medias/avatars/lyn-draw.jpg"},{"name":"Subject_No_i","url":"https://subjectnoi.github.io","title":"访问主页","introduction":"在原七海 中野三玖 中野二乃 樱岛麻衣的老公","avatar":"/medias/avatars/lzh.png"},{"name":"菁菁","url":"https://angericky.github.io/","title":"访问主页","introduction":"做什么都是因为喜欢","avatar":"/medias/avatars/jingjing.jpg"},{"name":"Sweet-Q","url":"https://sweet-q.github.io","title":"访问主页","introduction":"华东师范大学数学系","avatar":"/medias/avatars/babyq.png"},{"name":"伟大的蚊子","url":"https://www.cnblogs.com/cww97/","title":"访问主页","introduction":"鼓楼的夜晚时间匆匆","avatar":"/medias/avatars/cww97.jpg"},{"name":"Fun4wut","url":"https://blog.fun4go.top","title":"访问主页","introduction":"菜鸡欢迎大佬的光顾","avatar":"/medias/avatars/fun4go.png"},{"name":"Hael Chan","url":"https://haelchan.me/","title":"访问主页","introduction":"浙江大学 & NLP & ML","avatar":"/medias/avatars/hael.jpg"},{"name":"happygirlzt","url":"https://www.happygirlzt.com","title":"访问主页","introduction":"A Backend Engineer","avatar":"/medias/avatars/zhangting.jpg"},{"name":"星空无限","url":"https://liyangzone.com","title":"访问主页","introduction":"前端开发，死飞大佬。分享技术，分享生活。","avatar":"/medias/avatars/liyangzone.jpg"},{"name":"Mashiro","url":"https://2heng.xin/","title":"访问主页","introduction":"樱花庄的白猫","avatar":"/medias/avatars/mashiro.jpg"},{"name":"hzwer","url":"https://hzwer.com/","title":"访问主页","introduction":"北京大学计算机系","avatar":"/medias/avatars/hzwer.jpg"},{"name":"MPY634","url":"https://mpy634.cn/","title":"访问主页","introduction":"摸鱼，永无止境。","avatar":"/medias/avatars/mpy634.png"},{"name":"徐铭辰的博客","url":"https://michaelxucs.com","title":"访问主页","introduction":"埃克塞特大学计算机系","avatar":"/medias/avatars/michael.jpg"},{"name":"Mizunashi","url":"https://mizunashi.me","title":"访问主页","introduction":"欢迎大佬们来玩","avatar":"/medias/avatars/mizunashi.png"},{"name":"xuzhongyou","url":"https://xuzhongyou.github.io/","title":"访问主页","introduction":"我哽咽道：你是赵默笙，可我不是何以琛啊。","avatar":"/medias/avatars/xuzhongyou.jpg"},{"name":"zerol","url":"https://zerol.me/","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/huaji.jpg"},{"name":"Zhang Yi","url":"https://codewithzhangyi.com/","title":"访问主页","introduction":"Coding is the New Sexy","avatar":"/medias/avatars/zhangyi.jpg"},{"name":"科学空间","url":"https://spaces.ac.cn/","title":"访问主页","introduction":"中山大学基础数学研究生","avatar":"/medias/avatars/spacesac.png"},{"name":"lucifer的博客","url":"https://lucifer.ren/blog/","title":"访问主页","introduction":"一个脑洞很大的程序员。","avatar":"https://tva1.sinaimg.cn/large/006tNbRwly1ga7ognflh9j30b40b4q3w.jpg"},{"name":"钱栋伟","url":"https://sscjwdyzdw.club","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/qiandongwei.jpg"},{"name":"CJ Blog","url":"https://chrisju.cn/","title":"访问主页","introduction":"Failing means foolish.","avatar":"/medias/avatars/mouse.jpg"},{"name":"Tawn","url":"https://tawn0000.github.io/","title":"访问主页","introduction":"JNU ACMer","avatar":"/medias/avatars/tawn.jpg"},{"name":"Master X","url":"https://masterx.top/","title":"访问主页","introduction":"ECNU&ML&DL","avatar":"/medias/avatars/masterx.jpg"},{"name":"分享客","url":"https://sharerdiary.com/","title":"访问主页","introduction":"爱生活，爱分享！","avatar":"/medias/avatars/yezijie.png"},{"name":"taotao","url":"https://zouzhitao.github.io","title":"访问主页","introduction":"taotao 码字的地方","avatar":"/medias/avatars/taotao.jpg"},{"name":"Xiejiadong","url":"https://xiejiadong.com","title":"访问主页","introduction":"Xiejiadong's blog","avatar":"/medias/avatars/xiejiadong.jpg"},{"name":"飞吧","url":"https://fei.bar","title":"访问主页","introduction":"啓飞的个人博客","avatar":"/medias/avatars/feibar.png"},{"name":"ajin","url":"https://ajin.cloud","title":"访问主页","introduction":"Always be enthusiastic","avatar":"/medias/avatars/ajin.jpg"},{"name":"Hiyoung","url":"https://hiyoungai.com/","title":"访问主页","introduction":"宠辱不惊，看庭前花开花落；去留无意，望天空云卷云舒。","avatar":"https://cdn.jsdelivr.net/gh/hiyoung123/cdn/img/avatar.jpg"},{"name":"无言的博客","url":"https://www.yzplove.top","title":"访问主页","introduction":"代码真是越敲越香","avatar":"https://cdn.jsdelivr.net/gh/yzp-99/yzp-99.github.io/medias/avatars/me.jpg"},{"name":"Naixin Zhang","url":"https://naixinzhang.github.io/","title":"访问主页","introduction":"Econ Master | Data Analyst/scientist Candidate","avatar":"https://naixinzhang.github.io/medias/avatars/avatar.jpg"},{"name":"帅张的梦呓","url":"https://ishuaizhang.com","title":"访问主页","introduction":"XDUer","avatar":"https://ishuaizhang.com/medias/avatars/avatar.jpg"},{"name":"Gatsby’s blog","url":"https://a347807131.github.io/","title":"访问主页","introduction":"Nothing perfect, Noting special.","avatar":"https://a347807131.github.io/medias/avatar.gif"},{"name":"宇宙湾","url":"https://yuzhouwan.com/","title":"访问主页","introduction":"主要是大数据和人工智能的原创文章。","avatar":"https://yuzhouwan.com/yuzhouwan_logo_128x128.ico"},{"name":"Dotnet9的博客","url":"https://dotnet9.com","title":"访问主页","introduction":"一个热衷于互联网分享精神的个人博客站点","avatar":"https://img.dotnet9.com/logo-foot.png"},{"name":"Macchiato","url":"https://hcj123123.oschina.io","title":"访问主页","introduction":"java学习者","avatar":"https://y.gtimg.cn/music/photo_new/T002R300x300M000002qD7gF3fW0JL_1.jpg?max_age=2592000"},{"name":"过客~励む","url":"https://yafine-blog.cn","title":"访问主页","introduction":"你现在的努力，是为了以后有更多的选择。","avatar":"https://yafine-blog.cn/medias/avatar.jpg"},{"name":"meteorsh","url":"https://weisenhui.top","title":"访问主页","introduction":"Data Science & Engineering","avatar":"https://weisenhui.top/medias/avatar.jpg"},{"name":"Kuroko","url":"https://kuroko.info","title":"访问主页","introduction":"浓烟下的诗歌电台","avatar":"http://kuroko.info/wp-content/uploads/2020/11/2.jpg"}]}},"excerpt":"","more":"<h1 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h1><p>比特币以一种全新的思路重建了货币体系，这个传统情况下被认为一定需要权威中心（政府）背书和管理的核心金融基础设施，以太坊则带来了由加密货币到去中心化应用生态爆发，从ICO到Defi，再到NFT，区块链已经越来越接近真实生活。秉承去中心化理念的全面应用，以太坊升级也是去中心化的，任何一个feature改进或升级都需要参与者共同确认，因为EIP（以太坊改进提案）应运而生，而EIP1559则可视为以太坊最重要的提案之一，因为它的目的是改革ETH的Gas费定价机制，让用户以合理可接受的成本使用以太坊。</p>\n<h1 id=\"以太坊提案EIP-1559\"><a href=\"#以太坊提案EIP-1559\" class=\"headerlink\" title=\"以太坊提案EIP-1559\"></a>以太坊提案EIP-1559</h1><p>EIP-1559是以太坊的重要提案，它对未来ETH的价值捕获、用户体验、安全性等方面都会产生重大影响。中短期内，EIP-1559提案对ETH的价格冲击力可能仅次于ETH的PoS，从长期看，可能会有更持久的影响力。</p>\n<h2 id=\"什么是EIP-1559？\"><a href=\"#什么是EIP-1559？\" class=\"headerlink\" title=\"什么是EIP-1559？\"></a>什么是EIP-1559？</h2><p>EIP-1559本质上是关于以太坊网络交易定价机制的解决方案，它包括每区块网络费用的固定部分base fee（也就是基础费用，会被销毁，矿工收不到这笔费用），同时还有动态的可伸缩的区块大小设计，以应对瞬时的网络拥堵。</p>\n<p>虽然每区块的基础费用是固定的，但是它会根据网络的拥堵情况，调节每区块的基础费用，它有一个公式用来调整基础费用的上升或下降。它会根据上一个区块所用的gas和目标gas（gas target，也就是之前的gas limit）来调整。当区块高于目标gas价格，基础费用上升，当区块低于目标gas价格，基础费用下降。</p>\n<p>除了基础费用，还可以有打赏费用（小费）。在拥堵时，小费用于激励矿工将用户交易打包进区块。交易可以指定基础费用和小费的上限。这一提案还包括过渡性方案。开始时，区块的一半保留原来的竞价机制，一半采用新的费用机制，并逐渐过渡到新的方案。</p>\n<p>这里有几个关键点：</p>\n<p>费用结构</p>\n<p>基本费用+小费</p>\n<p>费用流向</p>\n<p>基本费用会被销毁，矿工无法获得；矿工的收益主要是新增区块奖励+小费</p>\n<p>弹性区块</p>\n<p>可伸缩区块用以应对网络拥堵，同时基本费用也根据拥堵情况进行调整。</p>\n<p><img src=\"eip1559.jpeg\" alt=\"eip1559提案\"></p>\n<h2 id=\"为什么要搞EIP-1559？\"><a href=\"#为什么要搞EIP-1559？\" class=\"headerlink\" title=\"为什么要搞EIP-1559？\"></a>为什么要搞EIP-1559？</h2><p>对发生在以太坊上的交易，目前的收费方案是拍卖机制。由用户出价，矿工选择出价最高的交易，将其打包进区块。这种方式看上去简单且高效，不过也有问题：</p>\n<p>竞价的低效率</p>\n<p>以太坊上的最低出价可能会存在极大的差异。这导致出价效率低下。用户发送交易时选择出价的费用上限，而矿工选择最高出价的交易。对用户来说，出价多少合适是很难预估的，即便有复杂的费用预估算法，也不太可能做到很好的估算，经常会出现超额费用支付的情况。</p>\n<p>造成延误</p>\n<p>由于每区块gas limit的限制和交易量的自然波动，这会导致交易可能需要等待几个区块才能被打包进入。对用户来说，可能会造成延误。而EIP-1559提出弹性区块的机制，可以让一个区块变大，而下一个区块变小，实现更长期的平均区块大小限制，允许不同区块存在一定的大小差异。这解决了当前一些区块过满，而一些区块使用过少的现状。</p>\n<p>安全性</p>\n<p>随着区块奖励的减少（如比特币和Zcash），未来交易费成为奖励矿工的主要来源。因此需要有足够的交易规模来支撑网络的安全，同时还可能会导致矿工的自私挖矿等问题，产生一些不稳定因素。</p>\n<p>EIP-1559为了解决上述问题，它改变了付费结构和付费流向：将交易费用分为基本费用+小费，同时基本费用被销毁，矿工无法获得，矿工可以获得打赏费用，也可以获得新增发的区块奖励，从而减少矿工操纵交易费用的动机，并让包括矿工在内各种参与者有机会获益。</p>\n<p>此外，在EIP-1559的设计中，当网络超出每区块目标gas使用量，基本费用会在接下来的区块增加，而当容量低于目标gas使用量，则下降。因此，gas费用的变化是根据需求情况进行调整的，其区块之间的费用差异是可预测的。</p>\n<p>这对于用户体验来说会有提升。EIP-1559实施之前的以太坊采用的是类似于比特币的第一价格拍卖机制（First Price Auctions），其缺点之一是需要进行费用估算。而EIP-1559则对所有交易尽可能实施相同的费率。用户需要决定的是是否支付费用，而不用太多考虑出价多少。钱包可以帮助用户预测基本费用以及自动设置一点打赏费用，减少了大多数用户手动调整gas费用的操作。当然，如果用户手动设置交易费用上限也是可以的,用户通过手动设置费用上限可以限制其最高成本。</p>\n<p>除了用户体验提升，还可以提升以太坊的安全性以及解决经济抽象等问题。</p>\n<p>由于矿工在交易费用中仅仅捕获打赏费用，而基本费用被协议销毁，这样可以消除矿工操作费用以获得更多费用的动机。更重要的是，它改变了ETH的价值捕获机制。之前的ETH更多代表了以太坊上价值流通和价值存储，本身并没有捕获费用价值。</p>\n<p>而基本费用改变了这一局面。基本费用的捕获意味着ETH开始捕获以太坊网络的交易费用，而交易费用的多少取决于以太坊上交易规模。随着以太坊交易规模的增大，ETH可以捕获的费用就越多。</p>\n<p>同时，在EIP-1559实施前的以太坊交易费用支付中，并不是一定得用ETH支付。而实施之后基本费用是使用ETH支付，这也在一定程度上解决了之前讨论的“经济抽象”的问题。所谓的“经济抽象”，就是说用户可以使用稳定币或其他代币支付手续费。这不仅会威胁原生代币ETH在网络中的位置，而且也不利于网络安全。EIP-1559要求消耗特定数量的ETH，会增加经济抽象的难度。</p>\n<p>如果以太坊上的交易规模足够大，那么它可以捕获大量的基本费用，这些用ETH支付的基本费用会被销毁，这会降低ETH的通胀率，甚至可能通缩的情况（假设增发低于销毁）。这有利于ETH的价值支撑。</p>\n<p>从安全性来看，在比特币的激励中，当区块补贴完毕，它主要依靠交易费用来维持其安全，这种模式如何获得可持续目前还是存在争议的。而以太坊通过将交易手续费销毁，并将矿工激励通过区块奖励持续运作下去。这是一个更为弹性的机制。由于交易手续费销毁，价值转移到ETH上，以太坊采用ETH区块奖励对矿工进行补贴，这为以太坊安全的长期可持续提供了基础。</p>\n<h2 id=\"EIP-1559对ETH价值的支撑\"><a href=\"#EIP-1559对ETH价值的支撑\" class=\"headerlink\" title=\"EIP-1559对ETH价值的支撑\"></a>EIP-1559对ETH价值的支撑</h2><p>通过过去一段时间的实践，我们可以看到单纯挖矿代币的价值支撑存在很大的问题。有些挖矿奖励代币，或者说是所谓的“治理代币”，有很大的抛压，但价值支撑不够，最终导致币价下跌，激励下降，甚至出现了不少死亡螺旋的代币。</p>\n<p>有些头部DEX交易量很好，流动性也不错，协议的年化手续费用也非常高，基本面一片大好，但同样也无法支撑起价值。因为它们也同样面临“挖卖提”的情况。其代币本身只是“治理代币”，没有捕获协议价值。目前的协议费用中，绝大部分收益依然没有融入到代币中来，而是直接分给LP。这意味着代币和协议的价值成长并没有达成高度融合。这就是在当前情况下它们的价值无法支撑的原因所在。当然，未来这种局面可能会随着治理的深入发生改变，因为治理本身可以改变这个局面。目前的治理代币更多是代表了未来的可能性。</p>\n<p>EIP-1559对ETH的影响也是类似的。EIP-1559实施之前的ETH并没有捕获到以太坊网络费用的价值，这导致ETH在泡沫破灭时完全无法实现价值的支撑，从泡沫时最高的近1500美元跌至底点的100多美元。</p>\n<p>而EIP-1559之前的ETH将捕获以太坊网络的费用价值，截止到蓝狐笔记写稿时，以太坊的年化网络费用超过了13亿美元，这是一笔不小的费用。</p>\n<p>这意味着，未来ETH除了作为价值存储和价值媒介之外，还可以真正捕获到大规模的价值。就其当前价值捕获的规模看，它是目前所有公链中最强势的，这让ETH在未来有更坚实的价值支撑。</p>\n"},{"title":"enjoy new world","top":false,"cover":false,"toc":true,"mathjax":true,"date":"2021-10-15T11:24:54.000Z","password":null,"summary":null,"_content":"\n> 关于写博客\n\n![](/medias/contact.jpg)\n\n## 为什么要创建自己的博客站\n***曾经对博客不屑，但到了该记录的年纪***","source":"_posts/enjoy-new-world.md","raw":"---\ntitle: enjoy new world\ntop: false\ncover: false\ntoc: true\nmathjax: true\ndate: 2021-10-15 19:24:54\npassword:\nsummary:\ntags:\ncategories:\n---\n\n> 关于写博客\n\n![](/medias/contact.jpg)\n\n## 为什么要创建自己的博客站\n***曾经对博客不屑，但到了该记录的年纪***","slug":"enjoy-new-world","published":1,"updated":"2021-10-18T10:35:37.550Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl10m9kgn0006duwgwi15ul1f","content":"<blockquote>\n<p>关于写博客</p>\n</blockquote>\n<p><img src=\"/medias/contact.jpg\" alt></p>\n<h2 id=\"为什么要创建自己的博客站\"><a href=\"#为什么要创建自己的博客站\" class=\"headerlink\" title=\"为什么要创建自己的博客站\"></a>为什么要创建自己的博客站</h2><p><strong><em>曾经对博客不屑，但到了该记录的年纪</em></strong></p>\n","site":{"data":{"musics":[{"name":"夜曲","artist":"周杰伦","url":"/medias/music/yequ.mp3","cover":"/medias/music/avatars/yequ.jpg"},{"name":"一路向北","artist":"周杰伦","url":"/medias/music/yiluxiangbei.mp3","cover":"/medias/music/avatars/yiluxiangbei.jpg"},{"name":"来自天堂的魔鬼","artist":"邓紫棋","url":"/medias/music/tiantangdemogui.mp3","cover":"/medias/music/avatars/tiantangdemogui.jpg"},{"name":"倒数","artist":"邓紫棋","url":"/medias/music/daoshu.mp3","cover":"/medias/music/avatars/daoshu.jpg"}],"friends":[{"name":"知乎专栏","url":"https://zhuanlan.zhihu.com/godweiyang","title":"访问主页","introduction":"算法码上来","avatar":"/medias/avatars/myzhihu.png"},{"name":"火山翻译","url":"https://translate.volcengine.cn","title":"访问主页","introduction":"提供全球领先的翻译技术与服务","avatar":"/medias/avatars/bytedtrans.png"},{"name":"AntNLP","url":"https://antnlp.org","title":"访问主页","introduction":"华东师范大学自然语言处理实验室欢迎您的加入！","avatar":"/medias/avatars/antnlp.ico"},{"name":"IDS²","url":"https://www.smart-dependable-sino-europe.institute","title":"访问主页","introduction":"中欧可靠智能软件联合实验室欢迎您的加入！","avatar":"/medias/avatars/ids2.jpg"},{"name":"孙长志","url":"https://www.czsun.site","title":"访问主页","introduction":"AntNLP博士大师兄！","avatar":"/medias/avatars/sunchangzhi.jpg"},{"name":"纪焘","url":"https://taoji.site","title":"访问主页","introduction":"AntNLP博士带明星！","avatar":"/medias/avatars/jitao.jpg"},{"name":"杜雨沛","url":"https://yupei-du.github.io/","title":"访问主页","introduction":"AntNLP唱跳RAP打篮球全能师兄！","avatar":"/medias/avatars/duyupei.jpg"},{"name":"0xbirdpwn","url":"https://0xbird.top/","title":"访问主页","introduction":"十步杀一人，千里不留行，事了拂衣去，深藏功与名。","avatar":"/medias/avatars/0xbird.png"},{"name":"李佳倩的博客","url":"https://jiaqianlee.com/","title":"访问主页","introduction":"一只小白的成长之路！","avatar":"/medias/avatars/lijiaqian.png"},{"name":"kewlgrl","url":"https://blog.csdn.net/MIKASA3","title":"访问主页","introduction":"好大一只咸鱼哇","avatar":"/medias/avatars/kewlgrl.jpg"},{"name":"Think Far Blog","url":"https://wuli749826.github.io","title":"访问主页","introduction":"我曾经拥有这一切，转眼都飘散如烟。","avatar":"/medias/avatars/gsy.jpg"},{"name":"望城风景","url":"https://www.itaowei.cn/","title":"访问主页","introduction":"用力活过的日子，才配得上此刻的缅怀。","avatar":"/medias/avatars/taowei.jpg"},{"name":"jxtxzzw空间","url":"https://www.jxtxzzw.com/wordpress","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/zzw.jpg"},{"name":"DREAMWINGS","url":"https://www.dreamwings.cn/","title":"访问主页","introduction":"夢はそこでないと、私の権利である","avatar":"/medias/avatars/qianqian.png"},{"name":"ElaineLv","url":"https://www.elainelv.com/","title":"访问主页","introduction":"Stay hungry, Stay foolish","avatar":"/medias/avatars/lyn-draw.jpg"},{"name":"Subject_No_i","url":"https://subjectnoi.github.io","title":"访问主页","introduction":"在原七海 中野三玖 中野二乃 樱岛麻衣的老公","avatar":"/medias/avatars/lzh.png"},{"name":"菁菁","url":"https://angericky.github.io/","title":"访问主页","introduction":"做什么都是因为喜欢","avatar":"/medias/avatars/jingjing.jpg"},{"name":"Sweet-Q","url":"https://sweet-q.github.io","title":"访问主页","introduction":"华东师范大学数学系","avatar":"/medias/avatars/babyq.png"},{"name":"伟大的蚊子","url":"https://www.cnblogs.com/cww97/","title":"访问主页","introduction":"鼓楼的夜晚时间匆匆","avatar":"/medias/avatars/cww97.jpg"},{"name":"Fun4wut","url":"https://blog.fun4go.top","title":"访问主页","introduction":"菜鸡欢迎大佬的光顾","avatar":"/medias/avatars/fun4go.png"},{"name":"Hael Chan","url":"https://haelchan.me/","title":"访问主页","introduction":"浙江大学 & NLP & ML","avatar":"/medias/avatars/hael.jpg"},{"name":"happygirlzt","url":"https://www.happygirlzt.com","title":"访问主页","introduction":"A Backend Engineer","avatar":"/medias/avatars/zhangting.jpg"},{"name":"星空无限","url":"https://liyangzone.com","title":"访问主页","introduction":"前端开发，死飞大佬。分享技术，分享生活。","avatar":"/medias/avatars/liyangzone.jpg"},{"name":"Mashiro","url":"https://2heng.xin/","title":"访问主页","introduction":"樱花庄的白猫","avatar":"/medias/avatars/mashiro.jpg"},{"name":"hzwer","url":"https://hzwer.com/","title":"访问主页","introduction":"北京大学计算机系","avatar":"/medias/avatars/hzwer.jpg"},{"name":"MPY634","url":"https://mpy634.cn/","title":"访问主页","introduction":"摸鱼，永无止境。","avatar":"/medias/avatars/mpy634.png"},{"name":"徐铭辰的博客","url":"https://michaelxucs.com","title":"访问主页","introduction":"埃克塞特大学计算机系","avatar":"/medias/avatars/michael.jpg"},{"name":"Mizunashi","url":"https://mizunashi.me","title":"访问主页","introduction":"欢迎大佬们来玩","avatar":"/medias/avatars/mizunashi.png"},{"name":"xuzhongyou","url":"https://xuzhongyou.github.io/","title":"访问主页","introduction":"我哽咽道：你是赵默笙，可我不是何以琛啊。","avatar":"/medias/avatars/xuzhongyou.jpg"},{"name":"zerol","url":"https://zerol.me/","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/huaji.jpg"},{"name":"Zhang Yi","url":"https://codewithzhangyi.com/","title":"访问主页","introduction":"Coding is the New Sexy","avatar":"/medias/avatars/zhangyi.jpg"},{"name":"科学空间","url":"https://spaces.ac.cn/","title":"访问主页","introduction":"中山大学基础数学研究生","avatar":"/medias/avatars/spacesac.png"},{"name":"lucifer的博客","url":"https://lucifer.ren/blog/","title":"访问主页","introduction":"一个脑洞很大的程序员。","avatar":"https://tva1.sinaimg.cn/large/006tNbRwly1ga7ognflh9j30b40b4q3w.jpg"},{"name":"钱栋伟","url":"https://sscjwdyzdw.club","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/qiandongwei.jpg"},{"name":"CJ Blog","url":"https://chrisju.cn/","title":"访问主页","introduction":"Failing means foolish.","avatar":"/medias/avatars/mouse.jpg"},{"name":"Tawn","url":"https://tawn0000.github.io/","title":"访问主页","introduction":"JNU ACMer","avatar":"/medias/avatars/tawn.jpg"},{"name":"Master X","url":"https://masterx.top/","title":"访问主页","introduction":"ECNU&ML&DL","avatar":"/medias/avatars/masterx.jpg"},{"name":"分享客","url":"https://sharerdiary.com/","title":"访问主页","introduction":"爱生活，爱分享！","avatar":"/medias/avatars/yezijie.png"},{"name":"taotao","url":"https://zouzhitao.github.io","title":"访问主页","introduction":"taotao 码字的地方","avatar":"/medias/avatars/taotao.jpg"},{"name":"Xiejiadong","url":"https://xiejiadong.com","title":"访问主页","introduction":"Xiejiadong's blog","avatar":"/medias/avatars/xiejiadong.jpg"},{"name":"飞吧","url":"https://fei.bar","title":"访问主页","introduction":"啓飞的个人博客","avatar":"/medias/avatars/feibar.png"},{"name":"ajin","url":"https://ajin.cloud","title":"访问主页","introduction":"Always be enthusiastic","avatar":"/medias/avatars/ajin.jpg"},{"name":"Hiyoung","url":"https://hiyoungai.com/","title":"访问主页","introduction":"宠辱不惊，看庭前花开花落；去留无意，望天空云卷云舒。","avatar":"https://cdn.jsdelivr.net/gh/hiyoung123/cdn/img/avatar.jpg"},{"name":"无言的博客","url":"https://www.yzplove.top","title":"访问主页","introduction":"代码真是越敲越香","avatar":"https://cdn.jsdelivr.net/gh/yzp-99/yzp-99.github.io/medias/avatars/me.jpg"},{"name":"Naixin Zhang","url":"https://naixinzhang.github.io/","title":"访问主页","introduction":"Econ Master | Data Analyst/scientist Candidate","avatar":"https://naixinzhang.github.io/medias/avatars/avatar.jpg"},{"name":"帅张的梦呓","url":"https://ishuaizhang.com","title":"访问主页","introduction":"XDUer","avatar":"https://ishuaizhang.com/medias/avatars/avatar.jpg"},{"name":"Gatsby’s blog","url":"https://a347807131.github.io/","title":"访问主页","introduction":"Nothing perfect, Noting special.","avatar":"https://a347807131.github.io/medias/avatar.gif"},{"name":"宇宙湾","url":"https://yuzhouwan.com/","title":"访问主页","introduction":"主要是大数据和人工智能的原创文章。","avatar":"https://yuzhouwan.com/yuzhouwan_logo_128x128.ico"},{"name":"Dotnet9的博客","url":"https://dotnet9.com","title":"访问主页","introduction":"一个热衷于互联网分享精神的个人博客站点","avatar":"https://img.dotnet9.com/logo-foot.png"},{"name":"Macchiato","url":"https://hcj123123.oschina.io","title":"访问主页","introduction":"java学习者","avatar":"https://y.gtimg.cn/music/photo_new/T002R300x300M000002qD7gF3fW0JL_1.jpg?max_age=2592000"},{"name":"过客~励む","url":"https://yafine-blog.cn","title":"访问主页","introduction":"你现在的努力，是为了以后有更多的选择。","avatar":"https://yafine-blog.cn/medias/avatar.jpg"},{"name":"meteorsh","url":"https://weisenhui.top","title":"访问主页","introduction":"Data Science & Engineering","avatar":"https://weisenhui.top/medias/avatar.jpg"},{"name":"Kuroko","url":"https://kuroko.info","title":"访问主页","introduction":"浓烟下的诗歌电台","avatar":"http://kuroko.info/wp-content/uploads/2020/11/2.jpg"}]}},"excerpt":"","more":"<blockquote>\n<p>关于写博客</p>\n</blockquote>\n<p><img src=\"/medias/contact.jpg\" alt></p>\n<h2 id=\"为什么要创建自己的博客站\"><a href=\"#为什么要创建自己的博客站\" class=\"headerlink\" title=\"为什么要创建自己的博客站\"></a>为什么要创建自己的博客站</h2><p><strong><em>曾经对博客不屑，但到了该记录的年纪</em></strong></p>\n"},{"title":"关于知识图谱中的命名实体识别（NER）","top":false,"cover":false,"toc":true,"mathjax":true,"date":"2021-12-06T03:44:57.000Z","password":null,"summary":null,"_content":"\n# 写在前面\n命名实体识别（Named Entity Recognition，NER），是指识别文本中具有特定意义的实体，可能包括人名、地名、机构名、专有名词等。通常包括两部分：\n1. 实体边界识别；\n2. 确定实体识别（特定的人名、地名、机构名称等）\n\n# NER现状\nNER当前并不算是一个大热的研究课题，因为学术界部分学者认为这是一个已经解决的问题。当然也有学者认为这个问题还没有得到很好地解决，原因主要有：命名实体识别只是在有限的文本类型（主要是新闻语料中）和实体类别（主要是人名、地名、组织机构名）中取得了不错的效果；与其他信息检索领域相比，实体命名评测预料较小，容易产生过拟合；命名实体识别更侧重高召回率，但在信息检索领域，高准确率更重要；通用的识别多种类型的命名实体的系统性能很差。\n\n## 中文NER问题\n中文的命名实体识别与英文相比，挑战更大，目前未解决的难题很多。英文中的命名实体具有明显形式标志，比如空格分割、首字母大写等，英文的实体切分重点是确定实体的类别。和英文相比，中文命名实体识别任务更加复杂，而且相对实体类别标注子任务，实体边界识别更加困难。\n中文NER的难点主要在于：\n1. 中文文本没有类似英文文本中空格之类的显示标示词的边界标示符，命名实体识别的第一步就是确定词的边界，即分词。\n2. 中文分词和命名实体识别互相影响。\n3. 除了英文中定义的实体，外国人名译名和地名译名是存在于中文中的两类特殊实体类型。\n4. 现代中文文本，尤其是网络中文文本，常常中英文交替混合，中文NER的任务还包括识别其中的英文命名实体。\n5. 不同的命名实体具有不同的内部特征，不可能用一个统一的模型来刻画所有的实体内部特征。\n\n# NER方法\n当前命名实体识别的主要技术方法分为：基于规则和词典的方法、基于统计的方法、二者混合的方法、神经网络的方法等。\n\n## 基于规则和词典的方法\n基于规则的方法多采用**语言学专家手工构造规则模板**，选用特征包括统计信息、标点符号、关键字、指示词和方向次、位置词（如尾字）、中心词等方法，以模式和字符串相匹配为主要手段，这类系统大多依赖于知识库和词典的建立。\n\n此类方法的主要缺点在于：\n1. 依赖于知识库和词典等先验知识的建立。\n2. 系统可以执行不好，对于不同的系统需要语言学家重新书写规则。\n3. 代价太大，系统建设周期长。\n\n## 基于统计的方法\n基于统计机器学习的方法主要包括：隐马尔可夫模型（Hidden Markov Model， HMM）、最大熵（Maxmium Entropy）、支持向量机（Support Vector Machine，SVM）、条件随机场（Conditional Random Fields，CRF）。\n\n此类方法的特点：\n1. 最大熵模型有较好的通用性，主要缺点是训练时间复杂性高。\n2. 条件随机场特征灵活、全局最优的标注框架，但同时存在收敛速度慢、训练时间长的问题。\n3. 隐马尔可夫模型再训练和识别时的速度要快一些，Viterbi算法求解命名实体类别序列的效率较高。\n4. 最大熵和支持向量机在正确率上要比隐马尔可夫模型高。\n5. 基于统计的方法对语料库的依赖也比较大。\n\n## 混合方法\n自然语言处理并不完全是一个随机过程，单独使用基于统计的方法使状态搜索空间非常庞大，必须借助规则知识提前进行过滤修剪处理。目前几乎没有单纯使用统计模型而不使用规则知识的命名实体识别系统，在很多情况下是使用混合方法，主要包括：\n1. 统计学系方法之间或内部层叠融合。\n2. 规则、词典和机器学习方法之间的融合，其核心是融合方法技术。在基于统计的学习方法中引入部分规则，将机器学习和人工知识结合起来。\n3. 将各类模型、算法结合起来，将前一级模型的结果作为下一级的训练数据，并用这些训练数据对模型进行训练，得到下一级模型。\n\n## 基于神经网络的方法\n近年来，随着硬件能力的发展以及词的分布式表示（word embedding）的出现，神经网络成为可以有效处理许多NLP任务的模型。主要模型有NN/CNN-CRF、RNN-CRF、LSTM-CRF。\n\n神经网络可以分为以下几个步骤：\n1. 对于序列标注任务（如CWS、POS、NER）的处理方式是类似的，将token从离散one-hot表示映射到低维空间中成为稠密的embedding。\n2. 将句子的embedding序列输入到RNN中，用神经网络自动提取特征。\n3. Softmax来预测每个token的标签。\n\n优点：\n1. 神经网络模型的训练成为一个端到端的整体过程，而非传统的pipeline。\n2. 不依赖特征工程，是一种数据驱动的方法。\n\n缺点：\n1. 网络变种多，对参数设置依赖大。\n2. 模型可解释性差。\n3. 每个token打标签的过程中是独立的额分类，不能直接利用上文已经预测的标签。\n\n# 总结\n从语言分析的全过程来看，命名实体识别属于词法分析中未登录词识别的范畴。命名实体识别是未登录词中数量最多、识别难度最大、对分词效果影响最大的问题，同时它也是信息抽取、信息检索、机器翻译、问答系统等多种自然语言处理技术必不可少的组成部分。\n\n[原文链接](https://www.cnblogs.com/huangyc/p/10064853.html)","source":"_posts/knowledge-graph-ner.md","raw":"---\ntitle: 关于知识图谱中的命名实体识别（NER）\ntop: false\ncover: false\ntoc: true\nmathjax: true\ndate: 2021-12-06 11:44:57\npassword:\nsummary:\ntags:\n- 知识图谱\n- NER\n- 命名实体识别\ncategories:\n- 算法\n- NLP\n---\n\n# 写在前面\n命名实体识别（Named Entity Recognition，NER），是指识别文本中具有特定意义的实体，可能包括人名、地名、机构名、专有名词等。通常包括两部分：\n1. 实体边界识别；\n2. 确定实体识别（特定的人名、地名、机构名称等）\n\n# NER现状\nNER当前并不算是一个大热的研究课题，因为学术界部分学者认为这是一个已经解决的问题。当然也有学者认为这个问题还没有得到很好地解决，原因主要有：命名实体识别只是在有限的文本类型（主要是新闻语料中）和实体类别（主要是人名、地名、组织机构名）中取得了不错的效果；与其他信息检索领域相比，实体命名评测预料较小，容易产生过拟合；命名实体识别更侧重高召回率，但在信息检索领域，高准确率更重要；通用的识别多种类型的命名实体的系统性能很差。\n\n## 中文NER问题\n中文的命名实体识别与英文相比，挑战更大，目前未解决的难题很多。英文中的命名实体具有明显形式标志，比如空格分割、首字母大写等，英文的实体切分重点是确定实体的类别。和英文相比，中文命名实体识别任务更加复杂，而且相对实体类别标注子任务，实体边界识别更加困难。\n中文NER的难点主要在于：\n1. 中文文本没有类似英文文本中空格之类的显示标示词的边界标示符，命名实体识别的第一步就是确定词的边界，即分词。\n2. 中文分词和命名实体识别互相影响。\n3. 除了英文中定义的实体，外国人名译名和地名译名是存在于中文中的两类特殊实体类型。\n4. 现代中文文本，尤其是网络中文文本，常常中英文交替混合，中文NER的任务还包括识别其中的英文命名实体。\n5. 不同的命名实体具有不同的内部特征，不可能用一个统一的模型来刻画所有的实体内部特征。\n\n# NER方法\n当前命名实体识别的主要技术方法分为：基于规则和词典的方法、基于统计的方法、二者混合的方法、神经网络的方法等。\n\n## 基于规则和词典的方法\n基于规则的方法多采用**语言学专家手工构造规则模板**，选用特征包括统计信息、标点符号、关键字、指示词和方向次、位置词（如尾字）、中心词等方法，以模式和字符串相匹配为主要手段，这类系统大多依赖于知识库和词典的建立。\n\n此类方法的主要缺点在于：\n1. 依赖于知识库和词典等先验知识的建立。\n2. 系统可以执行不好，对于不同的系统需要语言学家重新书写规则。\n3. 代价太大，系统建设周期长。\n\n## 基于统计的方法\n基于统计机器学习的方法主要包括：隐马尔可夫模型（Hidden Markov Model， HMM）、最大熵（Maxmium Entropy）、支持向量机（Support Vector Machine，SVM）、条件随机场（Conditional Random Fields，CRF）。\n\n此类方法的特点：\n1. 最大熵模型有较好的通用性，主要缺点是训练时间复杂性高。\n2. 条件随机场特征灵活、全局最优的标注框架，但同时存在收敛速度慢、训练时间长的问题。\n3. 隐马尔可夫模型再训练和识别时的速度要快一些，Viterbi算法求解命名实体类别序列的效率较高。\n4. 最大熵和支持向量机在正确率上要比隐马尔可夫模型高。\n5. 基于统计的方法对语料库的依赖也比较大。\n\n## 混合方法\n自然语言处理并不完全是一个随机过程，单独使用基于统计的方法使状态搜索空间非常庞大，必须借助规则知识提前进行过滤修剪处理。目前几乎没有单纯使用统计模型而不使用规则知识的命名实体识别系统，在很多情况下是使用混合方法，主要包括：\n1. 统计学系方法之间或内部层叠融合。\n2. 规则、词典和机器学习方法之间的融合，其核心是融合方法技术。在基于统计的学习方法中引入部分规则，将机器学习和人工知识结合起来。\n3. 将各类模型、算法结合起来，将前一级模型的结果作为下一级的训练数据，并用这些训练数据对模型进行训练，得到下一级模型。\n\n## 基于神经网络的方法\n近年来，随着硬件能力的发展以及词的分布式表示（word embedding）的出现，神经网络成为可以有效处理许多NLP任务的模型。主要模型有NN/CNN-CRF、RNN-CRF、LSTM-CRF。\n\n神经网络可以分为以下几个步骤：\n1. 对于序列标注任务（如CWS、POS、NER）的处理方式是类似的，将token从离散one-hot表示映射到低维空间中成为稠密的embedding。\n2. 将句子的embedding序列输入到RNN中，用神经网络自动提取特征。\n3. Softmax来预测每个token的标签。\n\n优点：\n1. 神经网络模型的训练成为一个端到端的整体过程，而非传统的pipeline。\n2. 不依赖特征工程，是一种数据驱动的方法。\n\n缺点：\n1. 网络变种多，对参数设置依赖大。\n2. 模型可解释性差。\n3. 每个token打标签的过程中是独立的额分类，不能直接利用上文已经预测的标签。\n\n# 总结\n从语言分析的全过程来看，命名实体识别属于词法分析中未登录词识别的范畴。命名实体识别是未登录词中数量最多、识别难度最大、对分词效果影响最大的问题，同时它也是信息抽取、信息检索、机器翻译、问答系统等多种自然语言处理技术必不可少的组成部分。\n\n[原文链接](https://www.cnblogs.com/huangyc/p/10064853.html)","slug":"knowledge-graph-ner","published":1,"updated":"2021-12-06T08:37:33.121Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl10m9kgo0007duwg77cphi94","content":"<h1 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h1><p>命名实体识别（Named Entity Recognition，NER），是指识别文本中具有特定意义的实体，可能包括人名、地名、机构名、专有名词等。通常包括两部分：</p>\n<ol>\n<li>实体边界识别；</li>\n<li>确定实体识别（特定的人名、地名、机构名称等）</li>\n</ol>\n<h1 id=\"NER现状\"><a href=\"#NER现状\" class=\"headerlink\" title=\"NER现状\"></a>NER现状</h1><p>NER当前并不算是一个大热的研究课题，因为学术界部分学者认为这是一个已经解决的问题。当然也有学者认为这个问题还没有得到很好地解决，原因主要有：命名实体识别只是在有限的文本类型（主要是新闻语料中）和实体类别（主要是人名、地名、组织机构名）中取得了不错的效果；与其他信息检索领域相比，实体命名评测预料较小，容易产生过拟合；命名实体识别更侧重高召回率，但在信息检索领域，高准确率更重要；通用的识别多种类型的命名实体的系统性能很差。</p>\n<h2 id=\"中文NER问题\"><a href=\"#中文NER问题\" class=\"headerlink\" title=\"中文NER问题\"></a>中文NER问题</h2><p>中文的命名实体识别与英文相比，挑战更大，目前未解决的难题很多。英文中的命名实体具有明显形式标志，比如空格分割、首字母大写等，英文的实体切分重点是确定实体的类别。和英文相比，中文命名实体识别任务更加复杂，而且相对实体类别标注子任务，实体边界识别更加困难。<br>中文NER的难点主要在于：</p>\n<ol>\n<li>中文文本没有类似英文文本中空格之类的显示标示词的边界标示符，命名实体识别的第一步就是确定词的边界，即分词。</li>\n<li>中文分词和命名实体识别互相影响。</li>\n<li>除了英文中定义的实体，外国人名译名和地名译名是存在于中文中的两类特殊实体类型。</li>\n<li>现代中文文本，尤其是网络中文文本，常常中英文交替混合，中文NER的任务还包括识别其中的英文命名实体。</li>\n<li>不同的命名实体具有不同的内部特征，不可能用一个统一的模型来刻画所有的实体内部特征。</li>\n</ol>\n<h1 id=\"NER方法\"><a href=\"#NER方法\" class=\"headerlink\" title=\"NER方法\"></a>NER方法</h1><p>当前命名实体识别的主要技术方法分为：基于规则和词典的方法、基于统计的方法、二者混合的方法、神经网络的方法等。</p>\n<h2 id=\"基于规则和词典的方法\"><a href=\"#基于规则和词典的方法\" class=\"headerlink\" title=\"基于规则和词典的方法\"></a>基于规则和词典的方法</h2><p>基于规则的方法多采用<strong>语言学专家手工构造规则模板</strong>，选用特征包括统计信息、标点符号、关键字、指示词和方向次、位置词（如尾字）、中心词等方法，以模式和字符串相匹配为主要手段，这类系统大多依赖于知识库和词典的建立。</p>\n<p>此类方法的主要缺点在于：</p>\n<ol>\n<li>依赖于知识库和词典等先验知识的建立。</li>\n<li>系统可以执行不好，对于不同的系统需要语言学家重新书写规则。</li>\n<li>代价太大，系统建设周期长。</li>\n</ol>\n<h2 id=\"基于统计的方法\"><a href=\"#基于统计的方法\" class=\"headerlink\" title=\"基于统计的方法\"></a>基于统计的方法</h2><p>基于统计机器学习的方法主要包括：隐马尔可夫模型（Hidden Markov Model， HMM）、最大熵（Maxmium Entropy）、支持向量机（Support Vector Machine，SVM）、条件随机场（Conditional Random Fields，CRF）。</p>\n<p>此类方法的特点：</p>\n<ol>\n<li>最大熵模型有较好的通用性，主要缺点是训练时间复杂性高。</li>\n<li>条件随机场特征灵活、全局最优的标注框架，但同时存在收敛速度慢、训练时间长的问题。</li>\n<li>隐马尔可夫模型再训练和识别时的速度要快一些，Viterbi算法求解命名实体类别序列的效率较高。</li>\n<li>最大熵和支持向量机在正确率上要比隐马尔可夫模型高。</li>\n<li>基于统计的方法对语料库的依赖也比较大。</li>\n</ol>\n<h2 id=\"混合方法\"><a href=\"#混合方法\" class=\"headerlink\" title=\"混合方法\"></a>混合方法</h2><p>自然语言处理并不完全是一个随机过程，单独使用基于统计的方法使状态搜索空间非常庞大，必须借助规则知识提前进行过滤修剪处理。目前几乎没有单纯使用统计模型而不使用规则知识的命名实体识别系统，在很多情况下是使用混合方法，主要包括：</p>\n<ol>\n<li>统计学系方法之间或内部层叠融合。</li>\n<li>规则、词典和机器学习方法之间的融合，其核心是融合方法技术。在基于统计的学习方法中引入部分规则，将机器学习和人工知识结合起来。</li>\n<li>将各类模型、算法结合起来，将前一级模型的结果作为下一级的训练数据，并用这些训练数据对模型进行训练，得到下一级模型。</li>\n</ol>\n<h2 id=\"基于神经网络的方法\"><a href=\"#基于神经网络的方法\" class=\"headerlink\" title=\"基于神经网络的方法\"></a>基于神经网络的方法</h2><p>近年来，随着硬件能力的发展以及词的分布式表示（word embedding）的出现，神经网络成为可以有效处理许多NLP任务的模型。主要模型有NN/CNN-CRF、RNN-CRF、LSTM-CRF。</p>\n<p>神经网络可以分为以下几个步骤：</p>\n<ol>\n<li>对于序列标注任务（如CWS、POS、NER）的处理方式是类似的，将token从离散one-hot表示映射到低维空间中成为稠密的embedding。</li>\n<li>将句子的embedding序列输入到RNN中，用神经网络自动提取特征。</li>\n<li>Softmax来预测每个token的标签。</li>\n</ol>\n<p>优点：</p>\n<ol>\n<li>神经网络模型的训练成为一个端到端的整体过程，而非传统的pipeline。</li>\n<li>不依赖特征工程，是一种数据驱动的方法。</li>\n</ol>\n<p>缺点：</p>\n<ol>\n<li>网络变种多，对参数设置依赖大。</li>\n<li>模型可解释性差。</li>\n<li>每个token打标签的过程中是独立的额分类，不能直接利用上文已经预测的标签。</li>\n</ol>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>从语言分析的全过程来看，命名实体识别属于词法分析中未登录词识别的范畴。命名实体识别是未登录词中数量最多、识别难度最大、对分词效果影响最大的问题，同时它也是信息抽取、信息检索、机器翻译、问答系统等多种自然语言处理技术必不可少的组成部分。</p>\n<p><a href=\"https://www.cnblogs.com/huangyc/p/10064853.html\" target=\"_blank\" rel=\"noopener\">原文链接</a></p>\n","site":{"data":{"musics":[{"name":"夜曲","artist":"周杰伦","url":"/medias/music/yequ.mp3","cover":"/medias/music/avatars/yequ.jpg"},{"name":"一路向北","artist":"周杰伦","url":"/medias/music/yiluxiangbei.mp3","cover":"/medias/music/avatars/yiluxiangbei.jpg"},{"name":"来自天堂的魔鬼","artist":"邓紫棋","url":"/medias/music/tiantangdemogui.mp3","cover":"/medias/music/avatars/tiantangdemogui.jpg"},{"name":"倒数","artist":"邓紫棋","url":"/medias/music/daoshu.mp3","cover":"/medias/music/avatars/daoshu.jpg"}],"friends":[{"name":"知乎专栏","url":"https://zhuanlan.zhihu.com/godweiyang","title":"访问主页","introduction":"算法码上来","avatar":"/medias/avatars/myzhihu.png"},{"name":"火山翻译","url":"https://translate.volcengine.cn","title":"访问主页","introduction":"提供全球领先的翻译技术与服务","avatar":"/medias/avatars/bytedtrans.png"},{"name":"AntNLP","url":"https://antnlp.org","title":"访问主页","introduction":"华东师范大学自然语言处理实验室欢迎您的加入！","avatar":"/medias/avatars/antnlp.ico"},{"name":"IDS²","url":"https://www.smart-dependable-sino-europe.institute","title":"访问主页","introduction":"中欧可靠智能软件联合实验室欢迎您的加入！","avatar":"/medias/avatars/ids2.jpg"},{"name":"孙长志","url":"https://www.czsun.site","title":"访问主页","introduction":"AntNLP博士大师兄！","avatar":"/medias/avatars/sunchangzhi.jpg"},{"name":"纪焘","url":"https://taoji.site","title":"访问主页","introduction":"AntNLP博士带明星！","avatar":"/medias/avatars/jitao.jpg"},{"name":"杜雨沛","url":"https://yupei-du.github.io/","title":"访问主页","introduction":"AntNLP唱跳RAP打篮球全能师兄！","avatar":"/medias/avatars/duyupei.jpg"},{"name":"0xbirdpwn","url":"https://0xbird.top/","title":"访问主页","introduction":"十步杀一人，千里不留行，事了拂衣去，深藏功与名。","avatar":"/medias/avatars/0xbird.png"},{"name":"李佳倩的博客","url":"https://jiaqianlee.com/","title":"访问主页","introduction":"一只小白的成长之路！","avatar":"/medias/avatars/lijiaqian.png"},{"name":"kewlgrl","url":"https://blog.csdn.net/MIKASA3","title":"访问主页","introduction":"好大一只咸鱼哇","avatar":"/medias/avatars/kewlgrl.jpg"},{"name":"Think Far Blog","url":"https://wuli749826.github.io","title":"访问主页","introduction":"我曾经拥有这一切，转眼都飘散如烟。","avatar":"/medias/avatars/gsy.jpg"},{"name":"望城风景","url":"https://www.itaowei.cn/","title":"访问主页","introduction":"用力活过的日子，才配得上此刻的缅怀。","avatar":"/medias/avatars/taowei.jpg"},{"name":"jxtxzzw空间","url":"https://www.jxtxzzw.com/wordpress","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/zzw.jpg"},{"name":"DREAMWINGS","url":"https://www.dreamwings.cn/","title":"访问主页","introduction":"夢はそこでないと、私の権利である","avatar":"/medias/avatars/qianqian.png"},{"name":"ElaineLv","url":"https://www.elainelv.com/","title":"访问主页","introduction":"Stay hungry, Stay foolish","avatar":"/medias/avatars/lyn-draw.jpg"},{"name":"Subject_No_i","url":"https://subjectnoi.github.io","title":"访问主页","introduction":"在原七海 中野三玖 中野二乃 樱岛麻衣的老公","avatar":"/medias/avatars/lzh.png"},{"name":"菁菁","url":"https://angericky.github.io/","title":"访问主页","introduction":"做什么都是因为喜欢","avatar":"/medias/avatars/jingjing.jpg"},{"name":"Sweet-Q","url":"https://sweet-q.github.io","title":"访问主页","introduction":"华东师范大学数学系","avatar":"/medias/avatars/babyq.png"},{"name":"伟大的蚊子","url":"https://www.cnblogs.com/cww97/","title":"访问主页","introduction":"鼓楼的夜晚时间匆匆","avatar":"/medias/avatars/cww97.jpg"},{"name":"Fun4wut","url":"https://blog.fun4go.top","title":"访问主页","introduction":"菜鸡欢迎大佬的光顾","avatar":"/medias/avatars/fun4go.png"},{"name":"Hael Chan","url":"https://haelchan.me/","title":"访问主页","introduction":"浙江大学 & NLP & ML","avatar":"/medias/avatars/hael.jpg"},{"name":"happygirlzt","url":"https://www.happygirlzt.com","title":"访问主页","introduction":"A Backend Engineer","avatar":"/medias/avatars/zhangting.jpg"},{"name":"星空无限","url":"https://liyangzone.com","title":"访问主页","introduction":"前端开发，死飞大佬。分享技术，分享生活。","avatar":"/medias/avatars/liyangzone.jpg"},{"name":"Mashiro","url":"https://2heng.xin/","title":"访问主页","introduction":"樱花庄的白猫","avatar":"/medias/avatars/mashiro.jpg"},{"name":"hzwer","url":"https://hzwer.com/","title":"访问主页","introduction":"北京大学计算机系","avatar":"/medias/avatars/hzwer.jpg"},{"name":"MPY634","url":"https://mpy634.cn/","title":"访问主页","introduction":"摸鱼，永无止境。","avatar":"/medias/avatars/mpy634.png"},{"name":"徐铭辰的博客","url":"https://michaelxucs.com","title":"访问主页","introduction":"埃克塞特大学计算机系","avatar":"/medias/avatars/michael.jpg"},{"name":"Mizunashi","url":"https://mizunashi.me","title":"访问主页","introduction":"欢迎大佬们来玩","avatar":"/medias/avatars/mizunashi.png"},{"name":"xuzhongyou","url":"https://xuzhongyou.github.io/","title":"访问主页","introduction":"我哽咽道：你是赵默笙，可我不是何以琛啊。","avatar":"/medias/avatars/xuzhongyou.jpg"},{"name":"zerol","url":"https://zerol.me/","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/huaji.jpg"},{"name":"Zhang Yi","url":"https://codewithzhangyi.com/","title":"访问主页","introduction":"Coding is the New Sexy","avatar":"/medias/avatars/zhangyi.jpg"},{"name":"科学空间","url":"https://spaces.ac.cn/","title":"访问主页","introduction":"中山大学基础数学研究生","avatar":"/medias/avatars/spacesac.png"},{"name":"lucifer的博客","url":"https://lucifer.ren/blog/","title":"访问主页","introduction":"一个脑洞很大的程序员。","avatar":"https://tva1.sinaimg.cn/large/006tNbRwly1ga7ognflh9j30b40b4q3w.jpg"},{"name":"钱栋伟","url":"https://sscjwdyzdw.club","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/qiandongwei.jpg"},{"name":"CJ Blog","url":"https://chrisju.cn/","title":"访问主页","introduction":"Failing means foolish.","avatar":"/medias/avatars/mouse.jpg"},{"name":"Tawn","url":"https://tawn0000.github.io/","title":"访问主页","introduction":"JNU ACMer","avatar":"/medias/avatars/tawn.jpg"},{"name":"Master X","url":"https://masterx.top/","title":"访问主页","introduction":"ECNU&ML&DL","avatar":"/medias/avatars/masterx.jpg"},{"name":"分享客","url":"https://sharerdiary.com/","title":"访问主页","introduction":"爱生活，爱分享！","avatar":"/medias/avatars/yezijie.png"},{"name":"taotao","url":"https://zouzhitao.github.io","title":"访问主页","introduction":"taotao 码字的地方","avatar":"/medias/avatars/taotao.jpg"},{"name":"Xiejiadong","url":"https://xiejiadong.com","title":"访问主页","introduction":"Xiejiadong's blog","avatar":"/medias/avatars/xiejiadong.jpg"},{"name":"飞吧","url":"https://fei.bar","title":"访问主页","introduction":"啓飞的个人博客","avatar":"/medias/avatars/feibar.png"},{"name":"ajin","url":"https://ajin.cloud","title":"访问主页","introduction":"Always be enthusiastic","avatar":"/medias/avatars/ajin.jpg"},{"name":"Hiyoung","url":"https://hiyoungai.com/","title":"访问主页","introduction":"宠辱不惊，看庭前花开花落；去留无意，望天空云卷云舒。","avatar":"https://cdn.jsdelivr.net/gh/hiyoung123/cdn/img/avatar.jpg"},{"name":"无言的博客","url":"https://www.yzplove.top","title":"访问主页","introduction":"代码真是越敲越香","avatar":"https://cdn.jsdelivr.net/gh/yzp-99/yzp-99.github.io/medias/avatars/me.jpg"},{"name":"Naixin Zhang","url":"https://naixinzhang.github.io/","title":"访问主页","introduction":"Econ Master | Data Analyst/scientist Candidate","avatar":"https://naixinzhang.github.io/medias/avatars/avatar.jpg"},{"name":"帅张的梦呓","url":"https://ishuaizhang.com","title":"访问主页","introduction":"XDUer","avatar":"https://ishuaizhang.com/medias/avatars/avatar.jpg"},{"name":"Gatsby’s blog","url":"https://a347807131.github.io/","title":"访问主页","introduction":"Nothing perfect, Noting special.","avatar":"https://a347807131.github.io/medias/avatar.gif"},{"name":"宇宙湾","url":"https://yuzhouwan.com/","title":"访问主页","introduction":"主要是大数据和人工智能的原创文章。","avatar":"https://yuzhouwan.com/yuzhouwan_logo_128x128.ico"},{"name":"Dotnet9的博客","url":"https://dotnet9.com","title":"访问主页","introduction":"一个热衷于互联网分享精神的个人博客站点","avatar":"https://img.dotnet9.com/logo-foot.png"},{"name":"Macchiato","url":"https://hcj123123.oschina.io","title":"访问主页","introduction":"java学习者","avatar":"https://y.gtimg.cn/music/photo_new/T002R300x300M000002qD7gF3fW0JL_1.jpg?max_age=2592000"},{"name":"过客~励む","url":"https://yafine-blog.cn","title":"访问主页","introduction":"你现在的努力，是为了以后有更多的选择。","avatar":"https://yafine-blog.cn/medias/avatar.jpg"},{"name":"meteorsh","url":"https://weisenhui.top","title":"访问主页","introduction":"Data Science & Engineering","avatar":"https://weisenhui.top/medias/avatar.jpg"},{"name":"Kuroko","url":"https://kuroko.info","title":"访问主页","introduction":"浓烟下的诗歌电台","avatar":"http://kuroko.info/wp-content/uploads/2020/11/2.jpg"}]}},"excerpt":"","more":"<h1 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h1><p>命名实体识别（Named Entity Recognition，NER），是指识别文本中具有特定意义的实体，可能包括人名、地名、机构名、专有名词等。通常包括两部分：</p>\n<ol>\n<li>实体边界识别；</li>\n<li>确定实体识别（特定的人名、地名、机构名称等）</li>\n</ol>\n<h1 id=\"NER现状\"><a href=\"#NER现状\" class=\"headerlink\" title=\"NER现状\"></a>NER现状</h1><p>NER当前并不算是一个大热的研究课题，因为学术界部分学者认为这是一个已经解决的问题。当然也有学者认为这个问题还没有得到很好地解决，原因主要有：命名实体识别只是在有限的文本类型（主要是新闻语料中）和实体类别（主要是人名、地名、组织机构名）中取得了不错的效果；与其他信息检索领域相比，实体命名评测预料较小，容易产生过拟合；命名实体识别更侧重高召回率，但在信息检索领域，高准确率更重要；通用的识别多种类型的命名实体的系统性能很差。</p>\n<h2 id=\"中文NER问题\"><a href=\"#中文NER问题\" class=\"headerlink\" title=\"中文NER问题\"></a>中文NER问题</h2><p>中文的命名实体识别与英文相比，挑战更大，目前未解决的难题很多。英文中的命名实体具有明显形式标志，比如空格分割、首字母大写等，英文的实体切分重点是确定实体的类别。和英文相比，中文命名实体识别任务更加复杂，而且相对实体类别标注子任务，实体边界识别更加困难。<br>中文NER的难点主要在于：</p>\n<ol>\n<li>中文文本没有类似英文文本中空格之类的显示标示词的边界标示符，命名实体识别的第一步就是确定词的边界，即分词。</li>\n<li>中文分词和命名实体识别互相影响。</li>\n<li>除了英文中定义的实体，外国人名译名和地名译名是存在于中文中的两类特殊实体类型。</li>\n<li>现代中文文本，尤其是网络中文文本，常常中英文交替混合，中文NER的任务还包括识别其中的英文命名实体。</li>\n<li>不同的命名实体具有不同的内部特征，不可能用一个统一的模型来刻画所有的实体内部特征。</li>\n</ol>\n<h1 id=\"NER方法\"><a href=\"#NER方法\" class=\"headerlink\" title=\"NER方法\"></a>NER方法</h1><p>当前命名实体识别的主要技术方法分为：基于规则和词典的方法、基于统计的方法、二者混合的方法、神经网络的方法等。</p>\n<h2 id=\"基于规则和词典的方法\"><a href=\"#基于规则和词典的方法\" class=\"headerlink\" title=\"基于规则和词典的方法\"></a>基于规则和词典的方法</h2><p>基于规则的方法多采用<strong>语言学专家手工构造规则模板</strong>，选用特征包括统计信息、标点符号、关键字、指示词和方向次、位置词（如尾字）、中心词等方法，以模式和字符串相匹配为主要手段，这类系统大多依赖于知识库和词典的建立。</p>\n<p>此类方法的主要缺点在于：</p>\n<ol>\n<li>依赖于知识库和词典等先验知识的建立。</li>\n<li>系统可以执行不好，对于不同的系统需要语言学家重新书写规则。</li>\n<li>代价太大，系统建设周期长。</li>\n</ol>\n<h2 id=\"基于统计的方法\"><a href=\"#基于统计的方法\" class=\"headerlink\" title=\"基于统计的方法\"></a>基于统计的方法</h2><p>基于统计机器学习的方法主要包括：隐马尔可夫模型（Hidden Markov Model， HMM）、最大熵（Maxmium Entropy）、支持向量机（Support Vector Machine，SVM）、条件随机场（Conditional Random Fields，CRF）。</p>\n<p>此类方法的特点：</p>\n<ol>\n<li>最大熵模型有较好的通用性，主要缺点是训练时间复杂性高。</li>\n<li>条件随机场特征灵活、全局最优的标注框架，但同时存在收敛速度慢、训练时间长的问题。</li>\n<li>隐马尔可夫模型再训练和识别时的速度要快一些，Viterbi算法求解命名实体类别序列的效率较高。</li>\n<li>最大熵和支持向量机在正确率上要比隐马尔可夫模型高。</li>\n<li>基于统计的方法对语料库的依赖也比较大。</li>\n</ol>\n<h2 id=\"混合方法\"><a href=\"#混合方法\" class=\"headerlink\" title=\"混合方法\"></a>混合方法</h2><p>自然语言处理并不完全是一个随机过程，单独使用基于统计的方法使状态搜索空间非常庞大，必须借助规则知识提前进行过滤修剪处理。目前几乎没有单纯使用统计模型而不使用规则知识的命名实体识别系统，在很多情况下是使用混合方法，主要包括：</p>\n<ol>\n<li>统计学系方法之间或内部层叠融合。</li>\n<li>规则、词典和机器学习方法之间的融合，其核心是融合方法技术。在基于统计的学习方法中引入部分规则，将机器学习和人工知识结合起来。</li>\n<li>将各类模型、算法结合起来，将前一级模型的结果作为下一级的训练数据，并用这些训练数据对模型进行训练，得到下一级模型。</li>\n</ol>\n<h2 id=\"基于神经网络的方法\"><a href=\"#基于神经网络的方法\" class=\"headerlink\" title=\"基于神经网络的方法\"></a>基于神经网络的方法</h2><p>近年来，随着硬件能力的发展以及词的分布式表示（word embedding）的出现，神经网络成为可以有效处理许多NLP任务的模型。主要模型有NN/CNN-CRF、RNN-CRF、LSTM-CRF。</p>\n<p>神经网络可以分为以下几个步骤：</p>\n<ol>\n<li>对于序列标注任务（如CWS、POS、NER）的处理方式是类似的，将token从离散one-hot表示映射到低维空间中成为稠密的embedding。</li>\n<li>将句子的embedding序列输入到RNN中，用神经网络自动提取特征。</li>\n<li>Softmax来预测每个token的标签。</li>\n</ol>\n<p>优点：</p>\n<ol>\n<li>神经网络模型的训练成为一个端到端的整体过程，而非传统的pipeline。</li>\n<li>不依赖特征工程，是一种数据驱动的方法。</li>\n</ol>\n<p>缺点：</p>\n<ol>\n<li>网络变种多，对参数设置依赖大。</li>\n<li>模型可解释性差。</li>\n<li>每个token打标签的过程中是独立的额分类，不能直接利用上文已经预测的标签。</li>\n</ol>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>从语言分析的全过程来看，命名实体识别属于词法分析中未登录词识别的范畴。命名实体识别是未登录词中数量最多、识别难度最大、对分词效果影响最大的问题，同时它也是信息抽取、信息检索、机器翻译、问答系统等多种自然语言处理技术必不可少的组成部分。</p>\n<p><a href=\"https://www.cnblogs.com/huangyc/p/10064853.html\" target=\"_blank\" rel=\"noopener\">原文链接</a></p>\n"},{"title":"Ultimate DeFi and Blockchain Research Base","top":false,"cover":false,"toc":true,"mathjax":true,"date":"2022-01-16T07:16:58.000Z","password":null,"summary":null,"_content":"\nFly to [Base Area](https://github.com/OffcierCia/ultimate-defi-research-base#security--safety)","source":"_posts/mark-blockchain-links.md","raw":"---\ntitle: Ultimate DeFi and Blockchain Research Base\ntop: false\ncover: false\ntoc: true\nmathjax: true\ndate: 2022-01-16 15:16:58\npassword:\nsummary:\ntags:\n- mark\ncategories:\n- 区块链\n---\n\nFly to [Base Area](https://github.com/OffcierCia/ultimate-defi-research-base#security--safety)","slug":"mark-blockchain-links","published":1,"updated":"2022-01-16T07:18:44.402Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl10m9kgp000aduwgeyxcvwo1","content":"<p>Fly to <a href=\"https://github.com/OffcierCia/ultimate-defi-research-base#security--safety\" target=\"_blank\" rel=\"noopener\">Base Area</a></p>\n","site":{"data":{"musics":[{"name":"夜曲","artist":"周杰伦","url":"/medias/music/yequ.mp3","cover":"/medias/music/avatars/yequ.jpg"},{"name":"一路向北","artist":"周杰伦","url":"/medias/music/yiluxiangbei.mp3","cover":"/medias/music/avatars/yiluxiangbei.jpg"},{"name":"来自天堂的魔鬼","artist":"邓紫棋","url":"/medias/music/tiantangdemogui.mp3","cover":"/medias/music/avatars/tiantangdemogui.jpg"},{"name":"倒数","artist":"邓紫棋","url":"/medias/music/daoshu.mp3","cover":"/medias/music/avatars/daoshu.jpg"}],"friends":[{"name":"知乎专栏","url":"https://zhuanlan.zhihu.com/godweiyang","title":"访问主页","introduction":"算法码上来","avatar":"/medias/avatars/myzhihu.png"},{"name":"火山翻译","url":"https://translate.volcengine.cn","title":"访问主页","introduction":"提供全球领先的翻译技术与服务","avatar":"/medias/avatars/bytedtrans.png"},{"name":"AntNLP","url":"https://antnlp.org","title":"访问主页","introduction":"华东师范大学自然语言处理实验室欢迎您的加入！","avatar":"/medias/avatars/antnlp.ico"},{"name":"IDS²","url":"https://www.smart-dependable-sino-europe.institute","title":"访问主页","introduction":"中欧可靠智能软件联合实验室欢迎您的加入！","avatar":"/medias/avatars/ids2.jpg"},{"name":"孙长志","url":"https://www.czsun.site","title":"访问主页","introduction":"AntNLP博士大师兄！","avatar":"/medias/avatars/sunchangzhi.jpg"},{"name":"纪焘","url":"https://taoji.site","title":"访问主页","introduction":"AntNLP博士带明星！","avatar":"/medias/avatars/jitao.jpg"},{"name":"杜雨沛","url":"https://yupei-du.github.io/","title":"访问主页","introduction":"AntNLP唱跳RAP打篮球全能师兄！","avatar":"/medias/avatars/duyupei.jpg"},{"name":"0xbirdpwn","url":"https://0xbird.top/","title":"访问主页","introduction":"十步杀一人，千里不留行，事了拂衣去，深藏功与名。","avatar":"/medias/avatars/0xbird.png"},{"name":"李佳倩的博客","url":"https://jiaqianlee.com/","title":"访问主页","introduction":"一只小白的成长之路！","avatar":"/medias/avatars/lijiaqian.png"},{"name":"kewlgrl","url":"https://blog.csdn.net/MIKASA3","title":"访问主页","introduction":"好大一只咸鱼哇","avatar":"/medias/avatars/kewlgrl.jpg"},{"name":"Think Far Blog","url":"https://wuli749826.github.io","title":"访问主页","introduction":"我曾经拥有这一切，转眼都飘散如烟。","avatar":"/medias/avatars/gsy.jpg"},{"name":"望城风景","url":"https://www.itaowei.cn/","title":"访问主页","introduction":"用力活过的日子，才配得上此刻的缅怀。","avatar":"/medias/avatars/taowei.jpg"},{"name":"jxtxzzw空间","url":"https://www.jxtxzzw.com/wordpress","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/zzw.jpg"},{"name":"DREAMWINGS","url":"https://www.dreamwings.cn/","title":"访问主页","introduction":"夢はそこでないと、私の権利である","avatar":"/medias/avatars/qianqian.png"},{"name":"ElaineLv","url":"https://www.elainelv.com/","title":"访问主页","introduction":"Stay hungry, Stay foolish","avatar":"/medias/avatars/lyn-draw.jpg"},{"name":"Subject_No_i","url":"https://subjectnoi.github.io","title":"访问主页","introduction":"在原七海 中野三玖 中野二乃 樱岛麻衣的老公","avatar":"/medias/avatars/lzh.png"},{"name":"菁菁","url":"https://angericky.github.io/","title":"访问主页","introduction":"做什么都是因为喜欢","avatar":"/medias/avatars/jingjing.jpg"},{"name":"Sweet-Q","url":"https://sweet-q.github.io","title":"访问主页","introduction":"华东师范大学数学系","avatar":"/medias/avatars/babyq.png"},{"name":"伟大的蚊子","url":"https://www.cnblogs.com/cww97/","title":"访问主页","introduction":"鼓楼的夜晚时间匆匆","avatar":"/medias/avatars/cww97.jpg"},{"name":"Fun4wut","url":"https://blog.fun4go.top","title":"访问主页","introduction":"菜鸡欢迎大佬的光顾","avatar":"/medias/avatars/fun4go.png"},{"name":"Hael Chan","url":"https://haelchan.me/","title":"访问主页","introduction":"浙江大学 & NLP & ML","avatar":"/medias/avatars/hael.jpg"},{"name":"happygirlzt","url":"https://www.happygirlzt.com","title":"访问主页","introduction":"A Backend Engineer","avatar":"/medias/avatars/zhangting.jpg"},{"name":"星空无限","url":"https://liyangzone.com","title":"访问主页","introduction":"前端开发，死飞大佬。分享技术，分享生活。","avatar":"/medias/avatars/liyangzone.jpg"},{"name":"Mashiro","url":"https://2heng.xin/","title":"访问主页","introduction":"樱花庄的白猫","avatar":"/medias/avatars/mashiro.jpg"},{"name":"hzwer","url":"https://hzwer.com/","title":"访问主页","introduction":"北京大学计算机系","avatar":"/medias/avatars/hzwer.jpg"},{"name":"MPY634","url":"https://mpy634.cn/","title":"访问主页","introduction":"摸鱼，永无止境。","avatar":"/medias/avatars/mpy634.png"},{"name":"徐铭辰的博客","url":"https://michaelxucs.com","title":"访问主页","introduction":"埃克塞特大学计算机系","avatar":"/medias/avatars/michael.jpg"},{"name":"Mizunashi","url":"https://mizunashi.me","title":"访问主页","introduction":"欢迎大佬们来玩","avatar":"/medias/avatars/mizunashi.png"},{"name":"xuzhongyou","url":"https://xuzhongyou.github.io/","title":"访问主页","introduction":"我哽咽道：你是赵默笙，可我不是何以琛啊。","avatar":"/medias/avatars/xuzhongyou.jpg"},{"name":"zerol","url":"https://zerol.me/","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/huaji.jpg"},{"name":"Zhang Yi","url":"https://codewithzhangyi.com/","title":"访问主页","introduction":"Coding is the New Sexy","avatar":"/medias/avatars/zhangyi.jpg"},{"name":"科学空间","url":"https://spaces.ac.cn/","title":"访问主页","introduction":"中山大学基础数学研究生","avatar":"/medias/avatars/spacesac.png"},{"name":"lucifer的博客","url":"https://lucifer.ren/blog/","title":"访问主页","introduction":"一个脑洞很大的程序员。","avatar":"https://tva1.sinaimg.cn/large/006tNbRwly1ga7ognflh9j30b40b4q3w.jpg"},{"name":"钱栋伟","url":"https://sscjwdyzdw.club","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/qiandongwei.jpg"},{"name":"CJ Blog","url":"https://chrisju.cn/","title":"访问主页","introduction":"Failing means foolish.","avatar":"/medias/avatars/mouse.jpg"},{"name":"Tawn","url":"https://tawn0000.github.io/","title":"访问主页","introduction":"JNU ACMer","avatar":"/medias/avatars/tawn.jpg"},{"name":"Master X","url":"https://masterx.top/","title":"访问主页","introduction":"ECNU&ML&DL","avatar":"/medias/avatars/masterx.jpg"},{"name":"分享客","url":"https://sharerdiary.com/","title":"访问主页","introduction":"爱生活，爱分享！","avatar":"/medias/avatars/yezijie.png"},{"name":"taotao","url":"https://zouzhitao.github.io","title":"访问主页","introduction":"taotao 码字的地方","avatar":"/medias/avatars/taotao.jpg"},{"name":"Xiejiadong","url":"https://xiejiadong.com","title":"访问主页","introduction":"Xiejiadong's blog","avatar":"/medias/avatars/xiejiadong.jpg"},{"name":"飞吧","url":"https://fei.bar","title":"访问主页","introduction":"啓飞的个人博客","avatar":"/medias/avatars/feibar.png"},{"name":"ajin","url":"https://ajin.cloud","title":"访问主页","introduction":"Always be enthusiastic","avatar":"/medias/avatars/ajin.jpg"},{"name":"Hiyoung","url":"https://hiyoungai.com/","title":"访问主页","introduction":"宠辱不惊，看庭前花开花落；去留无意，望天空云卷云舒。","avatar":"https://cdn.jsdelivr.net/gh/hiyoung123/cdn/img/avatar.jpg"},{"name":"无言的博客","url":"https://www.yzplove.top","title":"访问主页","introduction":"代码真是越敲越香","avatar":"https://cdn.jsdelivr.net/gh/yzp-99/yzp-99.github.io/medias/avatars/me.jpg"},{"name":"Naixin Zhang","url":"https://naixinzhang.github.io/","title":"访问主页","introduction":"Econ Master | Data Analyst/scientist Candidate","avatar":"https://naixinzhang.github.io/medias/avatars/avatar.jpg"},{"name":"帅张的梦呓","url":"https://ishuaizhang.com","title":"访问主页","introduction":"XDUer","avatar":"https://ishuaizhang.com/medias/avatars/avatar.jpg"},{"name":"Gatsby’s blog","url":"https://a347807131.github.io/","title":"访问主页","introduction":"Nothing perfect, Noting special.","avatar":"https://a347807131.github.io/medias/avatar.gif"},{"name":"宇宙湾","url":"https://yuzhouwan.com/","title":"访问主页","introduction":"主要是大数据和人工智能的原创文章。","avatar":"https://yuzhouwan.com/yuzhouwan_logo_128x128.ico"},{"name":"Dotnet9的博客","url":"https://dotnet9.com","title":"访问主页","introduction":"一个热衷于互联网分享精神的个人博客站点","avatar":"https://img.dotnet9.com/logo-foot.png"},{"name":"Macchiato","url":"https://hcj123123.oschina.io","title":"访问主页","introduction":"java学习者","avatar":"https://y.gtimg.cn/music/photo_new/T002R300x300M000002qD7gF3fW0JL_1.jpg?max_age=2592000"},{"name":"过客~励む","url":"https://yafine-blog.cn","title":"访问主页","introduction":"你现在的努力，是为了以后有更多的选择。","avatar":"https://yafine-blog.cn/medias/avatar.jpg"},{"name":"meteorsh","url":"https://weisenhui.top","title":"访问主页","introduction":"Data Science & Engineering","avatar":"https://weisenhui.top/medias/avatar.jpg"},{"name":"Kuroko","url":"https://kuroko.info","title":"访问主页","introduction":"浓烟下的诗歌电台","avatar":"http://kuroko.info/wp-content/uploads/2020/11/2.jpg"}]}},"excerpt":"","more":"<p>Fly to <a href=\"https://github.com/OffcierCia/ultimate-defi-research-base#security--safety\" target=\"_blank\" rel=\"noopener\">Base Area</a></p>\n"},{"title":"关于知识图谱构建","top":false,"cover":false,"toc":true,"mathjax":true,"date":"2021-12-03T08:38:39.000Z","password":null,"summary":null,"_content":"\n# 写在前面\n\n从搜索引擎开始，到内容推荐、智能交互等众多领域，传统算法越来越难以满足用户需求的快速迭代。与人工智能相关技术的结合，上述领域的底层技术都与领域内知识图谱构建相关。\n知识图谱的概念是谷歌在2012年提出，应用于智能搜索领域，并且逐渐在学术界和工业界普及。随着信息服务应用的智能化需求越来越高，知识图谱已经广泛应用于智能搜索、智能问答、个性化推荐、舆情分析、艺术创作等领域。通过将互联网上的信息、数据以及关系聚集为知识，借助知识图谱存储引擎，更易于计算、理解与评价，并且形成一套语义知识库。知识图谱以其强大的语义处理能力与开放互联能力，可为知识互联奠定知识的基础。\n\n# 知识图谱定义\n\n知识图谱，是结构化的语义知识库，用于迅速描述物理世界中的概念及相互关系。\n知识图谱通过对错综复杂的文档数据进行有效加工、处理、整合，转化为简单、清晰的“实体，关系，实体”的三元组，最后聚合大量知识，从而实现知识的快速响应和推理。\n\n知识图谱有自顶向下和自底向上两种构建方式。自顶向下构建是借助百科类网站等结构化数据源，从高质量数据中提取本体和模式信息，加入到知识库中；自底向上构建是借助技术手段，从公开采集的数据中提取出资源模式，选择其中置信度较高的新模式，经人工审核之后，加入到知识库中。\n\n![知识图谱案例](kg_pic.jpeg)\n\n如上图所示，节点之间如果存在关系，会被一条无向边连接在一起，这个节点，我们称为 **实体（Entity）**，他们之间的边，称为 **关系（Relationship）**。\n\n知识图谱的基本单位，便是“实体（Entity）-关系（Relationship）-实体（Entity）”构成的三元组，这也是知识图谱的核心。\n\n+ 实体：是具有可区别性且独立存在的某种事物。实体是知识图谱中的最基本元素，不同的实体间存在不同的关系。如图中的“中国”、“北京”、“16410平方公里”等。\n+ 关系：关系是连接不同的实体，指代实体之间的联系。通过关系节点把知识图谱中的节点连接起来，形成一张大图。如途中的“人口”、“首都”、“面积”等。\n\n# 数据类型和存储方式\n\n知识图谱的原始数据类型一般来说有三类：\n+ **结构化数据（Structed Data）**：比如关系数据库数据\n+ **半结构化数据（Semi-Structed Data）**：XML、JSON、百科等\n+ **非结构化数据（UnStructed Data）**：图片、音频、视频、文本\n\n对于这三种数据类型的存储，可以有两种方法选择：\n+ 通过RDF（资源描述框架）这样的规范存储格式来进行存储\n\n```xml\n<RDF>\n    <Description about=\"http://www.w3school.com.cn/RDF\">\n        <author>David</author>\n        <homepage>http://www.w3school.com.cn</homepage>\n    </Description>\n</RDF>\n```\n\n+ 通过图数据库进行存储，如Neo4j等。\n![图数据库](neo4j.png)\n\n在知识图谱方面，图数据库比关系数据库灵活的多。在数据少的时候差别不大，但知识图谱复杂并且涉及到2、3层关联度查询时，图数据库的查询效率会比关系数据库的效率高出几千甚至几百万倍。\n\n# 知识图谱的架构\n\n架构可拆分为逻辑架构和技术架构。\n\n## 逻辑架构\n知识图谱在逻辑上可分为模式层与数据层两个层次。\n+ 模式层构建在数据层之上，是知识图谱的核心，通常采用本体库来管理知识图谱的模式层。本体是结构化知识库的概念模板，通过本体库而形成的知识库不仅层次结构较强，并且冗余程度较小。\n\n**模式层：实体-关系-实体，实体-属性-性值**\n\n+ 数据层主要是由一系列的事实组成，而知识将以事实为单位进行存储。如果用（实体1，关系，实体2）、（实体、属性、属性值）这样的三元组来表达事实，可选择图数据库作为存储介质，例如开源的Neo4j、Twitter的FlockDB、sones的GraphDB等。\n\n**数据层：比尔盖茨-妻子-梅琳达·盖茨，比尔盖茨-总裁-微软**\n\n## 技术架构\n\n知识图谱的整体架构如下图所示，其中虚线框内部分为知识图谱构建过程，同时也是知识图谱更新的过程。\n![知识图谱技术架构](kg_tech.png)\n\n1. 虚拟框的最左边是三种输入数据结构，结构化数据、半结构化数据、非结构化数据。这些数据可以来自任何地方，只要它对要构建的这个知识图谱有帮助。\n2. 虚拟框里面的是整个知识图谱的构建过程。其中主要包含了3个阶段，信息抽取、知识融合、知识加工。\n3. 最右边是生成的知识图谱，而且这个技术架构是循环往复，迭代更新的过程。知识图谱不是一次性生成，是慢慢积累的过程。\n+ 信息抽取：从各种类型的数据源中提取出实体、属性以及实体间的相互关系，在此基础上形成本体化的知识表达；\n+ 知识融合：在获得新知识之后，需要对其进行整合，以消除矛盾和歧义，比如某些实体可能有多种表达，某个特定称谓也许对应于多个不同的实体等；\n+ 知识加工：对于经过融合的新知识，需要经过质量评估之后（部分需要人工参与甄别），才能将合格的部分加入到知识库中，以确保知识库的质量。\n\n![知识图谱构建阶段划分](kg_tech_stage.png)\n\n从上图看出，知识图谱的构建，本质就是信息抽取（抓取、分词、词性）、知识融合（理解语义）、知识加工（表征）三个过程或模块。\n\n# 信息抽取\n信息抽取（information extraction）是知识图谱构建的第一步，其中的关键问题是如何从异构数据源中自动抽取信息。信息抽取是自动化的从结构化和非结构化数据（音频/视频/图片）中抽取实体（entity）、关系（relationship）以及属性（attribute）等结构化信息的技术。\n\n信息抽取涉及到的关键技术包括：实体抽取、关系抽取和属性抽取。\n\n## 实体抽取（entity extraction）\n实体抽取即命名实体识别（named entity recognition，NER），是指从文本数据集中自动识别出命名实体。实体抽取的质量（准确率和召回率）对知识获取效率和质量影响极大，因此是信息抽取中基础和关键部分。\n\n![实体抽取](kg_ner.jpeg)\n\n2012年Ling等人归纳出12种实体类别，并基于条件随机场CRF进行实体边界识别，最后采用自适应感知机算法实现了对实体的自动分类，取得了不错的效果。\n但是随着互联网内容的动态变化，采用人工预定义实体分类体系的方式难以适应需求，因此提出面向开放域的实体识别和分类研究。\n在面向开放域的实体识别和分类研究中，不需要（也不可能）为每个领域或者每个实体类别建立单独的语料库作为训练集。因此，该领域面临的主要挑战是如何从给定的少量实体实例中自动发现具有区分力的模型。\n一种思路是根据已知的实体实例进行特征建模，利用该模型处理海量数据集得到新的命名实体列表，然后针对新实体建模，迭代地生成实体标注语料库。\n另一种思路是利用搜索引擎的服务器日志，事先并不给出实体分类等信息，而是基于实体的语义特征从搜索日志中识别出命名实体，然后采用聚类算法对识别出的实体进行聚类。\n\n## 关系抽取（relation extraction）\n文本语料经过实体抽取，得到的是一系列离散的命名实体，为了得到语义信息，还需要从相关的语料中提取实体之间的关联关系，通过关联关系将实体（概念）联系起来，才能够形成网状的知识结构，研究关系抽取技术的目的，就是解决如何从文本语料中抽取实体间的关系这一基本问题。\n\n![关系抽取](kg_re.jpeg)\n\n关系抽取涉及到的技术环节包括：\n1. 人工构造语法和语义规则（模式匹配）\n2. 统计机器学习方法\n3. 基于特征向量或核函数的有监督学习方法\n4. 研究重点转向半监督和无监督\n5. 开始研究面相开放域的信息抽取方法\n6. 将面向开放域的信息抽取方法和面向封闭领域的传统方法结合\n\n## 属性抽取（attribute extraction）\n属性抽取的目标是从不同信息源中采集特定实体的属性信息。例如针对某个公众人物，可以从网络公开信息中得到其昵称、生日、国籍、教育背景等信息。属性抽取技术能够从多种数据来源中汇集这些信息，实现对实体属性的完整提取。\n\n1. 将实体的属性视作实体与属性值之间的一种名词性关系，将属性抽取任务转化为关系抽取任务。\n2. 基于规则和启发式算法，抽取结构化数据\n3. 基于百科类网站的半结构化数据，通过自动抽取生成训练语料，用于训练实体属性标注模型，然后将其应用于非结构化数据的实体属性抽取。\n4. 采用数据挖掘的方法直接从文本中挖掘实体属性和属性值之间的关系模式，据此实现对属性名和属性值在文本中的定位。\n\n# 知识融合\n\n![](kg_tech_stage.png)\n通过信息抽取，从原始非结构化和半结构化数据中获取到了实体、关系、以及实体的属性信息。\n这些实体和关系以及属性是信息碎片，知识融合的本质就是用正确的语义理解将碎片拼接（连接）起来，形成完整拼图。\n经过信息抽取，大量碎片是平行化存储的，缺乏层次和逻辑；同时还存在大量冗余和错误的碎片（信息）。\n知识融合就是为了解决这些问题，涉及到两部分技术框架：实体连接、知识合并。\n\n## 实体连接\n**实体连接（entity linking）**：是指对于从文本中抽取得到的实体对象，将其链接到知识库中对应正确实体对象的操作。\n基本思想是首先根据给定的实体项，从知识库中选出一组候选实体对象，然后通过相似度计算将给定的实体项链接到正确的实体对象。\n\n研究历史：\n1. 仅关注如何将文本中抽取到的实体链接到知识库中，忽视了位于同一文档的实体存在的语义联系。\n2. 开始关注利用实体的共现关系，同时将多个实体链接到知识库中。即集成实体链接（collective entity linking）。\n\n实体链接的流程：\n1. 从文本中通过实体抽取得到实体项\n2. 进行**实体消歧**和**共指消解**，判断知识库中的同名实体与之是否代表不同的含义以及知识库中是否存在其他命名实体与之表示相同的含义。\n3. 在确认知识库中对应的正确实体对象之后，将该实体项链接到知识库中对应实体。\n\n+ 实体消歧：解决同名实体产生歧义问题的技术，通过实体消歧，可以根据当前的语境，准确建立实体链接，实体消歧主要采用聚类算法。也可以看作基于上下文的分类问题，类似于词性消歧和词义消歧。\n\n+ 共指消解：解决多个指称项目对应同一实体对象的问题。在一次会话中，多个指称项可能指向的是同一实体对象。利用共指消解技术，可以将这些指称项关联（合并）到正确的实体对象，该问题在信息检索和自然语言处理等领域具有特殊的重要性。共指消解还有其他名字，如对象对齐、实体匹配和实体同义等。\n\n## 知识合并\n在构建知识图谱时，可以从第三方知识库产品或已有结构化数据获取知识输入。常见的知识合并需求有两个，一个是合并外部知识库，另一个是合并关系数据库。\n\n将外部知识库融合到本地知识库需要处理两个层面的问题：\n+ 数据层的融合，包括实体的指称、属性、关系以及所属类别等，主要的问题是如何避免实例以及关系冲突问题，造成不必要的冗余\n+ 模式层的融合，将新得到的本体融合到已有的本体库中\n\n合并关系数据库，也是知识图谱构建的重要环节，因为一般来说关系数据库是已经构建好的高质量内部知识源（大部分经过人工干预）。为了将这些结构化的历史数据融入到知识图谱中，可以采用资源描述框架（RDF）作为数据模型。学术界和工业界将数据转换过程称为 RDB2RDF，其实质就是将关系数据库的数据换成RDF的三元组数据。\n\n# 知识加工\n通过上面处理，通过信息抽取可以从原始语料库中提取出实体、关系和属性等知识要素，经过知识融合，消除实体指称项与实体对象之间的歧义，得到一系列基本的事实表达。\n然而事实本身并不等于知识，要想最终获得结构化、网络化的知识体系，还需要经历知识加工的过程。\n\n知识加工主要涉及3方面内容：本体构建、知识推理和质量评估。\n\n## 本体构建\n本体（ontology）是指工人的概念集合、概念框架，如人、事、物等。本体和实体的区别是实体是具象的，本体是抽象的。\n本体可以采用人工编辑的方式手动构建（借助本体编辑软件），也可以以数据驱动的自动化方式构建本体。因为人工方式构建工作量极大，因此主流的本体库构建，都是从一些面向特定领域的现有本体库出发，采用自动构建技术逐步扩展得到的，是一个迭代过程。\n\n自动化本体构建过程包含三个阶段：\n1. 实体并列关系相似度计算\n2. 实体上下位关系抽取\n3. 本体的生成\n\n看下面例子，当知识图谱刚填充“阿里巴巴”、“腾讯”、“手机”这三个实体的时候，一般认为三个之间并没有差别，但当它计算三个实体之间的相似度后，会发现阿里巴巴和腾讯相似度更高。这个例子就是自动化本体构建第一步的作用。\n\n经过第一步，知识图谱并不能知道阿里巴巴和手机这两个实体根本不属于同一类型。因此就需要实体上下位关系抽取这一步，经过上下位抽取，会生成第三步的本体。\n\n当三步结束后，知识图谱就能理解，阿里巴巴和腾讯属于公司这个实体下的细分实体，与手机是类目上的不同。\n\n![本体构建过程](kg_ontology.jpeg)\n\n## 知识推理\n本体构建完成后，知识图谱具备雏形。这个阶段的图谱，往往关系残缺现象严重，利用知识推理技术，去完成进一步的知识发现。\n\n我们可以发现：如果A是B的配偶，B是C的主席，C坐落于D，那么我们可以推理：A生活在D这个城市。\n根据这一规则，就可以去挖掘一下在图谱中，是否还存在其他的path满足这个条件，顺而将AD这两个实体关联起来。\n除此之外，还可以去思考，串联里有一环，B是C的主席，那么B是C的CEO、B是C的COO等一系列推理策略。\n\n当然知识推理的对象并不局限于实体间关系，也可以是实体属性值、本体的概念层次关系等。\n\n推理属性值：已知某实体的生日属性，就可以推理得到年龄属性；\n推理概念：已知（老虎、科、猫科）和（猫科、目、食肉目），则可以推理出（老虎、目、食肉目）\n\n这一块的算法主要分为三大类：\n+ 基于逻辑的推理\n+ 基于图的推理\n+ 基于深度学习的推理\n\n![推理算法总结](kg_tuili.jpeg)\n\n## 质量评估\n质量评估也是知识库构建技术的重要组成部分，意义在于对知识的置信度进行量化，通过舍弃置信度较低的知识来保证整体知识库的质量。\n\n# 知识更新\n\n从逻辑上看，知识库的更新包括**概念层的更新和数据层的更新**。\n概念层的更新是指新增数据后获得了新的概念，需要自动将新的概念添加到知识库的概念层中。\n数据层的更新主要是新增或更新实体、关系、属性值，对数据层进行更新需要考虑数据源的可靠性、数据的一致性（是否存在矛盾或冗余等问题）等可靠数据源，并选择在各数据源中出现频率高的事实和属性加入知识库。\n\n知识图谱的内容更新有两种方式：\n+ 全面更新：指以更新后的全部数据为输入，从零开始构建知识图谱。方法简单但消耗极大，同时可能需要人工维护；\n+ 增量更新：以新增数据为输入，向现有知识图谱中添加新增知识。方法消耗小但算法复杂度高，也需要大量人工干预（定义规则等）。\n\n# 总结\n通过知识图谱，不仅可以将互联网信息表达成更接近人类认知世界的形式，而且提供了一种更好的组织、管理和利用海量信息的方式。目前的知识图谱技术主要用于**智能语义搜索**、**移动个人助理（如Siri）**、**深度问答系统（Watson）**，支撑这些应用的核心技术就是知识图谱技术。\n\n在智能语义搜索中，当用户发起查询时，搜索引擎会借助知识图谱的帮助对用户查询的关键词进行解析和推理，进而将其映射到知识图谱中的一个或一组概念上，然后解析知识图谱的概念层次结构，向用户返回图形化的知识结构，这就是我们在google和baidu搜索结果中看到的知识卡片。\n\n在深度问答应用中，系统同样会首先在知识图谱的帮助下对用户使用自然语言提出的问题进行语义分析和语法分析，进而将其转化成结构化形式的查询语句，然后在知识图谱中查询答案。\n比如，用户提问：“如何判断是否感染了某种病毒？”，则查询会被等价变换为“某种病毒的症状”，然后在进行推理变换，最终形成等价的三元组查询语句，如（病毒、症状、？）和（病毒、征兆、？）等。如果由于知识库不完善而无法通过推理解答用户的问题，深度问答系统会利用搜索引擎向用户反馈搜索结构，同时根据搜索结果更新知识库，从而为回答后续的提问做出准备。\n\n[原文链接](https://www.cnblogs.com/huangyc/p/10043749.html)","source":"_posts/knowledge-graph.md","raw":"---\ntitle: 关于知识图谱构建\ntop: false\ncover: false\ntoc: true\nmathjax: true\ndate: 2021-12-03 16:38:39\npassword:\nsummary:\ntags:\n- 知识图谱\n- 信息抽取\n- 知识融合\n- 知识加工\ncategories:\n- 算法\n- NLP\n---\n\n# 写在前面\n\n从搜索引擎开始，到内容推荐、智能交互等众多领域，传统算法越来越难以满足用户需求的快速迭代。与人工智能相关技术的结合，上述领域的底层技术都与领域内知识图谱构建相关。\n知识图谱的概念是谷歌在2012年提出，应用于智能搜索领域，并且逐渐在学术界和工业界普及。随着信息服务应用的智能化需求越来越高，知识图谱已经广泛应用于智能搜索、智能问答、个性化推荐、舆情分析、艺术创作等领域。通过将互联网上的信息、数据以及关系聚集为知识，借助知识图谱存储引擎，更易于计算、理解与评价，并且形成一套语义知识库。知识图谱以其强大的语义处理能力与开放互联能力，可为知识互联奠定知识的基础。\n\n# 知识图谱定义\n\n知识图谱，是结构化的语义知识库，用于迅速描述物理世界中的概念及相互关系。\n知识图谱通过对错综复杂的文档数据进行有效加工、处理、整合，转化为简单、清晰的“实体，关系，实体”的三元组，最后聚合大量知识，从而实现知识的快速响应和推理。\n\n知识图谱有自顶向下和自底向上两种构建方式。自顶向下构建是借助百科类网站等结构化数据源，从高质量数据中提取本体和模式信息，加入到知识库中；自底向上构建是借助技术手段，从公开采集的数据中提取出资源模式，选择其中置信度较高的新模式，经人工审核之后，加入到知识库中。\n\n![知识图谱案例](kg_pic.jpeg)\n\n如上图所示，节点之间如果存在关系，会被一条无向边连接在一起，这个节点，我们称为 **实体（Entity）**，他们之间的边，称为 **关系（Relationship）**。\n\n知识图谱的基本单位，便是“实体（Entity）-关系（Relationship）-实体（Entity）”构成的三元组，这也是知识图谱的核心。\n\n+ 实体：是具有可区别性且独立存在的某种事物。实体是知识图谱中的最基本元素，不同的实体间存在不同的关系。如图中的“中国”、“北京”、“16410平方公里”等。\n+ 关系：关系是连接不同的实体，指代实体之间的联系。通过关系节点把知识图谱中的节点连接起来，形成一张大图。如途中的“人口”、“首都”、“面积”等。\n\n# 数据类型和存储方式\n\n知识图谱的原始数据类型一般来说有三类：\n+ **结构化数据（Structed Data）**：比如关系数据库数据\n+ **半结构化数据（Semi-Structed Data）**：XML、JSON、百科等\n+ **非结构化数据（UnStructed Data）**：图片、音频、视频、文本\n\n对于这三种数据类型的存储，可以有两种方法选择：\n+ 通过RDF（资源描述框架）这样的规范存储格式来进行存储\n\n```xml\n<RDF>\n    <Description about=\"http://www.w3school.com.cn/RDF\">\n        <author>David</author>\n        <homepage>http://www.w3school.com.cn</homepage>\n    </Description>\n</RDF>\n```\n\n+ 通过图数据库进行存储，如Neo4j等。\n![图数据库](neo4j.png)\n\n在知识图谱方面，图数据库比关系数据库灵活的多。在数据少的时候差别不大，但知识图谱复杂并且涉及到2、3层关联度查询时，图数据库的查询效率会比关系数据库的效率高出几千甚至几百万倍。\n\n# 知识图谱的架构\n\n架构可拆分为逻辑架构和技术架构。\n\n## 逻辑架构\n知识图谱在逻辑上可分为模式层与数据层两个层次。\n+ 模式层构建在数据层之上，是知识图谱的核心，通常采用本体库来管理知识图谱的模式层。本体是结构化知识库的概念模板，通过本体库而形成的知识库不仅层次结构较强，并且冗余程度较小。\n\n**模式层：实体-关系-实体，实体-属性-性值**\n\n+ 数据层主要是由一系列的事实组成，而知识将以事实为单位进行存储。如果用（实体1，关系，实体2）、（实体、属性、属性值）这样的三元组来表达事实，可选择图数据库作为存储介质，例如开源的Neo4j、Twitter的FlockDB、sones的GraphDB等。\n\n**数据层：比尔盖茨-妻子-梅琳达·盖茨，比尔盖茨-总裁-微软**\n\n## 技术架构\n\n知识图谱的整体架构如下图所示，其中虚线框内部分为知识图谱构建过程，同时也是知识图谱更新的过程。\n![知识图谱技术架构](kg_tech.png)\n\n1. 虚拟框的最左边是三种输入数据结构，结构化数据、半结构化数据、非结构化数据。这些数据可以来自任何地方，只要它对要构建的这个知识图谱有帮助。\n2. 虚拟框里面的是整个知识图谱的构建过程。其中主要包含了3个阶段，信息抽取、知识融合、知识加工。\n3. 最右边是生成的知识图谱，而且这个技术架构是循环往复，迭代更新的过程。知识图谱不是一次性生成，是慢慢积累的过程。\n+ 信息抽取：从各种类型的数据源中提取出实体、属性以及实体间的相互关系，在此基础上形成本体化的知识表达；\n+ 知识融合：在获得新知识之后，需要对其进行整合，以消除矛盾和歧义，比如某些实体可能有多种表达，某个特定称谓也许对应于多个不同的实体等；\n+ 知识加工：对于经过融合的新知识，需要经过质量评估之后（部分需要人工参与甄别），才能将合格的部分加入到知识库中，以确保知识库的质量。\n\n![知识图谱构建阶段划分](kg_tech_stage.png)\n\n从上图看出，知识图谱的构建，本质就是信息抽取（抓取、分词、词性）、知识融合（理解语义）、知识加工（表征）三个过程或模块。\n\n# 信息抽取\n信息抽取（information extraction）是知识图谱构建的第一步，其中的关键问题是如何从异构数据源中自动抽取信息。信息抽取是自动化的从结构化和非结构化数据（音频/视频/图片）中抽取实体（entity）、关系（relationship）以及属性（attribute）等结构化信息的技术。\n\n信息抽取涉及到的关键技术包括：实体抽取、关系抽取和属性抽取。\n\n## 实体抽取（entity extraction）\n实体抽取即命名实体识别（named entity recognition，NER），是指从文本数据集中自动识别出命名实体。实体抽取的质量（准确率和召回率）对知识获取效率和质量影响极大，因此是信息抽取中基础和关键部分。\n\n![实体抽取](kg_ner.jpeg)\n\n2012年Ling等人归纳出12种实体类别，并基于条件随机场CRF进行实体边界识别，最后采用自适应感知机算法实现了对实体的自动分类，取得了不错的效果。\n但是随着互联网内容的动态变化，采用人工预定义实体分类体系的方式难以适应需求，因此提出面向开放域的实体识别和分类研究。\n在面向开放域的实体识别和分类研究中，不需要（也不可能）为每个领域或者每个实体类别建立单独的语料库作为训练集。因此，该领域面临的主要挑战是如何从给定的少量实体实例中自动发现具有区分力的模型。\n一种思路是根据已知的实体实例进行特征建模，利用该模型处理海量数据集得到新的命名实体列表，然后针对新实体建模，迭代地生成实体标注语料库。\n另一种思路是利用搜索引擎的服务器日志，事先并不给出实体分类等信息，而是基于实体的语义特征从搜索日志中识别出命名实体，然后采用聚类算法对识别出的实体进行聚类。\n\n## 关系抽取（relation extraction）\n文本语料经过实体抽取，得到的是一系列离散的命名实体，为了得到语义信息，还需要从相关的语料中提取实体之间的关联关系，通过关联关系将实体（概念）联系起来，才能够形成网状的知识结构，研究关系抽取技术的目的，就是解决如何从文本语料中抽取实体间的关系这一基本问题。\n\n![关系抽取](kg_re.jpeg)\n\n关系抽取涉及到的技术环节包括：\n1. 人工构造语法和语义规则（模式匹配）\n2. 统计机器学习方法\n3. 基于特征向量或核函数的有监督学习方法\n4. 研究重点转向半监督和无监督\n5. 开始研究面相开放域的信息抽取方法\n6. 将面向开放域的信息抽取方法和面向封闭领域的传统方法结合\n\n## 属性抽取（attribute extraction）\n属性抽取的目标是从不同信息源中采集特定实体的属性信息。例如针对某个公众人物，可以从网络公开信息中得到其昵称、生日、国籍、教育背景等信息。属性抽取技术能够从多种数据来源中汇集这些信息，实现对实体属性的完整提取。\n\n1. 将实体的属性视作实体与属性值之间的一种名词性关系，将属性抽取任务转化为关系抽取任务。\n2. 基于规则和启发式算法，抽取结构化数据\n3. 基于百科类网站的半结构化数据，通过自动抽取生成训练语料，用于训练实体属性标注模型，然后将其应用于非结构化数据的实体属性抽取。\n4. 采用数据挖掘的方法直接从文本中挖掘实体属性和属性值之间的关系模式，据此实现对属性名和属性值在文本中的定位。\n\n# 知识融合\n\n![](kg_tech_stage.png)\n通过信息抽取，从原始非结构化和半结构化数据中获取到了实体、关系、以及实体的属性信息。\n这些实体和关系以及属性是信息碎片，知识融合的本质就是用正确的语义理解将碎片拼接（连接）起来，形成完整拼图。\n经过信息抽取，大量碎片是平行化存储的，缺乏层次和逻辑；同时还存在大量冗余和错误的碎片（信息）。\n知识融合就是为了解决这些问题，涉及到两部分技术框架：实体连接、知识合并。\n\n## 实体连接\n**实体连接（entity linking）**：是指对于从文本中抽取得到的实体对象，将其链接到知识库中对应正确实体对象的操作。\n基本思想是首先根据给定的实体项，从知识库中选出一组候选实体对象，然后通过相似度计算将给定的实体项链接到正确的实体对象。\n\n研究历史：\n1. 仅关注如何将文本中抽取到的实体链接到知识库中，忽视了位于同一文档的实体存在的语义联系。\n2. 开始关注利用实体的共现关系，同时将多个实体链接到知识库中。即集成实体链接（collective entity linking）。\n\n实体链接的流程：\n1. 从文本中通过实体抽取得到实体项\n2. 进行**实体消歧**和**共指消解**，判断知识库中的同名实体与之是否代表不同的含义以及知识库中是否存在其他命名实体与之表示相同的含义。\n3. 在确认知识库中对应的正确实体对象之后，将该实体项链接到知识库中对应实体。\n\n+ 实体消歧：解决同名实体产生歧义问题的技术，通过实体消歧，可以根据当前的语境，准确建立实体链接，实体消歧主要采用聚类算法。也可以看作基于上下文的分类问题，类似于词性消歧和词义消歧。\n\n+ 共指消解：解决多个指称项目对应同一实体对象的问题。在一次会话中，多个指称项可能指向的是同一实体对象。利用共指消解技术，可以将这些指称项关联（合并）到正确的实体对象，该问题在信息检索和自然语言处理等领域具有特殊的重要性。共指消解还有其他名字，如对象对齐、实体匹配和实体同义等。\n\n## 知识合并\n在构建知识图谱时，可以从第三方知识库产品或已有结构化数据获取知识输入。常见的知识合并需求有两个，一个是合并外部知识库，另一个是合并关系数据库。\n\n将外部知识库融合到本地知识库需要处理两个层面的问题：\n+ 数据层的融合，包括实体的指称、属性、关系以及所属类别等，主要的问题是如何避免实例以及关系冲突问题，造成不必要的冗余\n+ 模式层的融合，将新得到的本体融合到已有的本体库中\n\n合并关系数据库，也是知识图谱构建的重要环节，因为一般来说关系数据库是已经构建好的高质量内部知识源（大部分经过人工干预）。为了将这些结构化的历史数据融入到知识图谱中，可以采用资源描述框架（RDF）作为数据模型。学术界和工业界将数据转换过程称为 RDB2RDF，其实质就是将关系数据库的数据换成RDF的三元组数据。\n\n# 知识加工\n通过上面处理，通过信息抽取可以从原始语料库中提取出实体、关系和属性等知识要素，经过知识融合，消除实体指称项与实体对象之间的歧义，得到一系列基本的事实表达。\n然而事实本身并不等于知识，要想最终获得结构化、网络化的知识体系，还需要经历知识加工的过程。\n\n知识加工主要涉及3方面内容：本体构建、知识推理和质量评估。\n\n## 本体构建\n本体（ontology）是指工人的概念集合、概念框架，如人、事、物等。本体和实体的区别是实体是具象的，本体是抽象的。\n本体可以采用人工编辑的方式手动构建（借助本体编辑软件），也可以以数据驱动的自动化方式构建本体。因为人工方式构建工作量极大，因此主流的本体库构建，都是从一些面向特定领域的现有本体库出发，采用自动构建技术逐步扩展得到的，是一个迭代过程。\n\n自动化本体构建过程包含三个阶段：\n1. 实体并列关系相似度计算\n2. 实体上下位关系抽取\n3. 本体的生成\n\n看下面例子，当知识图谱刚填充“阿里巴巴”、“腾讯”、“手机”这三个实体的时候，一般认为三个之间并没有差别，但当它计算三个实体之间的相似度后，会发现阿里巴巴和腾讯相似度更高。这个例子就是自动化本体构建第一步的作用。\n\n经过第一步，知识图谱并不能知道阿里巴巴和手机这两个实体根本不属于同一类型。因此就需要实体上下位关系抽取这一步，经过上下位抽取，会生成第三步的本体。\n\n当三步结束后，知识图谱就能理解，阿里巴巴和腾讯属于公司这个实体下的细分实体，与手机是类目上的不同。\n\n![本体构建过程](kg_ontology.jpeg)\n\n## 知识推理\n本体构建完成后，知识图谱具备雏形。这个阶段的图谱，往往关系残缺现象严重，利用知识推理技术，去完成进一步的知识发现。\n\n我们可以发现：如果A是B的配偶，B是C的主席，C坐落于D，那么我们可以推理：A生活在D这个城市。\n根据这一规则，就可以去挖掘一下在图谱中，是否还存在其他的path满足这个条件，顺而将AD这两个实体关联起来。\n除此之外，还可以去思考，串联里有一环，B是C的主席，那么B是C的CEO、B是C的COO等一系列推理策略。\n\n当然知识推理的对象并不局限于实体间关系，也可以是实体属性值、本体的概念层次关系等。\n\n推理属性值：已知某实体的生日属性，就可以推理得到年龄属性；\n推理概念：已知（老虎、科、猫科）和（猫科、目、食肉目），则可以推理出（老虎、目、食肉目）\n\n这一块的算法主要分为三大类：\n+ 基于逻辑的推理\n+ 基于图的推理\n+ 基于深度学习的推理\n\n![推理算法总结](kg_tuili.jpeg)\n\n## 质量评估\n质量评估也是知识库构建技术的重要组成部分，意义在于对知识的置信度进行量化，通过舍弃置信度较低的知识来保证整体知识库的质量。\n\n# 知识更新\n\n从逻辑上看，知识库的更新包括**概念层的更新和数据层的更新**。\n概念层的更新是指新增数据后获得了新的概念，需要自动将新的概念添加到知识库的概念层中。\n数据层的更新主要是新增或更新实体、关系、属性值，对数据层进行更新需要考虑数据源的可靠性、数据的一致性（是否存在矛盾或冗余等问题）等可靠数据源，并选择在各数据源中出现频率高的事实和属性加入知识库。\n\n知识图谱的内容更新有两种方式：\n+ 全面更新：指以更新后的全部数据为输入，从零开始构建知识图谱。方法简单但消耗极大，同时可能需要人工维护；\n+ 增量更新：以新增数据为输入，向现有知识图谱中添加新增知识。方法消耗小但算法复杂度高，也需要大量人工干预（定义规则等）。\n\n# 总结\n通过知识图谱，不仅可以将互联网信息表达成更接近人类认知世界的形式，而且提供了一种更好的组织、管理和利用海量信息的方式。目前的知识图谱技术主要用于**智能语义搜索**、**移动个人助理（如Siri）**、**深度问答系统（Watson）**，支撑这些应用的核心技术就是知识图谱技术。\n\n在智能语义搜索中，当用户发起查询时，搜索引擎会借助知识图谱的帮助对用户查询的关键词进行解析和推理，进而将其映射到知识图谱中的一个或一组概念上，然后解析知识图谱的概念层次结构，向用户返回图形化的知识结构，这就是我们在google和baidu搜索结果中看到的知识卡片。\n\n在深度问答应用中，系统同样会首先在知识图谱的帮助下对用户使用自然语言提出的问题进行语义分析和语法分析，进而将其转化成结构化形式的查询语句，然后在知识图谱中查询答案。\n比如，用户提问：“如何判断是否感染了某种病毒？”，则查询会被等价变换为“某种病毒的症状”，然后在进行推理变换，最终形成等价的三元组查询语句，如（病毒、症状、？）和（病毒、征兆、？）等。如果由于知识库不完善而无法通过推理解答用户的问题，深度问答系统会利用搜索引擎向用户反馈搜索结构，同时根据搜索结果更新知识库，从而为回答后续的提问做出准备。\n\n[原文链接](https://www.cnblogs.com/huangyc/p/10043749.html)","slug":"knowledge-graph","published":1,"updated":"2021-12-06T03:46:13.954Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl10m9kgq000bduwgpyyazjba","content":"<h1 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h1><p>从搜索引擎开始，到内容推荐、智能交互等众多领域，传统算法越来越难以满足用户需求的快速迭代。与人工智能相关技术的结合，上述领域的底层技术都与领域内知识图谱构建相关。<br>知识图谱的概念是谷歌在2012年提出，应用于智能搜索领域，并且逐渐在学术界和工业界普及。随着信息服务应用的智能化需求越来越高，知识图谱已经广泛应用于智能搜索、智能问答、个性化推荐、舆情分析、艺术创作等领域。通过将互联网上的信息、数据以及关系聚集为知识，借助知识图谱存储引擎，更易于计算、理解与评价，并且形成一套语义知识库。知识图谱以其强大的语义处理能力与开放互联能力，可为知识互联奠定知识的基础。</p>\n<h1 id=\"知识图谱定义\"><a href=\"#知识图谱定义\" class=\"headerlink\" title=\"知识图谱定义\"></a>知识图谱定义</h1><p>知识图谱，是结构化的语义知识库，用于迅速描述物理世界中的概念及相互关系。<br>知识图谱通过对错综复杂的文档数据进行有效加工、处理、整合，转化为简单、清晰的“实体，关系，实体”的三元组，最后聚合大量知识，从而实现知识的快速响应和推理。</p>\n<p>知识图谱有自顶向下和自底向上两种构建方式。自顶向下构建是借助百科类网站等结构化数据源，从高质量数据中提取本体和模式信息，加入到知识库中；自底向上构建是借助技术手段，从公开采集的数据中提取出资源模式，选择其中置信度较高的新模式，经人工审核之后，加入到知识库中。</p>\n<p><img src=\"kg_pic.jpeg\" alt=\"知识图谱案例\"></p>\n<p>如上图所示，节点之间如果存在关系，会被一条无向边连接在一起，这个节点，我们称为 <strong>实体（Entity）</strong>，他们之间的边，称为 <strong>关系（Relationship）</strong>。</p>\n<p>知识图谱的基本单位，便是“实体（Entity）-关系（Relationship）-实体（Entity）”构成的三元组，这也是知识图谱的核心。</p>\n<ul>\n<li>实体：是具有可区别性且独立存在的某种事物。实体是知识图谱中的最基本元素，不同的实体间存在不同的关系。如图中的“中国”、“北京”、“16410平方公里”等。</li>\n<li>关系：关系是连接不同的实体，指代实体之间的联系。通过关系节点把知识图谱中的节点连接起来，形成一张大图。如途中的“人口”、“首都”、“面积”等。</li>\n</ul>\n<h1 id=\"数据类型和存储方式\"><a href=\"#数据类型和存储方式\" class=\"headerlink\" title=\"数据类型和存储方式\"></a>数据类型和存储方式</h1><p>知识图谱的原始数据类型一般来说有三类：</p>\n<ul>\n<li><strong>结构化数据（Structed Data）</strong>：比如关系数据库数据</li>\n<li><strong>半结构化数据（Semi-Structed Data）</strong>：XML、JSON、百科等</li>\n<li><strong>非结构化数据（UnStructed Data）</strong>：图片、音频、视频、文本</li>\n</ul>\n<p>对于这三种数据类型的存储，可以有两种方法选择：</p>\n<ul>\n<li>通过RDF（资源描述框架）这样的规范存储格式来进行存储</li>\n</ul>\n<pre class=\"line-numbers language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>RDF</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Description</span> <span class=\"token attr-name\">about</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>http://www.w3school.com.cn/RDF<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>author</span><span class=\"token punctuation\">></span></span>David<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>author</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>homepage</span><span class=\"token punctuation\">></span></span>http://www.w3school.com.cn<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>homepage</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Description</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>RDF</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li>通过图数据库进行存储，如Neo4j等。<br><img src=\"neo4j.png\" alt=\"图数据库\"></li>\n</ul>\n<p>在知识图谱方面，图数据库比关系数据库灵活的多。在数据少的时候差别不大，但知识图谱复杂并且涉及到2、3层关联度查询时，图数据库的查询效率会比关系数据库的效率高出几千甚至几百万倍。</p>\n<h1 id=\"知识图谱的架构\"><a href=\"#知识图谱的架构\" class=\"headerlink\" title=\"知识图谱的架构\"></a>知识图谱的架构</h1><p>架构可拆分为逻辑架构和技术架构。</p>\n<h2 id=\"逻辑架构\"><a href=\"#逻辑架构\" class=\"headerlink\" title=\"逻辑架构\"></a>逻辑架构</h2><p>知识图谱在逻辑上可分为模式层与数据层两个层次。</p>\n<ul>\n<li>模式层构建在数据层之上，是知识图谱的核心，通常采用本体库来管理知识图谱的模式层。本体是结构化知识库的概念模板，通过本体库而形成的知识库不仅层次结构较强，并且冗余程度较小。</li>\n</ul>\n<p><strong>模式层：实体-关系-实体，实体-属性-性值</strong></p>\n<ul>\n<li>数据层主要是由一系列的事实组成，而知识将以事实为单位进行存储。如果用（实体1，关系，实体2）、（实体、属性、属性值）这样的三元组来表达事实，可选择图数据库作为存储介质，例如开源的Neo4j、Twitter的FlockDB、sones的GraphDB等。</li>\n</ul>\n<p><strong>数据层：比尔盖茨-妻子-梅琳达·盖茨，比尔盖茨-总裁-微软</strong></p>\n<h2 id=\"技术架构\"><a href=\"#技术架构\" class=\"headerlink\" title=\"技术架构\"></a>技术架构</h2><p>知识图谱的整体架构如下图所示，其中虚线框内部分为知识图谱构建过程，同时也是知识图谱更新的过程。<br><img src=\"kg_tech.png\" alt=\"知识图谱技术架构\"></p>\n<ol>\n<li>虚拟框的最左边是三种输入数据结构，结构化数据、半结构化数据、非结构化数据。这些数据可以来自任何地方，只要它对要构建的这个知识图谱有帮助。</li>\n<li>虚拟框里面的是整个知识图谱的构建过程。其中主要包含了3个阶段，信息抽取、知识融合、知识加工。</li>\n<li>最右边是生成的知识图谱，而且这个技术架构是循环往复，迭代更新的过程。知识图谱不是一次性生成，是慢慢积累的过程。</li>\n</ol>\n<ul>\n<li>信息抽取：从各种类型的数据源中提取出实体、属性以及实体间的相互关系，在此基础上形成本体化的知识表达；</li>\n<li>知识融合：在获得新知识之后，需要对其进行整合，以消除矛盾和歧义，比如某些实体可能有多种表达，某个特定称谓也许对应于多个不同的实体等；</li>\n<li>知识加工：对于经过融合的新知识，需要经过质量评估之后（部分需要人工参与甄别），才能将合格的部分加入到知识库中，以确保知识库的质量。</li>\n</ul>\n<p><img src=\"kg_tech_stage.png\" alt=\"知识图谱构建阶段划分\"></p>\n<p>从上图看出，知识图谱的构建，本质就是信息抽取（抓取、分词、词性）、知识融合（理解语义）、知识加工（表征）三个过程或模块。</p>\n<h1 id=\"信息抽取\"><a href=\"#信息抽取\" class=\"headerlink\" title=\"信息抽取\"></a>信息抽取</h1><p>信息抽取（information extraction）是知识图谱构建的第一步，其中的关键问题是如何从异构数据源中自动抽取信息。信息抽取是自动化的从结构化和非结构化数据（音频/视频/图片）中抽取实体（entity）、关系（relationship）以及属性（attribute）等结构化信息的技术。</p>\n<p>信息抽取涉及到的关键技术包括：实体抽取、关系抽取和属性抽取。</p>\n<h2 id=\"实体抽取（entity-extraction）\"><a href=\"#实体抽取（entity-extraction）\" class=\"headerlink\" title=\"实体抽取（entity extraction）\"></a>实体抽取（entity extraction）</h2><p>实体抽取即命名实体识别（named entity recognition，NER），是指从文本数据集中自动识别出命名实体。实体抽取的质量（准确率和召回率）对知识获取效率和质量影响极大，因此是信息抽取中基础和关键部分。</p>\n<p><img src=\"kg_ner.jpeg\" alt=\"实体抽取\"></p>\n<p>2012年Ling等人归纳出12种实体类别，并基于条件随机场CRF进行实体边界识别，最后采用自适应感知机算法实现了对实体的自动分类，取得了不错的效果。<br>但是随着互联网内容的动态变化，采用人工预定义实体分类体系的方式难以适应需求，因此提出面向开放域的实体识别和分类研究。<br>在面向开放域的实体识别和分类研究中，不需要（也不可能）为每个领域或者每个实体类别建立单独的语料库作为训练集。因此，该领域面临的主要挑战是如何从给定的少量实体实例中自动发现具有区分力的模型。<br>一种思路是根据已知的实体实例进行特征建模，利用该模型处理海量数据集得到新的命名实体列表，然后针对新实体建模，迭代地生成实体标注语料库。<br>另一种思路是利用搜索引擎的服务器日志，事先并不给出实体分类等信息，而是基于实体的语义特征从搜索日志中识别出命名实体，然后采用聚类算法对识别出的实体进行聚类。</p>\n<h2 id=\"关系抽取（relation-extraction）\"><a href=\"#关系抽取（relation-extraction）\" class=\"headerlink\" title=\"关系抽取（relation extraction）\"></a>关系抽取（relation extraction）</h2><p>文本语料经过实体抽取，得到的是一系列离散的命名实体，为了得到语义信息，还需要从相关的语料中提取实体之间的关联关系，通过关联关系将实体（概念）联系起来，才能够形成网状的知识结构，研究关系抽取技术的目的，就是解决如何从文本语料中抽取实体间的关系这一基本问题。</p>\n<p><img src=\"kg_re.jpeg\" alt=\"关系抽取\"></p>\n<p>关系抽取涉及到的技术环节包括：</p>\n<ol>\n<li>人工构造语法和语义规则（模式匹配）</li>\n<li>统计机器学习方法</li>\n<li>基于特征向量或核函数的有监督学习方法</li>\n<li>研究重点转向半监督和无监督</li>\n<li>开始研究面相开放域的信息抽取方法</li>\n<li>将面向开放域的信息抽取方法和面向封闭领域的传统方法结合</li>\n</ol>\n<h2 id=\"属性抽取（attribute-extraction）\"><a href=\"#属性抽取（attribute-extraction）\" class=\"headerlink\" title=\"属性抽取（attribute extraction）\"></a>属性抽取（attribute extraction）</h2><p>属性抽取的目标是从不同信息源中采集特定实体的属性信息。例如针对某个公众人物，可以从网络公开信息中得到其昵称、生日、国籍、教育背景等信息。属性抽取技术能够从多种数据来源中汇集这些信息，实现对实体属性的完整提取。</p>\n<ol>\n<li>将实体的属性视作实体与属性值之间的一种名词性关系，将属性抽取任务转化为关系抽取任务。</li>\n<li>基于规则和启发式算法，抽取结构化数据</li>\n<li>基于百科类网站的半结构化数据，通过自动抽取生成训练语料，用于训练实体属性标注模型，然后将其应用于非结构化数据的实体属性抽取。</li>\n<li>采用数据挖掘的方法直接从文本中挖掘实体属性和属性值之间的关系模式，据此实现对属性名和属性值在文本中的定位。</li>\n</ol>\n<h1 id=\"知识融合\"><a href=\"#知识融合\" class=\"headerlink\" title=\"知识融合\"></a>知识融合</h1><p><img src=\"kg_tech_stage.png\" alt><br>通过信息抽取，从原始非结构化和半结构化数据中获取到了实体、关系、以及实体的属性信息。<br>这些实体和关系以及属性是信息碎片，知识融合的本质就是用正确的语义理解将碎片拼接（连接）起来，形成完整拼图。<br>经过信息抽取，大量碎片是平行化存储的，缺乏层次和逻辑；同时还存在大量冗余和错误的碎片（信息）。<br>知识融合就是为了解决这些问题，涉及到两部分技术框架：实体连接、知识合并。</p>\n<h2 id=\"实体连接\"><a href=\"#实体连接\" class=\"headerlink\" title=\"实体连接\"></a>实体连接</h2><p><strong>实体连接（entity linking）</strong>：是指对于从文本中抽取得到的实体对象，将其链接到知识库中对应正确实体对象的操作。<br>基本思想是首先根据给定的实体项，从知识库中选出一组候选实体对象，然后通过相似度计算将给定的实体项链接到正确的实体对象。</p>\n<p>研究历史：</p>\n<ol>\n<li>仅关注如何将文本中抽取到的实体链接到知识库中，忽视了位于同一文档的实体存在的语义联系。</li>\n<li>开始关注利用实体的共现关系，同时将多个实体链接到知识库中。即集成实体链接（collective entity linking）。</li>\n</ol>\n<p>实体链接的流程：</p>\n<ol>\n<li>从文本中通过实体抽取得到实体项</li>\n<li>进行<strong>实体消歧</strong>和<strong>共指消解</strong>，判断知识库中的同名实体与之是否代表不同的含义以及知识库中是否存在其他命名实体与之表示相同的含义。</li>\n<li>在确认知识库中对应的正确实体对象之后，将该实体项链接到知识库中对应实体。</li>\n</ol>\n<ul>\n<li><p>实体消歧：解决同名实体产生歧义问题的技术，通过实体消歧，可以根据当前的语境，准确建立实体链接，实体消歧主要采用聚类算法。也可以看作基于上下文的分类问题，类似于词性消歧和词义消歧。</p>\n</li>\n<li><p>共指消解：解决多个指称项目对应同一实体对象的问题。在一次会话中，多个指称项可能指向的是同一实体对象。利用共指消解技术，可以将这些指称项关联（合并）到正确的实体对象，该问题在信息检索和自然语言处理等领域具有特殊的重要性。共指消解还有其他名字，如对象对齐、实体匹配和实体同义等。</p>\n</li>\n</ul>\n<h2 id=\"知识合并\"><a href=\"#知识合并\" class=\"headerlink\" title=\"知识合并\"></a>知识合并</h2><p>在构建知识图谱时，可以从第三方知识库产品或已有结构化数据获取知识输入。常见的知识合并需求有两个，一个是合并外部知识库，另一个是合并关系数据库。</p>\n<p>将外部知识库融合到本地知识库需要处理两个层面的问题：</p>\n<ul>\n<li>数据层的融合，包括实体的指称、属性、关系以及所属类别等，主要的问题是如何避免实例以及关系冲突问题，造成不必要的冗余</li>\n<li>模式层的融合，将新得到的本体融合到已有的本体库中</li>\n</ul>\n<p>合并关系数据库，也是知识图谱构建的重要环节，因为一般来说关系数据库是已经构建好的高质量内部知识源（大部分经过人工干预）。为了将这些结构化的历史数据融入到知识图谱中，可以采用资源描述框架（RDF）作为数据模型。学术界和工业界将数据转换过程称为 RDB2RDF，其实质就是将关系数据库的数据换成RDF的三元组数据。</p>\n<h1 id=\"知识加工\"><a href=\"#知识加工\" class=\"headerlink\" title=\"知识加工\"></a>知识加工</h1><p>通过上面处理，通过信息抽取可以从原始语料库中提取出实体、关系和属性等知识要素，经过知识融合，消除实体指称项与实体对象之间的歧义，得到一系列基本的事实表达。<br>然而事实本身并不等于知识，要想最终获得结构化、网络化的知识体系，还需要经历知识加工的过程。</p>\n<p>知识加工主要涉及3方面内容：本体构建、知识推理和质量评估。</p>\n<h2 id=\"本体构建\"><a href=\"#本体构建\" class=\"headerlink\" title=\"本体构建\"></a>本体构建</h2><p>本体（ontology）是指工人的概念集合、概念框架，如人、事、物等。本体和实体的区别是实体是具象的，本体是抽象的。<br>本体可以采用人工编辑的方式手动构建（借助本体编辑软件），也可以以数据驱动的自动化方式构建本体。因为人工方式构建工作量极大，因此主流的本体库构建，都是从一些面向特定领域的现有本体库出发，采用自动构建技术逐步扩展得到的，是一个迭代过程。</p>\n<p>自动化本体构建过程包含三个阶段：</p>\n<ol>\n<li>实体并列关系相似度计算</li>\n<li>实体上下位关系抽取</li>\n<li>本体的生成</li>\n</ol>\n<p>看下面例子，当知识图谱刚填充“阿里巴巴”、“腾讯”、“手机”这三个实体的时候，一般认为三个之间并没有差别，但当它计算三个实体之间的相似度后，会发现阿里巴巴和腾讯相似度更高。这个例子就是自动化本体构建第一步的作用。</p>\n<p>经过第一步，知识图谱并不能知道阿里巴巴和手机这两个实体根本不属于同一类型。因此就需要实体上下位关系抽取这一步，经过上下位抽取，会生成第三步的本体。</p>\n<p>当三步结束后，知识图谱就能理解，阿里巴巴和腾讯属于公司这个实体下的细分实体，与手机是类目上的不同。</p>\n<p><img src=\"kg_ontology.jpeg\" alt=\"本体构建过程\"></p>\n<h2 id=\"知识推理\"><a href=\"#知识推理\" class=\"headerlink\" title=\"知识推理\"></a>知识推理</h2><p>本体构建完成后，知识图谱具备雏形。这个阶段的图谱，往往关系残缺现象严重，利用知识推理技术，去完成进一步的知识发现。</p>\n<p>我们可以发现：如果A是B的配偶，B是C的主席，C坐落于D，那么我们可以推理：A生活在D这个城市。<br>根据这一规则，就可以去挖掘一下在图谱中，是否还存在其他的path满足这个条件，顺而将AD这两个实体关联起来。<br>除此之外，还可以去思考，串联里有一环，B是C的主席，那么B是C的CEO、B是C的COO等一系列推理策略。</p>\n<p>当然知识推理的对象并不局限于实体间关系，也可以是实体属性值、本体的概念层次关系等。</p>\n<p>推理属性值：已知某实体的生日属性，就可以推理得到年龄属性；<br>推理概念：已知（老虎、科、猫科）和（猫科、目、食肉目），则可以推理出（老虎、目、食肉目）</p>\n<p>这一块的算法主要分为三大类：</p>\n<ul>\n<li>基于逻辑的推理</li>\n<li>基于图的推理</li>\n<li>基于深度学习的推理</li>\n</ul>\n<p><img src=\"kg_tuili.jpeg\" alt=\"推理算法总结\"></p>\n<h2 id=\"质量评估\"><a href=\"#质量评估\" class=\"headerlink\" title=\"质量评估\"></a>质量评估</h2><p>质量评估也是知识库构建技术的重要组成部分，意义在于对知识的置信度进行量化，通过舍弃置信度较低的知识来保证整体知识库的质量。</p>\n<h1 id=\"知识更新\"><a href=\"#知识更新\" class=\"headerlink\" title=\"知识更新\"></a>知识更新</h1><p>从逻辑上看，知识库的更新包括<strong>概念层的更新和数据层的更新</strong>。<br>概念层的更新是指新增数据后获得了新的概念，需要自动将新的概念添加到知识库的概念层中。<br>数据层的更新主要是新增或更新实体、关系、属性值，对数据层进行更新需要考虑数据源的可靠性、数据的一致性（是否存在矛盾或冗余等问题）等可靠数据源，并选择在各数据源中出现频率高的事实和属性加入知识库。</p>\n<p>知识图谱的内容更新有两种方式：</p>\n<ul>\n<li>全面更新：指以更新后的全部数据为输入，从零开始构建知识图谱。方法简单但消耗极大，同时可能需要人工维护；</li>\n<li>增量更新：以新增数据为输入，向现有知识图谱中添加新增知识。方法消耗小但算法复杂度高，也需要大量人工干预（定义规则等）。</li>\n</ul>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>通过知识图谱，不仅可以将互联网信息表达成更接近人类认知世界的形式，而且提供了一种更好的组织、管理和利用海量信息的方式。目前的知识图谱技术主要用于<strong>智能语义搜索</strong>、<strong>移动个人助理（如Siri）</strong>、<strong>深度问答系统（Watson）</strong>，支撑这些应用的核心技术就是知识图谱技术。</p>\n<p>在智能语义搜索中，当用户发起查询时，搜索引擎会借助知识图谱的帮助对用户查询的关键词进行解析和推理，进而将其映射到知识图谱中的一个或一组概念上，然后解析知识图谱的概念层次结构，向用户返回图形化的知识结构，这就是我们在google和baidu搜索结果中看到的知识卡片。</p>\n<p>在深度问答应用中，系统同样会首先在知识图谱的帮助下对用户使用自然语言提出的问题进行语义分析和语法分析，进而将其转化成结构化形式的查询语句，然后在知识图谱中查询答案。<br>比如，用户提问：“如何判断是否感染了某种病毒？”，则查询会被等价变换为“某种病毒的症状”，然后在进行推理变换，最终形成等价的三元组查询语句，如（病毒、症状、？）和（病毒、征兆、？）等。如果由于知识库不完善而无法通过推理解答用户的问题，深度问答系统会利用搜索引擎向用户反馈搜索结构，同时根据搜索结果更新知识库，从而为回答后续的提问做出准备。</p>\n<p><a href=\"https://www.cnblogs.com/huangyc/p/10043749.html\" target=\"_blank\" rel=\"noopener\">原文链接</a></p>\n","site":{"data":{"musics":[{"name":"夜曲","artist":"周杰伦","url":"/medias/music/yequ.mp3","cover":"/medias/music/avatars/yequ.jpg"},{"name":"一路向北","artist":"周杰伦","url":"/medias/music/yiluxiangbei.mp3","cover":"/medias/music/avatars/yiluxiangbei.jpg"},{"name":"来自天堂的魔鬼","artist":"邓紫棋","url":"/medias/music/tiantangdemogui.mp3","cover":"/medias/music/avatars/tiantangdemogui.jpg"},{"name":"倒数","artist":"邓紫棋","url":"/medias/music/daoshu.mp3","cover":"/medias/music/avatars/daoshu.jpg"}],"friends":[{"name":"知乎专栏","url":"https://zhuanlan.zhihu.com/godweiyang","title":"访问主页","introduction":"算法码上来","avatar":"/medias/avatars/myzhihu.png"},{"name":"火山翻译","url":"https://translate.volcengine.cn","title":"访问主页","introduction":"提供全球领先的翻译技术与服务","avatar":"/medias/avatars/bytedtrans.png"},{"name":"AntNLP","url":"https://antnlp.org","title":"访问主页","introduction":"华东师范大学自然语言处理实验室欢迎您的加入！","avatar":"/medias/avatars/antnlp.ico"},{"name":"IDS²","url":"https://www.smart-dependable-sino-europe.institute","title":"访问主页","introduction":"中欧可靠智能软件联合实验室欢迎您的加入！","avatar":"/medias/avatars/ids2.jpg"},{"name":"孙长志","url":"https://www.czsun.site","title":"访问主页","introduction":"AntNLP博士大师兄！","avatar":"/medias/avatars/sunchangzhi.jpg"},{"name":"纪焘","url":"https://taoji.site","title":"访问主页","introduction":"AntNLP博士带明星！","avatar":"/medias/avatars/jitao.jpg"},{"name":"杜雨沛","url":"https://yupei-du.github.io/","title":"访问主页","introduction":"AntNLP唱跳RAP打篮球全能师兄！","avatar":"/medias/avatars/duyupei.jpg"},{"name":"0xbirdpwn","url":"https://0xbird.top/","title":"访问主页","introduction":"十步杀一人，千里不留行，事了拂衣去，深藏功与名。","avatar":"/medias/avatars/0xbird.png"},{"name":"李佳倩的博客","url":"https://jiaqianlee.com/","title":"访问主页","introduction":"一只小白的成长之路！","avatar":"/medias/avatars/lijiaqian.png"},{"name":"kewlgrl","url":"https://blog.csdn.net/MIKASA3","title":"访问主页","introduction":"好大一只咸鱼哇","avatar":"/medias/avatars/kewlgrl.jpg"},{"name":"Think Far Blog","url":"https://wuli749826.github.io","title":"访问主页","introduction":"我曾经拥有这一切，转眼都飘散如烟。","avatar":"/medias/avatars/gsy.jpg"},{"name":"望城风景","url":"https://www.itaowei.cn/","title":"访问主页","introduction":"用力活过的日子，才配得上此刻的缅怀。","avatar":"/medias/avatars/taowei.jpg"},{"name":"jxtxzzw空间","url":"https://www.jxtxzzw.com/wordpress","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/zzw.jpg"},{"name":"DREAMWINGS","url":"https://www.dreamwings.cn/","title":"访问主页","introduction":"夢はそこでないと、私の権利である","avatar":"/medias/avatars/qianqian.png"},{"name":"ElaineLv","url":"https://www.elainelv.com/","title":"访问主页","introduction":"Stay hungry, Stay foolish","avatar":"/medias/avatars/lyn-draw.jpg"},{"name":"Subject_No_i","url":"https://subjectnoi.github.io","title":"访问主页","introduction":"在原七海 中野三玖 中野二乃 樱岛麻衣的老公","avatar":"/medias/avatars/lzh.png"},{"name":"菁菁","url":"https://angericky.github.io/","title":"访问主页","introduction":"做什么都是因为喜欢","avatar":"/medias/avatars/jingjing.jpg"},{"name":"Sweet-Q","url":"https://sweet-q.github.io","title":"访问主页","introduction":"华东师范大学数学系","avatar":"/medias/avatars/babyq.png"},{"name":"伟大的蚊子","url":"https://www.cnblogs.com/cww97/","title":"访问主页","introduction":"鼓楼的夜晚时间匆匆","avatar":"/medias/avatars/cww97.jpg"},{"name":"Fun4wut","url":"https://blog.fun4go.top","title":"访问主页","introduction":"菜鸡欢迎大佬的光顾","avatar":"/medias/avatars/fun4go.png"},{"name":"Hael Chan","url":"https://haelchan.me/","title":"访问主页","introduction":"浙江大学 & NLP & ML","avatar":"/medias/avatars/hael.jpg"},{"name":"happygirlzt","url":"https://www.happygirlzt.com","title":"访问主页","introduction":"A Backend Engineer","avatar":"/medias/avatars/zhangting.jpg"},{"name":"星空无限","url":"https://liyangzone.com","title":"访问主页","introduction":"前端开发，死飞大佬。分享技术，分享生活。","avatar":"/medias/avatars/liyangzone.jpg"},{"name":"Mashiro","url":"https://2heng.xin/","title":"访问主页","introduction":"樱花庄的白猫","avatar":"/medias/avatars/mashiro.jpg"},{"name":"hzwer","url":"https://hzwer.com/","title":"访问主页","introduction":"北京大学计算机系","avatar":"/medias/avatars/hzwer.jpg"},{"name":"MPY634","url":"https://mpy634.cn/","title":"访问主页","introduction":"摸鱼，永无止境。","avatar":"/medias/avatars/mpy634.png"},{"name":"徐铭辰的博客","url":"https://michaelxucs.com","title":"访问主页","introduction":"埃克塞特大学计算机系","avatar":"/medias/avatars/michael.jpg"},{"name":"Mizunashi","url":"https://mizunashi.me","title":"访问主页","introduction":"欢迎大佬们来玩","avatar":"/medias/avatars/mizunashi.png"},{"name":"xuzhongyou","url":"https://xuzhongyou.github.io/","title":"访问主页","introduction":"我哽咽道：你是赵默笙，可我不是何以琛啊。","avatar":"/medias/avatars/xuzhongyou.jpg"},{"name":"zerol","url":"https://zerol.me/","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/huaji.jpg"},{"name":"Zhang Yi","url":"https://codewithzhangyi.com/","title":"访问主页","introduction":"Coding is the New Sexy","avatar":"/medias/avatars/zhangyi.jpg"},{"name":"科学空间","url":"https://spaces.ac.cn/","title":"访问主页","introduction":"中山大学基础数学研究生","avatar":"/medias/avatars/spacesac.png"},{"name":"lucifer的博客","url":"https://lucifer.ren/blog/","title":"访问主页","introduction":"一个脑洞很大的程序员。","avatar":"https://tva1.sinaimg.cn/large/006tNbRwly1ga7ognflh9j30b40b4q3w.jpg"},{"name":"钱栋伟","url":"https://sscjwdyzdw.club","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/qiandongwei.jpg"},{"name":"CJ Blog","url":"https://chrisju.cn/","title":"访问主页","introduction":"Failing means foolish.","avatar":"/medias/avatars/mouse.jpg"},{"name":"Tawn","url":"https://tawn0000.github.io/","title":"访问主页","introduction":"JNU ACMer","avatar":"/medias/avatars/tawn.jpg"},{"name":"Master X","url":"https://masterx.top/","title":"访问主页","introduction":"ECNU&ML&DL","avatar":"/medias/avatars/masterx.jpg"},{"name":"分享客","url":"https://sharerdiary.com/","title":"访问主页","introduction":"爱生活，爱分享！","avatar":"/medias/avatars/yezijie.png"},{"name":"taotao","url":"https://zouzhitao.github.io","title":"访问主页","introduction":"taotao 码字的地方","avatar":"/medias/avatars/taotao.jpg"},{"name":"Xiejiadong","url":"https://xiejiadong.com","title":"访问主页","introduction":"Xiejiadong's blog","avatar":"/medias/avatars/xiejiadong.jpg"},{"name":"飞吧","url":"https://fei.bar","title":"访问主页","introduction":"啓飞的个人博客","avatar":"/medias/avatars/feibar.png"},{"name":"ajin","url":"https://ajin.cloud","title":"访问主页","introduction":"Always be enthusiastic","avatar":"/medias/avatars/ajin.jpg"},{"name":"Hiyoung","url":"https://hiyoungai.com/","title":"访问主页","introduction":"宠辱不惊，看庭前花开花落；去留无意，望天空云卷云舒。","avatar":"https://cdn.jsdelivr.net/gh/hiyoung123/cdn/img/avatar.jpg"},{"name":"无言的博客","url":"https://www.yzplove.top","title":"访问主页","introduction":"代码真是越敲越香","avatar":"https://cdn.jsdelivr.net/gh/yzp-99/yzp-99.github.io/medias/avatars/me.jpg"},{"name":"Naixin Zhang","url":"https://naixinzhang.github.io/","title":"访问主页","introduction":"Econ Master | Data Analyst/scientist Candidate","avatar":"https://naixinzhang.github.io/medias/avatars/avatar.jpg"},{"name":"帅张的梦呓","url":"https://ishuaizhang.com","title":"访问主页","introduction":"XDUer","avatar":"https://ishuaizhang.com/medias/avatars/avatar.jpg"},{"name":"Gatsby’s blog","url":"https://a347807131.github.io/","title":"访问主页","introduction":"Nothing perfect, Noting special.","avatar":"https://a347807131.github.io/medias/avatar.gif"},{"name":"宇宙湾","url":"https://yuzhouwan.com/","title":"访问主页","introduction":"主要是大数据和人工智能的原创文章。","avatar":"https://yuzhouwan.com/yuzhouwan_logo_128x128.ico"},{"name":"Dotnet9的博客","url":"https://dotnet9.com","title":"访问主页","introduction":"一个热衷于互联网分享精神的个人博客站点","avatar":"https://img.dotnet9.com/logo-foot.png"},{"name":"Macchiato","url":"https://hcj123123.oschina.io","title":"访问主页","introduction":"java学习者","avatar":"https://y.gtimg.cn/music/photo_new/T002R300x300M000002qD7gF3fW0JL_1.jpg?max_age=2592000"},{"name":"过客~励む","url":"https://yafine-blog.cn","title":"访问主页","introduction":"你现在的努力，是为了以后有更多的选择。","avatar":"https://yafine-blog.cn/medias/avatar.jpg"},{"name":"meteorsh","url":"https://weisenhui.top","title":"访问主页","introduction":"Data Science & Engineering","avatar":"https://weisenhui.top/medias/avatar.jpg"},{"name":"Kuroko","url":"https://kuroko.info","title":"访问主页","introduction":"浓烟下的诗歌电台","avatar":"http://kuroko.info/wp-content/uploads/2020/11/2.jpg"}]}},"excerpt":"","more":"<h1 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h1><p>从搜索引擎开始，到内容推荐、智能交互等众多领域，传统算法越来越难以满足用户需求的快速迭代。与人工智能相关技术的结合，上述领域的底层技术都与领域内知识图谱构建相关。<br>知识图谱的概念是谷歌在2012年提出，应用于智能搜索领域，并且逐渐在学术界和工业界普及。随着信息服务应用的智能化需求越来越高，知识图谱已经广泛应用于智能搜索、智能问答、个性化推荐、舆情分析、艺术创作等领域。通过将互联网上的信息、数据以及关系聚集为知识，借助知识图谱存储引擎，更易于计算、理解与评价，并且形成一套语义知识库。知识图谱以其强大的语义处理能力与开放互联能力，可为知识互联奠定知识的基础。</p>\n<h1 id=\"知识图谱定义\"><a href=\"#知识图谱定义\" class=\"headerlink\" title=\"知识图谱定义\"></a>知识图谱定义</h1><p>知识图谱，是结构化的语义知识库，用于迅速描述物理世界中的概念及相互关系。<br>知识图谱通过对错综复杂的文档数据进行有效加工、处理、整合，转化为简单、清晰的“实体，关系，实体”的三元组，最后聚合大量知识，从而实现知识的快速响应和推理。</p>\n<p>知识图谱有自顶向下和自底向上两种构建方式。自顶向下构建是借助百科类网站等结构化数据源，从高质量数据中提取本体和模式信息，加入到知识库中；自底向上构建是借助技术手段，从公开采集的数据中提取出资源模式，选择其中置信度较高的新模式，经人工审核之后，加入到知识库中。</p>\n<p><img src=\"kg_pic.jpeg\" alt=\"知识图谱案例\"></p>\n<p>如上图所示，节点之间如果存在关系，会被一条无向边连接在一起，这个节点，我们称为 <strong>实体（Entity）</strong>，他们之间的边，称为 <strong>关系（Relationship）</strong>。</p>\n<p>知识图谱的基本单位，便是“实体（Entity）-关系（Relationship）-实体（Entity）”构成的三元组，这也是知识图谱的核心。</p>\n<ul>\n<li>实体：是具有可区别性且独立存在的某种事物。实体是知识图谱中的最基本元素，不同的实体间存在不同的关系。如图中的“中国”、“北京”、“16410平方公里”等。</li>\n<li>关系：关系是连接不同的实体，指代实体之间的联系。通过关系节点把知识图谱中的节点连接起来，形成一张大图。如途中的“人口”、“首都”、“面积”等。</li>\n</ul>\n<h1 id=\"数据类型和存储方式\"><a href=\"#数据类型和存储方式\" class=\"headerlink\" title=\"数据类型和存储方式\"></a>数据类型和存储方式</h1><p>知识图谱的原始数据类型一般来说有三类：</p>\n<ul>\n<li><strong>结构化数据（Structed Data）</strong>：比如关系数据库数据</li>\n<li><strong>半结构化数据（Semi-Structed Data）</strong>：XML、JSON、百科等</li>\n<li><strong>非结构化数据（UnStructed Data）</strong>：图片、音频、视频、文本</li>\n</ul>\n<p>对于这三种数据类型的存储，可以有两种方法选择：</p>\n<ul>\n<li>通过RDF（资源描述框架）这样的规范存储格式来进行存储</li>\n</ul>\n<pre><code class=\"xml\">&lt;RDF&gt;\n    &lt;Description about=&quot;http://www.w3school.com.cn/RDF&quot;&gt;\n        &lt;author&gt;David&lt;/author&gt;\n        &lt;homepage&gt;http://www.w3school.com.cn&lt;/homepage&gt;\n    &lt;/Description&gt;\n&lt;/RDF&gt;</code></pre>\n<ul>\n<li>通过图数据库进行存储，如Neo4j等。<br><img src=\"neo4j.png\" alt=\"图数据库\"></li>\n</ul>\n<p>在知识图谱方面，图数据库比关系数据库灵活的多。在数据少的时候差别不大，但知识图谱复杂并且涉及到2、3层关联度查询时，图数据库的查询效率会比关系数据库的效率高出几千甚至几百万倍。</p>\n<h1 id=\"知识图谱的架构\"><a href=\"#知识图谱的架构\" class=\"headerlink\" title=\"知识图谱的架构\"></a>知识图谱的架构</h1><p>架构可拆分为逻辑架构和技术架构。</p>\n<h2 id=\"逻辑架构\"><a href=\"#逻辑架构\" class=\"headerlink\" title=\"逻辑架构\"></a>逻辑架构</h2><p>知识图谱在逻辑上可分为模式层与数据层两个层次。</p>\n<ul>\n<li>模式层构建在数据层之上，是知识图谱的核心，通常采用本体库来管理知识图谱的模式层。本体是结构化知识库的概念模板，通过本体库而形成的知识库不仅层次结构较强，并且冗余程度较小。</li>\n</ul>\n<p><strong>模式层：实体-关系-实体，实体-属性-性值</strong></p>\n<ul>\n<li>数据层主要是由一系列的事实组成，而知识将以事实为单位进行存储。如果用（实体1，关系，实体2）、（实体、属性、属性值）这样的三元组来表达事实，可选择图数据库作为存储介质，例如开源的Neo4j、Twitter的FlockDB、sones的GraphDB等。</li>\n</ul>\n<p><strong>数据层：比尔盖茨-妻子-梅琳达·盖茨，比尔盖茨-总裁-微软</strong></p>\n<h2 id=\"技术架构\"><a href=\"#技术架构\" class=\"headerlink\" title=\"技术架构\"></a>技术架构</h2><p>知识图谱的整体架构如下图所示，其中虚线框内部分为知识图谱构建过程，同时也是知识图谱更新的过程。<br><img src=\"kg_tech.png\" alt=\"知识图谱技术架构\"></p>\n<ol>\n<li>虚拟框的最左边是三种输入数据结构，结构化数据、半结构化数据、非结构化数据。这些数据可以来自任何地方，只要它对要构建的这个知识图谱有帮助。</li>\n<li>虚拟框里面的是整个知识图谱的构建过程。其中主要包含了3个阶段，信息抽取、知识融合、知识加工。</li>\n<li>最右边是生成的知识图谱，而且这个技术架构是循环往复，迭代更新的过程。知识图谱不是一次性生成，是慢慢积累的过程。</li>\n</ol>\n<ul>\n<li>信息抽取：从各种类型的数据源中提取出实体、属性以及实体间的相互关系，在此基础上形成本体化的知识表达；</li>\n<li>知识融合：在获得新知识之后，需要对其进行整合，以消除矛盾和歧义，比如某些实体可能有多种表达，某个特定称谓也许对应于多个不同的实体等；</li>\n<li>知识加工：对于经过融合的新知识，需要经过质量评估之后（部分需要人工参与甄别），才能将合格的部分加入到知识库中，以确保知识库的质量。</li>\n</ul>\n<p><img src=\"kg_tech_stage.png\" alt=\"知识图谱构建阶段划分\"></p>\n<p>从上图看出，知识图谱的构建，本质就是信息抽取（抓取、分词、词性）、知识融合（理解语义）、知识加工（表征）三个过程或模块。</p>\n<h1 id=\"信息抽取\"><a href=\"#信息抽取\" class=\"headerlink\" title=\"信息抽取\"></a>信息抽取</h1><p>信息抽取（information extraction）是知识图谱构建的第一步，其中的关键问题是如何从异构数据源中自动抽取信息。信息抽取是自动化的从结构化和非结构化数据（音频/视频/图片）中抽取实体（entity）、关系（relationship）以及属性（attribute）等结构化信息的技术。</p>\n<p>信息抽取涉及到的关键技术包括：实体抽取、关系抽取和属性抽取。</p>\n<h2 id=\"实体抽取（entity-extraction）\"><a href=\"#实体抽取（entity-extraction）\" class=\"headerlink\" title=\"实体抽取（entity extraction）\"></a>实体抽取（entity extraction）</h2><p>实体抽取即命名实体识别（named entity recognition，NER），是指从文本数据集中自动识别出命名实体。实体抽取的质量（准确率和召回率）对知识获取效率和质量影响极大，因此是信息抽取中基础和关键部分。</p>\n<p><img src=\"kg_ner.jpeg\" alt=\"实体抽取\"></p>\n<p>2012年Ling等人归纳出12种实体类别，并基于条件随机场CRF进行实体边界识别，最后采用自适应感知机算法实现了对实体的自动分类，取得了不错的效果。<br>但是随着互联网内容的动态变化，采用人工预定义实体分类体系的方式难以适应需求，因此提出面向开放域的实体识别和分类研究。<br>在面向开放域的实体识别和分类研究中，不需要（也不可能）为每个领域或者每个实体类别建立单独的语料库作为训练集。因此，该领域面临的主要挑战是如何从给定的少量实体实例中自动发现具有区分力的模型。<br>一种思路是根据已知的实体实例进行特征建模，利用该模型处理海量数据集得到新的命名实体列表，然后针对新实体建模，迭代地生成实体标注语料库。<br>另一种思路是利用搜索引擎的服务器日志，事先并不给出实体分类等信息，而是基于实体的语义特征从搜索日志中识别出命名实体，然后采用聚类算法对识别出的实体进行聚类。</p>\n<h2 id=\"关系抽取（relation-extraction）\"><a href=\"#关系抽取（relation-extraction）\" class=\"headerlink\" title=\"关系抽取（relation extraction）\"></a>关系抽取（relation extraction）</h2><p>文本语料经过实体抽取，得到的是一系列离散的命名实体，为了得到语义信息，还需要从相关的语料中提取实体之间的关联关系，通过关联关系将实体（概念）联系起来，才能够形成网状的知识结构，研究关系抽取技术的目的，就是解决如何从文本语料中抽取实体间的关系这一基本问题。</p>\n<p><img src=\"kg_re.jpeg\" alt=\"关系抽取\"></p>\n<p>关系抽取涉及到的技术环节包括：</p>\n<ol>\n<li>人工构造语法和语义规则（模式匹配）</li>\n<li>统计机器学习方法</li>\n<li>基于特征向量或核函数的有监督学习方法</li>\n<li>研究重点转向半监督和无监督</li>\n<li>开始研究面相开放域的信息抽取方法</li>\n<li>将面向开放域的信息抽取方法和面向封闭领域的传统方法结合</li>\n</ol>\n<h2 id=\"属性抽取（attribute-extraction）\"><a href=\"#属性抽取（attribute-extraction）\" class=\"headerlink\" title=\"属性抽取（attribute extraction）\"></a>属性抽取（attribute extraction）</h2><p>属性抽取的目标是从不同信息源中采集特定实体的属性信息。例如针对某个公众人物，可以从网络公开信息中得到其昵称、生日、国籍、教育背景等信息。属性抽取技术能够从多种数据来源中汇集这些信息，实现对实体属性的完整提取。</p>\n<ol>\n<li>将实体的属性视作实体与属性值之间的一种名词性关系，将属性抽取任务转化为关系抽取任务。</li>\n<li>基于规则和启发式算法，抽取结构化数据</li>\n<li>基于百科类网站的半结构化数据，通过自动抽取生成训练语料，用于训练实体属性标注模型，然后将其应用于非结构化数据的实体属性抽取。</li>\n<li>采用数据挖掘的方法直接从文本中挖掘实体属性和属性值之间的关系模式，据此实现对属性名和属性值在文本中的定位。</li>\n</ol>\n<h1 id=\"知识融合\"><a href=\"#知识融合\" class=\"headerlink\" title=\"知识融合\"></a>知识融合</h1><p><img src=\"kg_tech_stage.png\" alt><br>通过信息抽取，从原始非结构化和半结构化数据中获取到了实体、关系、以及实体的属性信息。<br>这些实体和关系以及属性是信息碎片，知识融合的本质就是用正确的语义理解将碎片拼接（连接）起来，形成完整拼图。<br>经过信息抽取，大量碎片是平行化存储的，缺乏层次和逻辑；同时还存在大量冗余和错误的碎片（信息）。<br>知识融合就是为了解决这些问题，涉及到两部分技术框架：实体连接、知识合并。</p>\n<h2 id=\"实体连接\"><a href=\"#实体连接\" class=\"headerlink\" title=\"实体连接\"></a>实体连接</h2><p><strong>实体连接（entity linking）</strong>：是指对于从文本中抽取得到的实体对象，将其链接到知识库中对应正确实体对象的操作。<br>基本思想是首先根据给定的实体项，从知识库中选出一组候选实体对象，然后通过相似度计算将给定的实体项链接到正确的实体对象。</p>\n<p>研究历史：</p>\n<ol>\n<li>仅关注如何将文本中抽取到的实体链接到知识库中，忽视了位于同一文档的实体存在的语义联系。</li>\n<li>开始关注利用实体的共现关系，同时将多个实体链接到知识库中。即集成实体链接（collective entity linking）。</li>\n</ol>\n<p>实体链接的流程：</p>\n<ol>\n<li>从文本中通过实体抽取得到实体项</li>\n<li>进行<strong>实体消歧</strong>和<strong>共指消解</strong>，判断知识库中的同名实体与之是否代表不同的含义以及知识库中是否存在其他命名实体与之表示相同的含义。</li>\n<li>在确认知识库中对应的正确实体对象之后，将该实体项链接到知识库中对应实体。</li>\n</ol>\n<ul>\n<li><p>实体消歧：解决同名实体产生歧义问题的技术，通过实体消歧，可以根据当前的语境，准确建立实体链接，实体消歧主要采用聚类算法。也可以看作基于上下文的分类问题，类似于词性消歧和词义消歧。</p>\n</li>\n<li><p>共指消解：解决多个指称项目对应同一实体对象的问题。在一次会话中，多个指称项可能指向的是同一实体对象。利用共指消解技术，可以将这些指称项关联（合并）到正确的实体对象，该问题在信息检索和自然语言处理等领域具有特殊的重要性。共指消解还有其他名字，如对象对齐、实体匹配和实体同义等。</p>\n</li>\n</ul>\n<h2 id=\"知识合并\"><a href=\"#知识合并\" class=\"headerlink\" title=\"知识合并\"></a>知识合并</h2><p>在构建知识图谱时，可以从第三方知识库产品或已有结构化数据获取知识输入。常见的知识合并需求有两个，一个是合并外部知识库，另一个是合并关系数据库。</p>\n<p>将外部知识库融合到本地知识库需要处理两个层面的问题：</p>\n<ul>\n<li>数据层的融合，包括实体的指称、属性、关系以及所属类别等，主要的问题是如何避免实例以及关系冲突问题，造成不必要的冗余</li>\n<li>模式层的融合，将新得到的本体融合到已有的本体库中</li>\n</ul>\n<p>合并关系数据库，也是知识图谱构建的重要环节，因为一般来说关系数据库是已经构建好的高质量内部知识源（大部分经过人工干预）。为了将这些结构化的历史数据融入到知识图谱中，可以采用资源描述框架（RDF）作为数据模型。学术界和工业界将数据转换过程称为 RDB2RDF，其实质就是将关系数据库的数据换成RDF的三元组数据。</p>\n<h1 id=\"知识加工\"><a href=\"#知识加工\" class=\"headerlink\" title=\"知识加工\"></a>知识加工</h1><p>通过上面处理，通过信息抽取可以从原始语料库中提取出实体、关系和属性等知识要素，经过知识融合，消除实体指称项与实体对象之间的歧义，得到一系列基本的事实表达。<br>然而事实本身并不等于知识，要想最终获得结构化、网络化的知识体系，还需要经历知识加工的过程。</p>\n<p>知识加工主要涉及3方面内容：本体构建、知识推理和质量评估。</p>\n<h2 id=\"本体构建\"><a href=\"#本体构建\" class=\"headerlink\" title=\"本体构建\"></a>本体构建</h2><p>本体（ontology）是指工人的概念集合、概念框架，如人、事、物等。本体和实体的区别是实体是具象的，本体是抽象的。<br>本体可以采用人工编辑的方式手动构建（借助本体编辑软件），也可以以数据驱动的自动化方式构建本体。因为人工方式构建工作量极大，因此主流的本体库构建，都是从一些面向特定领域的现有本体库出发，采用自动构建技术逐步扩展得到的，是一个迭代过程。</p>\n<p>自动化本体构建过程包含三个阶段：</p>\n<ol>\n<li>实体并列关系相似度计算</li>\n<li>实体上下位关系抽取</li>\n<li>本体的生成</li>\n</ol>\n<p>看下面例子，当知识图谱刚填充“阿里巴巴”、“腾讯”、“手机”这三个实体的时候，一般认为三个之间并没有差别，但当它计算三个实体之间的相似度后，会发现阿里巴巴和腾讯相似度更高。这个例子就是自动化本体构建第一步的作用。</p>\n<p>经过第一步，知识图谱并不能知道阿里巴巴和手机这两个实体根本不属于同一类型。因此就需要实体上下位关系抽取这一步，经过上下位抽取，会生成第三步的本体。</p>\n<p>当三步结束后，知识图谱就能理解，阿里巴巴和腾讯属于公司这个实体下的细分实体，与手机是类目上的不同。</p>\n<p><img src=\"kg_ontology.jpeg\" alt=\"本体构建过程\"></p>\n<h2 id=\"知识推理\"><a href=\"#知识推理\" class=\"headerlink\" title=\"知识推理\"></a>知识推理</h2><p>本体构建完成后，知识图谱具备雏形。这个阶段的图谱，往往关系残缺现象严重，利用知识推理技术，去完成进一步的知识发现。</p>\n<p>我们可以发现：如果A是B的配偶，B是C的主席，C坐落于D，那么我们可以推理：A生活在D这个城市。<br>根据这一规则，就可以去挖掘一下在图谱中，是否还存在其他的path满足这个条件，顺而将AD这两个实体关联起来。<br>除此之外，还可以去思考，串联里有一环，B是C的主席，那么B是C的CEO、B是C的COO等一系列推理策略。</p>\n<p>当然知识推理的对象并不局限于实体间关系，也可以是实体属性值、本体的概念层次关系等。</p>\n<p>推理属性值：已知某实体的生日属性，就可以推理得到年龄属性；<br>推理概念：已知（老虎、科、猫科）和（猫科、目、食肉目），则可以推理出（老虎、目、食肉目）</p>\n<p>这一块的算法主要分为三大类：</p>\n<ul>\n<li>基于逻辑的推理</li>\n<li>基于图的推理</li>\n<li>基于深度学习的推理</li>\n</ul>\n<p><img src=\"kg_tuili.jpeg\" alt=\"推理算法总结\"></p>\n<h2 id=\"质量评估\"><a href=\"#质量评估\" class=\"headerlink\" title=\"质量评估\"></a>质量评估</h2><p>质量评估也是知识库构建技术的重要组成部分，意义在于对知识的置信度进行量化，通过舍弃置信度较低的知识来保证整体知识库的质量。</p>\n<h1 id=\"知识更新\"><a href=\"#知识更新\" class=\"headerlink\" title=\"知识更新\"></a>知识更新</h1><p>从逻辑上看，知识库的更新包括<strong>概念层的更新和数据层的更新</strong>。<br>概念层的更新是指新增数据后获得了新的概念，需要自动将新的概念添加到知识库的概念层中。<br>数据层的更新主要是新增或更新实体、关系、属性值，对数据层进行更新需要考虑数据源的可靠性、数据的一致性（是否存在矛盾或冗余等问题）等可靠数据源，并选择在各数据源中出现频率高的事实和属性加入知识库。</p>\n<p>知识图谱的内容更新有两种方式：</p>\n<ul>\n<li>全面更新：指以更新后的全部数据为输入，从零开始构建知识图谱。方法简单但消耗极大，同时可能需要人工维护；</li>\n<li>增量更新：以新增数据为输入，向现有知识图谱中添加新增知识。方法消耗小但算法复杂度高，也需要大量人工干预（定义规则等）。</li>\n</ul>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>通过知识图谱，不仅可以将互联网信息表达成更接近人类认知世界的形式，而且提供了一种更好的组织、管理和利用海量信息的方式。目前的知识图谱技术主要用于<strong>智能语义搜索</strong>、<strong>移动个人助理（如Siri）</strong>、<strong>深度问答系统（Watson）</strong>，支撑这些应用的核心技术就是知识图谱技术。</p>\n<p>在智能语义搜索中，当用户发起查询时，搜索引擎会借助知识图谱的帮助对用户查询的关键词进行解析和推理，进而将其映射到知识图谱中的一个或一组概念上，然后解析知识图谱的概念层次结构，向用户返回图形化的知识结构，这就是我们在google和baidu搜索结果中看到的知识卡片。</p>\n<p>在深度问答应用中，系统同样会首先在知识图谱的帮助下对用户使用自然语言提出的问题进行语义分析和语法分析，进而将其转化成结构化形式的查询语句，然后在知识图谱中查询答案。<br>比如，用户提问：“如何判断是否感染了某种病毒？”，则查询会被等价变换为“某种病毒的症状”，然后在进行推理变换，最终形成等价的三元组查询语句，如（病毒、症状、？）和（病毒、征兆、？）等。如果由于知识库不完善而无法通过推理解答用户的问题，深度问答系统会利用搜索引擎向用户反馈搜索结构，同时根据搜索结果更新知识库，从而为回答后续的提问做出准备。</p>\n<p><a href=\"https://www.cnblogs.com/huangyc/p/10043749.html\" target=\"_blank\" rel=\"noopener\">原文链接</a></p>\n"},{"title":"取模与取余的区别","top":false,"cover":false,"toc":true,"mathjax":true,"date":"2022-03-15T04:15:32.000Z","password":null,"summary":null,"_content":"\n## 模数和余数的计算方法\n计 $ { (x, y) | (x, y) \\in 实数 } $， $ m = \\frac{x}{y} $，m计为除数，则有取模和取余的计算方法为\n$$\nv = x - m*y\n$$\n\n区别在于除数m的计数方法：\n- 取余：除数m向0值靠近取证\n- 取模：除数m向无穷小靠近取证\n\n##### 很容易看出，取模和取余在除数m为正时（即 x，y 为同符号数时）结果相同，反之则不同\n\n","source":"_posts/mod-rest.md","raw":"---\ntitle: 取模与取余的区别\ntop: false\ncover: false\ntoc: true\nmathjax: true\ndate: 2022-03-15 12:15:32\npassword:\nsummary:\ntags:\ncategories:\n- 算法\n- 数学\n\n---\n\n## 模数和余数的计算方法\n计 $ { (x, y) | (x, y) \\in 实数 } $， $ m = \\frac{x}{y} $，m计为除数，则有取模和取余的计算方法为\n$$\nv = x - m*y\n$$\n\n区别在于除数m的计数方法：\n- 取余：除数m向0值靠近取证\n- 取模：除数m向无穷小靠近取证\n\n##### 很容易看出，取模和取余在除数m为正时（即 x，y 为同符号数时）结果相同，反之则不同\n\n","slug":"mod-rest","published":1,"updated":"2022-03-15T04:32:42.709Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl10m9kgr000fduwgav57vcs2","content":"<h2 id=\"模数和余数的计算方法\"><a href=\"#模数和余数的计算方法\" class=\"headerlink\" title=\"模数和余数的计算方法\"></a>模数和余数的计算方法</h2><p>计 $ { (x, y) | (x, y) \\in 实数 } $， $ m = \\frac{x}{y} $，m计为除数，则有取模和取余的计算方法为<br>$$<br>v = x - m*y<br>$$</p>\n<p>区别在于除数m的计数方法：</p>\n<ul>\n<li>取余：除数m向0值靠近取证</li>\n<li>取模：除数m向无穷小靠近取证</li>\n</ul>\n<h5 id=\"很容易看出，取模和取余在除数m为正时（即-x，y-为同符号数时）结果相同，反之则不同\"><a href=\"#很容易看出，取模和取余在除数m为正时（即-x，y-为同符号数时）结果相同，反之则不同\" class=\"headerlink\" title=\"很容易看出，取模和取余在除数m为正时（即 x，y 为同符号数时）结果相同，反之则不同\"></a>很容易看出，取模和取余在除数m为正时（即 x，y 为同符号数时）结果相同，反之则不同</h5>","site":{"data":{"musics":[{"name":"夜曲","artist":"周杰伦","url":"/medias/music/yequ.mp3","cover":"/medias/music/avatars/yequ.jpg"},{"name":"一路向北","artist":"周杰伦","url":"/medias/music/yiluxiangbei.mp3","cover":"/medias/music/avatars/yiluxiangbei.jpg"},{"name":"来自天堂的魔鬼","artist":"邓紫棋","url":"/medias/music/tiantangdemogui.mp3","cover":"/medias/music/avatars/tiantangdemogui.jpg"},{"name":"倒数","artist":"邓紫棋","url":"/medias/music/daoshu.mp3","cover":"/medias/music/avatars/daoshu.jpg"}],"friends":[{"name":"知乎专栏","url":"https://zhuanlan.zhihu.com/godweiyang","title":"访问主页","introduction":"算法码上来","avatar":"/medias/avatars/myzhihu.png"},{"name":"火山翻译","url":"https://translate.volcengine.cn","title":"访问主页","introduction":"提供全球领先的翻译技术与服务","avatar":"/medias/avatars/bytedtrans.png"},{"name":"AntNLP","url":"https://antnlp.org","title":"访问主页","introduction":"华东师范大学自然语言处理实验室欢迎您的加入！","avatar":"/medias/avatars/antnlp.ico"},{"name":"IDS²","url":"https://www.smart-dependable-sino-europe.institute","title":"访问主页","introduction":"中欧可靠智能软件联合实验室欢迎您的加入！","avatar":"/medias/avatars/ids2.jpg"},{"name":"孙长志","url":"https://www.czsun.site","title":"访问主页","introduction":"AntNLP博士大师兄！","avatar":"/medias/avatars/sunchangzhi.jpg"},{"name":"纪焘","url":"https://taoji.site","title":"访问主页","introduction":"AntNLP博士带明星！","avatar":"/medias/avatars/jitao.jpg"},{"name":"杜雨沛","url":"https://yupei-du.github.io/","title":"访问主页","introduction":"AntNLP唱跳RAP打篮球全能师兄！","avatar":"/medias/avatars/duyupei.jpg"},{"name":"0xbirdpwn","url":"https://0xbird.top/","title":"访问主页","introduction":"十步杀一人，千里不留行，事了拂衣去，深藏功与名。","avatar":"/medias/avatars/0xbird.png"},{"name":"李佳倩的博客","url":"https://jiaqianlee.com/","title":"访问主页","introduction":"一只小白的成长之路！","avatar":"/medias/avatars/lijiaqian.png"},{"name":"kewlgrl","url":"https://blog.csdn.net/MIKASA3","title":"访问主页","introduction":"好大一只咸鱼哇","avatar":"/medias/avatars/kewlgrl.jpg"},{"name":"Think Far Blog","url":"https://wuli749826.github.io","title":"访问主页","introduction":"我曾经拥有这一切，转眼都飘散如烟。","avatar":"/medias/avatars/gsy.jpg"},{"name":"望城风景","url":"https://www.itaowei.cn/","title":"访问主页","introduction":"用力活过的日子，才配得上此刻的缅怀。","avatar":"/medias/avatars/taowei.jpg"},{"name":"jxtxzzw空间","url":"https://www.jxtxzzw.com/wordpress","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/zzw.jpg"},{"name":"DREAMWINGS","url":"https://www.dreamwings.cn/","title":"访问主页","introduction":"夢はそこでないと、私の権利である","avatar":"/medias/avatars/qianqian.png"},{"name":"ElaineLv","url":"https://www.elainelv.com/","title":"访问主页","introduction":"Stay hungry, Stay foolish","avatar":"/medias/avatars/lyn-draw.jpg"},{"name":"Subject_No_i","url":"https://subjectnoi.github.io","title":"访问主页","introduction":"在原七海 中野三玖 中野二乃 樱岛麻衣的老公","avatar":"/medias/avatars/lzh.png"},{"name":"菁菁","url":"https://angericky.github.io/","title":"访问主页","introduction":"做什么都是因为喜欢","avatar":"/medias/avatars/jingjing.jpg"},{"name":"Sweet-Q","url":"https://sweet-q.github.io","title":"访问主页","introduction":"华东师范大学数学系","avatar":"/medias/avatars/babyq.png"},{"name":"伟大的蚊子","url":"https://www.cnblogs.com/cww97/","title":"访问主页","introduction":"鼓楼的夜晚时间匆匆","avatar":"/medias/avatars/cww97.jpg"},{"name":"Fun4wut","url":"https://blog.fun4go.top","title":"访问主页","introduction":"菜鸡欢迎大佬的光顾","avatar":"/medias/avatars/fun4go.png"},{"name":"Hael Chan","url":"https://haelchan.me/","title":"访问主页","introduction":"浙江大学 & NLP & ML","avatar":"/medias/avatars/hael.jpg"},{"name":"happygirlzt","url":"https://www.happygirlzt.com","title":"访问主页","introduction":"A Backend Engineer","avatar":"/medias/avatars/zhangting.jpg"},{"name":"星空无限","url":"https://liyangzone.com","title":"访问主页","introduction":"前端开发，死飞大佬。分享技术，分享生活。","avatar":"/medias/avatars/liyangzone.jpg"},{"name":"Mashiro","url":"https://2heng.xin/","title":"访问主页","introduction":"樱花庄的白猫","avatar":"/medias/avatars/mashiro.jpg"},{"name":"hzwer","url":"https://hzwer.com/","title":"访问主页","introduction":"北京大学计算机系","avatar":"/medias/avatars/hzwer.jpg"},{"name":"MPY634","url":"https://mpy634.cn/","title":"访问主页","introduction":"摸鱼，永无止境。","avatar":"/medias/avatars/mpy634.png"},{"name":"徐铭辰的博客","url":"https://michaelxucs.com","title":"访问主页","introduction":"埃克塞特大学计算机系","avatar":"/medias/avatars/michael.jpg"},{"name":"Mizunashi","url":"https://mizunashi.me","title":"访问主页","introduction":"欢迎大佬们来玩","avatar":"/medias/avatars/mizunashi.png"},{"name":"xuzhongyou","url":"https://xuzhongyou.github.io/","title":"访问主页","introduction":"我哽咽道：你是赵默笙，可我不是何以琛啊。","avatar":"/medias/avatars/xuzhongyou.jpg"},{"name":"zerol","url":"https://zerol.me/","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/huaji.jpg"},{"name":"Zhang Yi","url":"https://codewithzhangyi.com/","title":"访问主页","introduction":"Coding is the New Sexy","avatar":"/medias/avatars/zhangyi.jpg"},{"name":"科学空间","url":"https://spaces.ac.cn/","title":"访问主页","introduction":"中山大学基础数学研究生","avatar":"/medias/avatars/spacesac.png"},{"name":"lucifer的博客","url":"https://lucifer.ren/blog/","title":"访问主页","introduction":"一个脑洞很大的程序员。","avatar":"https://tva1.sinaimg.cn/large/006tNbRwly1ga7ognflh9j30b40b4q3w.jpg"},{"name":"钱栋伟","url":"https://sscjwdyzdw.club","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/qiandongwei.jpg"},{"name":"CJ Blog","url":"https://chrisju.cn/","title":"访问主页","introduction":"Failing means foolish.","avatar":"/medias/avatars/mouse.jpg"},{"name":"Tawn","url":"https://tawn0000.github.io/","title":"访问主页","introduction":"JNU ACMer","avatar":"/medias/avatars/tawn.jpg"},{"name":"Master X","url":"https://masterx.top/","title":"访问主页","introduction":"ECNU&ML&DL","avatar":"/medias/avatars/masterx.jpg"},{"name":"分享客","url":"https://sharerdiary.com/","title":"访问主页","introduction":"爱生活，爱分享！","avatar":"/medias/avatars/yezijie.png"},{"name":"taotao","url":"https://zouzhitao.github.io","title":"访问主页","introduction":"taotao 码字的地方","avatar":"/medias/avatars/taotao.jpg"},{"name":"Xiejiadong","url":"https://xiejiadong.com","title":"访问主页","introduction":"Xiejiadong's blog","avatar":"/medias/avatars/xiejiadong.jpg"},{"name":"飞吧","url":"https://fei.bar","title":"访问主页","introduction":"啓飞的个人博客","avatar":"/medias/avatars/feibar.png"},{"name":"ajin","url":"https://ajin.cloud","title":"访问主页","introduction":"Always be enthusiastic","avatar":"/medias/avatars/ajin.jpg"},{"name":"Hiyoung","url":"https://hiyoungai.com/","title":"访问主页","introduction":"宠辱不惊，看庭前花开花落；去留无意，望天空云卷云舒。","avatar":"https://cdn.jsdelivr.net/gh/hiyoung123/cdn/img/avatar.jpg"},{"name":"无言的博客","url":"https://www.yzplove.top","title":"访问主页","introduction":"代码真是越敲越香","avatar":"https://cdn.jsdelivr.net/gh/yzp-99/yzp-99.github.io/medias/avatars/me.jpg"},{"name":"Naixin Zhang","url":"https://naixinzhang.github.io/","title":"访问主页","introduction":"Econ Master | Data Analyst/scientist Candidate","avatar":"https://naixinzhang.github.io/medias/avatars/avatar.jpg"},{"name":"帅张的梦呓","url":"https://ishuaizhang.com","title":"访问主页","introduction":"XDUer","avatar":"https://ishuaizhang.com/medias/avatars/avatar.jpg"},{"name":"Gatsby’s blog","url":"https://a347807131.github.io/","title":"访问主页","introduction":"Nothing perfect, Noting special.","avatar":"https://a347807131.github.io/medias/avatar.gif"},{"name":"宇宙湾","url":"https://yuzhouwan.com/","title":"访问主页","introduction":"主要是大数据和人工智能的原创文章。","avatar":"https://yuzhouwan.com/yuzhouwan_logo_128x128.ico"},{"name":"Dotnet9的博客","url":"https://dotnet9.com","title":"访问主页","introduction":"一个热衷于互联网分享精神的个人博客站点","avatar":"https://img.dotnet9.com/logo-foot.png"},{"name":"Macchiato","url":"https://hcj123123.oschina.io","title":"访问主页","introduction":"java学习者","avatar":"https://y.gtimg.cn/music/photo_new/T002R300x300M000002qD7gF3fW0JL_1.jpg?max_age=2592000"},{"name":"过客~励む","url":"https://yafine-blog.cn","title":"访问主页","introduction":"你现在的努力，是为了以后有更多的选择。","avatar":"https://yafine-blog.cn/medias/avatar.jpg"},{"name":"meteorsh","url":"https://weisenhui.top","title":"访问主页","introduction":"Data Science & Engineering","avatar":"https://weisenhui.top/medias/avatar.jpg"},{"name":"Kuroko","url":"https://kuroko.info","title":"访问主页","introduction":"浓烟下的诗歌电台","avatar":"http://kuroko.info/wp-content/uploads/2020/11/2.jpg"}]}},"excerpt":"","more":"<h2 id=\"模数和余数的计算方法\"><a href=\"#模数和余数的计算方法\" class=\"headerlink\" title=\"模数和余数的计算方法\"></a>模数和余数的计算方法</h2><p>计 $ { (x, y) | (x, y) \\in 实数 } $， $ m = \\frac{x}{y} $，m计为除数，则有取模和取余的计算方法为<br>$$<br>v = x - m*y<br>$$</p>\n<p>区别在于除数m的计数方法：</p>\n<ul>\n<li>取余：除数m向0值靠近取证</li>\n<li>取模：除数m向无穷小靠近取证</li>\n</ul>\n<h5 id=\"很容易看出，取模和取余在除数m为正时（即-x，y-为同符号数时）结果相同，反之则不同\"><a href=\"#很容易看出，取模和取余在除数m为正时（即-x，y-为同符号数时）结果相同，反之则不同\" class=\"headerlink\" title=\"很容易看出，取模和取余在除数m为正时（即 x，y 为同符号数时）结果相同，反之则不同\"></a>很容易看出，取模和取余在除数m为正时（即 x，y 为同符号数时）结果相同，反之则不同</h5>"},{"title":"基于NLP的关键词提取技术","top":false,"cover":false,"toc":true,"mathjax":true,"date":"2021-11-24T06:53:41.000Z","password":null,"summary":null,"_content":"\n## 关键词提取\n**关键词**是能够表达文档中心内容的词语，常用于计算机系统标引论文内容特征、信息检索、系统汇集以供读者检阅。关键词提取是文本挖掘领域的一个分支，是文本检索、文本比较、摘要生成、文档分类和聚类等文本挖掘研究的基础性工作。\n从算法角度，关键词提取算法主要有两类：无监督关键词提取算法和有监督关键词提取算法。\n\n1. 无监督关键词提取算法\n不需要人工标注的语料，利用某些方法发现文本中比较重要的词作为关键词，进行关键词提取。该方法是先抽取出候选词，然后对每个候选词进行打分，输出topK个分值最高的候选词作为关键词。根据打分的策略不同，有不同的算法，如TF-IDF、TextRank、LDA等算法。\n无监督关键词提取方法主要有三类：**基于统计特征的关键词提取（TF-IDF）**；**基于词图模型的关键词提取（PageRank，TextRank）**；**基于主题模型的关键词提取（LDA）**。\n\n![无监督算法分类](total_method.png)\n\n+ 基于统计特征的关键词提取算法思想是利用文档中词语的统计信息抽取文档的关键词；\n+ 基于词图模型的关键词提取首先要构建文档的语言网络图，然后对语言进行网络图分析，在这个图上寻找具有重要作用的词或者短语，这些短语就是文档的关键词；\n+ 基于主题关键词提取算法主要利用的是主题模型中关于主题分布的性质进行关键词提取；\n\n2. 有监督关键词提取算法\n将关键词抽取过程视为二分类问题，先提取出候选词，然后对于每个候选词划定标签，要么是关键词，要么不是关键词，然后训练关键词抽取分类器。当新来一篇文档时，提取出所有的候选词，然后利用训练好的关键词提取分类器，对各个候选词进行分类，最终将标签为关键词的候选词作为关键词。\n\n![有监督算法处理流程](supervise.jpeg)\n\n3. 两种算法优缺点\n无监督方法不需要人工标注训练集合的过程，因此更加快捷，但由于无法有效综合利用多信息对候选关键词排序，所以效果无法与有监督方法媲美；而有监督方法可以通过训练学习调节多种信息对于判断关键词的影响程度，因此效果更优，有监督的文本关键词提取算法需要高昂的人工成本（标注），因此现有的文本关键词提取主要采用适用性较强的无监督关键词提取。\n\n4. 关键词提取工具/sdk\n+ jieba\n+ [Textrank4zh](https://pypi.org/project/textrank4zh/0.3/)（TextRank算法工具）\n+ [SnowNLP](https://pypi.org/project/snownlp/)（中文分析，简体中文文本处理）\n+ [TextBlob](https://pypi.org/project/textblob/)（英文分析）\n\n\n## TF-IDF关键词提取算法实现\nTF-IDF算法的详细介绍及实现方法：[算法实现](https://blog.csdn.net/asialee_bird/article/details/81486700)\n\n\n## TextRank关键词提取算法实现\nTextRank算法的详细介绍及实现方法：[算法实现](https://blog.csdn.net/asialee_bird/article/details/96894533)\n\n\n## LDA主题模型关键词提取算法实现\n1. LDA（Latent Dirichlet Allocation）文档主题生成模型\n**主题模型**是一种统计模型，用于发现文档集合中出现的抽象“主题”。主题建模是一种常用的文本挖掘工具，用于在文本体中发现隐藏的语义结构。\nLDA也称三层贝叶斯概率模型，包含词、主题、文档三层结构；利用文档中单词的共现关系来对单词按主题聚类，得到“文档-主题”和“主题-单词”2个概率分布。\n详细可以参考[LDA通俗理解](https://blog.csdn.net/v_JULY_v/article/details/41209515)\n\n2. 基于LDA主题模型的关键词提取算法实现\n    \n```python\nfrom gensim import corpora, models\nimport jieba.posseg as jp\nimport jieba\n \n# 简单文本处理\ndef get_text(text):\n    flags = ('n', 'nr', 'ns', 'nt', 'eng', 'v', 'd')  # 词性\n    stopwords = ('的', '就', '是', '用', '还', '在', '上', '作为')  # 停用词\n    words_list = []\n    for text in texts:\n        words = [w.word for w in jp.cut(text) if w.flag in flags and w.word not in stopwords]\n        words_list.append(words)\n    return words_list\n \n \n# 生成LDA模型\ndef LDA_model(words_list):\n    # 构造词典\n    # Dictionary()方法遍历所有的文本，为每个不重复的单词分配一个单独的整数ID，同时收集该单词出现次数以及相关的统计信息\n    dictionary = corpora.Dictionary(words_list)\n    print(dictionary)\n    print('打印查看每个单词的id:')\n    print(dictionary.token2id)  # 打印查看每个单词的id\n \n    # 将dictionary转化为一个词袋\n    # doc2bow()方法将dictionary转化为一个词袋。得到的结果corpus是一个向量的列表，向量的个数就是文档数。\n    # 在每个文档向量中都包含一系列元组,元组的形式是（单词 ID，词频）\n    corpus = [dictionary.doc2bow(words) for words in words_list]\n    print('输出每个文档的向量:')\n    print(corpus)  # 输出每个文档的向量\n \n    # LDA主题模型\n    # num_topics -- 必须，要生成的主题个数。\n    # id2word    -- 必须，LdaModel类要求我们之前的dictionary把id都映射成为字符串。\n    # passes     -- 可选，模型遍历语料库的次数。遍历的次数越多，模型越精确。但是对于非常大的语料库，遍历太多次会花费很长的时间。\n    lda_model = models.ldamodel.LdaModel(corpus=corpus, num_topics=2, id2word=dictionary, passes=10)\n \n    return lda_model\n \n \nif __name__ == \"__main__\":\n    texts = ['作为千元机中为数不多拥有真全面屏的手机，OPPO K3一经推出，就簇拥不少粉丝', \\\n             '很多人在冲着这块屏幕购买了OPPO K3之后，发现原来K3的过人之处不止是在屏幕上', \\\n             'OPPO K3的消费者对这部手机总体还是十分满意的', \\\n             '吉利博越PRO在7月3日全新吉客智能生态系统GKUI19发布会上正式亮相', \\\n             '今年上海车展，长安CS75 PLUS首次亮相', \\\n             '普通版车型采用的是双边共双出式排气布局；运动版本车型采用双边共四出的排气布局']\n    # 获取分词后的文本列表\n    words_list = get_text(texts)\n    print('分词后的文本：')\n    print(words_list)\n \n    # 获取训练后的LDA模型\n    lda_model = LDA_model(words_list)\n \n    # 可以用 print_topic 和 print_topics 方法来查看主题\n    # 打印所有主题，每个主题显示5个词\n    topic_words = lda_model.print_topics(num_topics=2, num_words=5)\n    print('打印所有主题，每个主题显示5个词:')\n    print(topic_words)\n \n    # 输出该主题的的词及其词的权重\n    words_list = lda_model.show_topic(0, 5)\n    print('输出该主题的的词及其词的权重:')\n    print(words_list)\n```\n\n可在本机python环境中运行并查看结果。\n\n\n## Word2Vec词聚类关键词提取算法实现\n1. Word2Vec词向量表示\n利用浅层神经网络模型自动学习词语在语料库中的出现情况，把词语嵌入到一个高维的空间中，通常在100-500维，在高维空间中词语被表示为词向量的形式。\n特征词向量的抽取是基于已经训练好的词向量模型。\n\n2. K-means聚类算法\n聚类算法旨在数据中发现数据对象之间的关系，将数据进行分组，使得组内的相似性尽可能的大，组间的相似性尽可能的小。\n\n**算法思想是**：首先随机选择K个点作为初始质心，K为用户指定的所期望的簇的个数，通过计算每个点到各个质心的距离，将每个点指派到最近的质心形成K个簇，然后根据指派到簇的点重新计算每个簇的质心，重复指派和更新质心的操作，直到簇不发生变化或达到最大的迭代次数则停止。\n\n3. 基于Word2Vec词聚类关键词提取方法的实现过程\n**主要思路**是对于用词向量表示的词语，通过K-means算法对文章中的词进行聚类，选择聚类中心作为文本的一个主要关键词，计算其他词与聚类中心的距离即相似度，选择topK个距离聚类中心最近的词作为关键词，而这个词间相似度可用Word2Vec生成的向量计算得到。\n\n**具体步骤如下：**\n+ 对语料进行Word2Vec模型训练，得到词向量文件；\n+ 对文本进行预处理获得N个候选关键词；\n+ 遍历候选关键词，从词向量文件中提取候选关键词的词向量表示；\n+ 对候选关键词进行K-means聚类，得到各个类别的聚类中心（需要人为给定聚类的个数）；\n+ 计算各类别下，组内词语与聚类中心的距离（欧几里得距离或曼哈顿距离），按聚类大小进行降序排序；\n+ 对候选关键词计算结果得到排名前TopK个词语作为文本关键词。\n\n注：第三方工具包Scikit-learn提供了K-means聚类算法的相关函数，本文用到了sklearn.cluster.KMeans()函数执行K-means算法，sklearn.decomposition.PCA()函数用于数据降维以便绘制图形。\n\n\n## 信息增益关键词提取算法实现\n信息增益算法的详细介绍及实现方法：[算法实现](https://blog.csdn.net/asialee_bird/article/details/81084783)\n\n\n## 互信息关键词提取算法实现\n1. 互信息（Mutual Information，MI）\n在概率论和信息论中，两个随机变量的互信息或转移信息（transinformation）是变量间相互依赖性的量度。不同于相关系数，互信息并不局限于实值随机变量，它更加一般且决定着联合分布 $p(X,Y)$ 和分解的边缘分布的乘积 $p(X)p(Y)$ 的相似程度。互信息是度量两个事件集合之间的相关性（mutual dependence）。\n互信息被广泛用于度量一些语言现象的相关性。在信息论中，互信息被用于衡量两个词的相关度，也用来计算词与类别之间的相关性。\n\n2. 互信息计算公式\n其中 $p(X,Y)$ 是X和Y的联合概率分布函数，而p(X)和p(Y)分别是X和Y的边缘概率分布函数。\n$$\nI(X; Y) = \\sum_{y\\in Y}\\sum_{x\\in X}p(x, y) \\log(\\frac{p(x,y)}{p(x)p(y)})\n$$\n\n$$\n\\begin{aligned}\nI(X; Y) &= \\sum_{x,y}p(x, y) \\log{\\frac{p(x, y)}{p(x)p(y)}}\\\\\\\\\n&= \\sum_{x,y}p(x, y) \\log{\\frac{p(x, y)}{p(x)}} - \\sum_{x,y}p(x, y) \\log p(y)\\\\\\\\\n&= \\sum_{x,y}p(x)p(y|x) \\log(py|x) - \\sum_{x,y}p(x, y) \\log{p(y)}\\\\\\\\\n&= \\sum_xp(x)(\\sum_yp(y|x) \\log{p(y|x)}) - \\sum_y \\log{p(y)}(\\sum_xp(x,y))\\\\\\\\\n&= -\\sum_xp(x)H(Y|X=x) - \\sum_y \\log{p(y)p(y)}\\\\\\\\\n&= -H(Y|X) + H(Y)\\\\\\\\\n&= H(Y) - H(Y|X)\n\\end{aligned}\n$$\n\n3. 互信息算法实现\n    \n```python\nfrom sklearn import metrics\nimport numpy as np\n \n# 训练集和训练标签\nx_train = [[1, 2, 3, 4, 5],\n           [5, 4, 3, 2, 1],\n           [3, 3, 3, 3, 3],\n           [1, 1, 1, 1, 1]]\ny_train = [0, 1, 0, 1]\n# 测试集和测试标签\nx_test = [[2, 2, 2, 2, 2], [2, 1, 1, 2, 1]]\n \nx_train = np.array(x_train)  # 转为array\n \n# 存储每个特征与标签相关性得分\nfeatures_score_list = []\nfor i in range(len(x_train[0])):\n    # 计算每个特征与标签的互信息\n    feature_info = metrics.mutual_info_score(y_train, x_train[:, i])\n    features_score_list.append(feature_info)\n \nprint(features_score_list)\n```\n\n请在本机查看运行结果。\n\n4. 信息论中的互信息和决策树中的信息增益的关系\n\n$$\n\\begin{aligned}\n& 信息论中互信息：\\\\\\\\\n& I(X;Y) = H(X) - H(X|Y)\\\\\\\\\n& 决策树中信息增益：\\\\\\\\\n& G(D,A) = H(D) - H(D|A)\n\\end{aligned}\n$$\n\n两者表达意思是一样的，都是表示得知特征X的信息而使得类Y的信息的不确定性减少的程度。\n\n注：\n+ 标准化互信息（Normalized Mutual Information，NMI）可以用来衡量两种聚类结果的相似度。\n+ 标准化互信息Sklearn实现：metrics.normalized_mutual_info_score(y_train, x_train[:,i])。\n+ 点互信息（Pointwise Mutual Information，PMI）这个指标来衡量两个事物之间的相关性（比如两个词）。\n\n## 卡方检验关键词提取算法实现\n1. 卡方检验\n卡方是数理统计中用于检验两个变量独立性的方法，是一种确定两个分类变量之间是否存在相关性的统计方法，经典的卡方检验师检验定性自变量对定性因变量的相关性。\n\n2. 基本思路\n+ 原假设：两个变量是独立的\n+ 计算实际观察值和理论值之间的偏离程度\n+ 如果偏差足够小，小于设定阈值，就接受原假设；否则就否定原假设，认为两变量是相关的。\n\n3. 计算公式\n\n$$\nx^2 = \\sum \\frac{(A-T)^2}{T}\n$$\n\n其中，A为实际值，T为理论值。卡方检验可用于文本分类问题中的特征选择，此时不需要设定阈值，只关心找到最为相关的topK个特征。基本思想：比较理论频数和实际频数的吻合程度或者拟合优度问题。\n\n4. 基于sklearn的卡方检验实现\n\n    \n```python\nfrom sklearn.feature_selection import SelectKBest\nfrom sklearn.feature_selection import chi2\n \n# 训练集和训练标签\nx_train = [[1, 2, 3, 4, 5],\n           [5, 4, 3, 2, 1],\n           [3, 3, 3, 3, 3],\n           [1, 1, 1, 1, 1]]\ny_train = [0, 1, 0, 1]\n# 测试集和测试标签\nx_test = [[2, 2, 2, 2, 2], [2, 1, 1, 2, 1]]\ny_test = [1, 1]\n \n# 卡方检验选择特征\nchi2_model = SelectKBest(chi2, k=3)  # 选择k个最佳特征\n# 该函数选择训练集里的k个特征，并将训练集转化所选特征\nx_train_chi2 = chi2_model.fit_transform(x_train, y_train)\n# 将测试集转化为所选特征\nx_test_chi2 = chi2_model.transform(x_test)\n \nprint('各个特征的得分：', chi2_model.scores_)\nprint('各个特征的p值：', chi2_model.pvalues_)  # p值越小，置信度越高，得分越高\nprint('所选特征的索引：', chi2_model.get_support(True))\nprint('特征提取转换后的训练集和测试集...')\nprint('x_train_chi2:', x_train_chi2)\nprint('x_test_chi2:', x_test_chi2)\n```\n\n请在本机查看运行结果。\n\n## 基于树模型关键词提取算法实现\n1. 树模型\n主要包括决策树和随机森林，基于树的预测模型（sklearn.tree模块和sklearn.ensemble模块）能够用来计算特征的重要程度，因此能用来去除不相关的特征（结合sklearn.feature_selection.SelectFromModel）\n\nsklearn.ensemble模块包含了两种基于随机决策树的平均算法：**RandomForest**算法和**Extra-Trees**算法。这两种算法都采用了很流行的树设计思想：perturb-and-combine思想。这种方法会在分类器的构建时，通过引入随机化，创建一组各不一样的分类器。这种ensemble方法的预测会给出各个分类器预测的平均。\n\n+ RandomForests在随机森林(RF)中，该ensemble方法中的每棵树都基于一个通过可放回抽样(boostrap)得到的训练集构建。相反的，在features的子集中随机进行split反倒是最好的split方式。sklearn的随机森林(RF)实现通过对各分类结果预测求平均得到，而非让每个分类器进行投票（vote）。\n\n+ Ext-Trees在Ext-Trees中（详见ExtraTreesClassifier和ExtraTreesRegressor），该方法中，随机性在划分时会更进一步进行计算。在随机森林中，会使用候选feature的一个随机子集，而非查找最好的阈值，对于每个候选feature来说，阈值是抽取的，选择这种随机生成阈值的方式作为划分原则。\n\n2. 树模型的关键词提取算法实现\n\n+ 部分代码实现\n    \n```python\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.ensemble import ExtraTreesClassifier\nfrom sklearn.feature_selection import SelectFromModel\n \n# 导入SelectFromModel结合ExtraTreesClassifier计算特征重要性，并按重要性阈值选择特征。\n# 基于树模型进行模型选择\nclf_model = ExtraTreesClassifier(n_estimators=250, random_state=0)\nclf_model.fit(x_train, y_train)\n# 获取每个词的特征权重,数值越高特征越重要\nimportances = clf_model.feature_importances_\n# 选择特征重要性为1.5倍均值的特征\nmodel = SelectFromModel(clf_model, threshold='1.5*mean', prefit=True)\nx_train_new = model.transform(x_train)  # 返回训练集所选特征\nx_test_new = model.transform(x_test)  # 返回测试集所选特征\n```\n\n+ 部分代码实现\n\n    \n````python\n# 训练集和训练标签\nx_train, y_train\n# 候选特征词列表\nwords_list\n \n# 基于树模型进行模型选择\nforest = RandomForestClassifier(n_estimators=250, random_state=0)\nforest.fit(x_train, y_train)\nimportances = forest.feature_importances_  # 获取每个词的特征权重\n \n# 将词和词的权重存入字典\nfeature_words_dic = {}\nfor i in range(len(words_list)):\n    feature_words_dic[words_list[i]] = importances[i]\n \n# 对字典按权重由大到小进行排序\nwords_info_dic_sort = sorted(words_info_dic.items(), key=lambda x: x[1], reverse=True)\n \n# 将关键词和词的权重分别存入列表\nkeywords_list = []  # 关键词列表\nfeatures_list = []  # 关键权重列表\nfor word in words_info_dic_sort:\n    keywords_list.append(word[0])\n    features_list.append(word[1])\n \n# 选取前一千个关键词和权重写入文本文件\nkeywords = keywords_list[:1000]\nfeatures = features_list[:1000]\n \n# 将含有关键字的文本写入文件\nwith open('data/keywords_features.txt', 'a', encoding=\"utf-8\") as f:\n    for i in range(len(keywords)):\n        f.write(keywords[i] + '\\t' + features[i] + '\\n')\n````\n\n\n## 总结\n\n本文总结了本人在实验过程中所用到的常用关键词抽取方法，实验数据是基于公司的内部数据，但此篇总结只是方法上的讲解和实现，没有针对某一具体数据集做相应的结果分析。从实验中可以很明显看出有监督关键词抽取方法通常会显著好于无监督方法，但是有监督方法依赖一定规模的标注数据。","source":"_posts/nlp-text-key.md","raw":"---\ntitle: 基于NLP的关键词提取技术\ntop: false\ncover: false\ntoc: true\nmathjax: true\ndate: 2021-11-24 14:53:41\npassword:\nsummary:\ntags:\n- NLP\ncategories:\n- 算法\n---\n\n## 关键词提取\n**关键词**是能够表达文档中心内容的词语，常用于计算机系统标引论文内容特征、信息检索、系统汇集以供读者检阅。关键词提取是文本挖掘领域的一个分支，是文本检索、文本比较、摘要生成、文档分类和聚类等文本挖掘研究的基础性工作。\n从算法角度，关键词提取算法主要有两类：无监督关键词提取算法和有监督关键词提取算法。\n\n1. 无监督关键词提取算法\n不需要人工标注的语料，利用某些方法发现文本中比较重要的词作为关键词，进行关键词提取。该方法是先抽取出候选词，然后对每个候选词进行打分，输出topK个分值最高的候选词作为关键词。根据打分的策略不同，有不同的算法，如TF-IDF、TextRank、LDA等算法。\n无监督关键词提取方法主要有三类：**基于统计特征的关键词提取（TF-IDF）**；**基于词图模型的关键词提取（PageRank，TextRank）**；**基于主题模型的关键词提取（LDA）**。\n\n![无监督算法分类](total_method.png)\n\n+ 基于统计特征的关键词提取算法思想是利用文档中词语的统计信息抽取文档的关键词；\n+ 基于词图模型的关键词提取首先要构建文档的语言网络图，然后对语言进行网络图分析，在这个图上寻找具有重要作用的词或者短语，这些短语就是文档的关键词；\n+ 基于主题关键词提取算法主要利用的是主题模型中关于主题分布的性质进行关键词提取；\n\n2. 有监督关键词提取算法\n将关键词抽取过程视为二分类问题，先提取出候选词，然后对于每个候选词划定标签，要么是关键词，要么不是关键词，然后训练关键词抽取分类器。当新来一篇文档时，提取出所有的候选词，然后利用训练好的关键词提取分类器，对各个候选词进行分类，最终将标签为关键词的候选词作为关键词。\n\n![有监督算法处理流程](supervise.jpeg)\n\n3. 两种算法优缺点\n无监督方法不需要人工标注训练集合的过程，因此更加快捷，但由于无法有效综合利用多信息对候选关键词排序，所以效果无法与有监督方法媲美；而有监督方法可以通过训练学习调节多种信息对于判断关键词的影响程度，因此效果更优，有监督的文本关键词提取算法需要高昂的人工成本（标注），因此现有的文本关键词提取主要采用适用性较强的无监督关键词提取。\n\n4. 关键词提取工具/sdk\n+ jieba\n+ [Textrank4zh](https://pypi.org/project/textrank4zh/0.3/)（TextRank算法工具）\n+ [SnowNLP](https://pypi.org/project/snownlp/)（中文分析，简体中文文本处理）\n+ [TextBlob](https://pypi.org/project/textblob/)（英文分析）\n\n\n## TF-IDF关键词提取算法实现\nTF-IDF算法的详细介绍及实现方法：[算法实现](https://blog.csdn.net/asialee_bird/article/details/81486700)\n\n\n## TextRank关键词提取算法实现\nTextRank算法的详细介绍及实现方法：[算法实现](https://blog.csdn.net/asialee_bird/article/details/96894533)\n\n\n## LDA主题模型关键词提取算法实现\n1. LDA（Latent Dirichlet Allocation）文档主题生成模型\n**主题模型**是一种统计模型，用于发现文档集合中出现的抽象“主题”。主题建模是一种常用的文本挖掘工具，用于在文本体中发现隐藏的语义结构。\nLDA也称三层贝叶斯概率模型，包含词、主题、文档三层结构；利用文档中单词的共现关系来对单词按主题聚类，得到“文档-主题”和“主题-单词”2个概率分布。\n详细可以参考[LDA通俗理解](https://blog.csdn.net/v_JULY_v/article/details/41209515)\n\n2. 基于LDA主题模型的关键词提取算法实现\n    \n```python\nfrom gensim import corpora, models\nimport jieba.posseg as jp\nimport jieba\n \n# 简单文本处理\ndef get_text(text):\n    flags = ('n', 'nr', 'ns', 'nt', 'eng', 'v', 'd')  # 词性\n    stopwords = ('的', '就', '是', '用', '还', '在', '上', '作为')  # 停用词\n    words_list = []\n    for text in texts:\n        words = [w.word for w in jp.cut(text) if w.flag in flags and w.word not in stopwords]\n        words_list.append(words)\n    return words_list\n \n \n# 生成LDA模型\ndef LDA_model(words_list):\n    # 构造词典\n    # Dictionary()方法遍历所有的文本，为每个不重复的单词分配一个单独的整数ID，同时收集该单词出现次数以及相关的统计信息\n    dictionary = corpora.Dictionary(words_list)\n    print(dictionary)\n    print('打印查看每个单词的id:')\n    print(dictionary.token2id)  # 打印查看每个单词的id\n \n    # 将dictionary转化为一个词袋\n    # doc2bow()方法将dictionary转化为一个词袋。得到的结果corpus是一个向量的列表，向量的个数就是文档数。\n    # 在每个文档向量中都包含一系列元组,元组的形式是（单词 ID，词频）\n    corpus = [dictionary.doc2bow(words) for words in words_list]\n    print('输出每个文档的向量:')\n    print(corpus)  # 输出每个文档的向量\n \n    # LDA主题模型\n    # num_topics -- 必须，要生成的主题个数。\n    # id2word    -- 必须，LdaModel类要求我们之前的dictionary把id都映射成为字符串。\n    # passes     -- 可选，模型遍历语料库的次数。遍历的次数越多，模型越精确。但是对于非常大的语料库，遍历太多次会花费很长的时间。\n    lda_model = models.ldamodel.LdaModel(corpus=corpus, num_topics=2, id2word=dictionary, passes=10)\n \n    return lda_model\n \n \nif __name__ == \"__main__\":\n    texts = ['作为千元机中为数不多拥有真全面屏的手机，OPPO K3一经推出，就簇拥不少粉丝', \\\n             '很多人在冲着这块屏幕购买了OPPO K3之后，发现原来K3的过人之处不止是在屏幕上', \\\n             'OPPO K3的消费者对这部手机总体还是十分满意的', \\\n             '吉利博越PRO在7月3日全新吉客智能生态系统GKUI19发布会上正式亮相', \\\n             '今年上海车展，长安CS75 PLUS首次亮相', \\\n             '普通版车型采用的是双边共双出式排气布局；运动版本车型采用双边共四出的排气布局']\n    # 获取分词后的文本列表\n    words_list = get_text(texts)\n    print('分词后的文本：')\n    print(words_list)\n \n    # 获取训练后的LDA模型\n    lda_model = LDA_model(words_list)\n \n    # 可以用 print_topic 和 print_topics 方法来查看主题\n    # 打印所有主题，每个主题显示5个词\n    topic_words = lda_model.print_topics(num_topics=2, num_words=5)\n    print('打印所有主题，每个主题显示5个词:')\n    print(topic_words)\n \n    # 输出该主题的的词及其词的权重\n    words_list = lda_model.show_topic(0, 5)\n    print('输出该主题的的词及其词的权重:')\n    print(words_list)\n```\n\n可在本机python环境中运行并查看结果。\n\n\n## Word2Vec词聚类关键词提取算法实现\n1. Word2Vec词向量表示\n利用浅层神经网络模型自动学习词语在语料库中的出现情况，把词语嵌入到一个高维的空间中，通常在100-500维，在高维空间中词语被表示为词向量的形式。\n特征词向量的抽取是基于已经训练好的词向量模型。\n\n2. K-means聚类算法\n聚类算法旨在数据中发现数据对象之间的关系，将数据进行分组，使得组内的相似性尽可能的大，组间的相似性尽可能的小。\n\n**算法思想是**：首先随机选择K个点作为初始质心，K为用户指定的所期望的簇的个数，通过计算每个点到各个质心的距离，将每个点指派到最近的质心形成K个簇，然后根据指派到簇的点重新计算每个簇的质心，重复指派和更新质心的操作，直到簇不发生变化或达到最大的迭代次数则停止。\n\n3. 基于Word2Vec词聚类关键词提取方法的实现过程\n**主要思路**是对于用词向量表示的词语，通过K-means算法对文章中的词进行聚类，选择聚类中心作为文本的一个主要关键词，计算其他词与聚类中心的距离即相似度，选择topK个距离聚类中心最近的词作为关键词，而这个词间相似度可用Word2Vec生成的向量计算得到。\n\n**具体步骤如下：**\n+ 对语料进行Word2Vec模型训练，得到词向量文件；\n+ 对文本进行预处理获得N个候选关键词；\n+ 遍历候选关键词，从词向量文件中提取候选关键词的词向量表示；\n+ 对候选关键词进行K-means聚类，得到各个类别的聚类中心（需要人为给定聚类的个数）；\n+ 计算各类别下，组内词语与聚类中心的距离（欧几里得距离或曼哈顿距离），按聚类大小进行降序排序；\n+ 对候选关键词计算结果得到排名前TopK个词语作为文本关键词。\n\n注：第三方工具包Scikit-learn提供了K-means聚类算法的相关函数，本文用到了sklearn.cluster.KMeans()函数执行K-means算法，sklearn.decomposition.PCA()函数用于数据降维以便绘制图形。\n\n\n## 信息增益关键词提取算法实现\n信息增益算法的详细介绍及实现方法：[算法实现](https://blog.csdn.net/asialee_bird/article/details/81084783)\n\n\n## 互信息关键词提取算法实现\n1. 互信息（Mutual Information，MI）\n在概率论和信息论中，两个随机变量的互信息或转移信息（transinformation）是变量间相互依赖性的量度。不同于相关系数，互信息并不局限于实值随机变量，它更加一般且决定着联合分布 $p(X,Y)$ 和分解的边缘分布的乘积 $p(X)p(Y)$ 的相似程度。互信息是度量两个事件集合之间的相关性（mutual dependence）。\n互信息被广泛用于度量一些语言现象的相关性。在信息论中，互信息被用于衡量两个词的相关度，也用来计算词与类别之间的相关性。\n\n2. 互信息计算公式\n其中 $p(X,Y)$ 是X和Y的联合概率分布函数，而p(X)和p(Y)分别是X和Y的边缘概率分布函数。\n$$\nI(X; Y) = \\sum_{y\\in Y}\\sum_{x\\in X}p(x, y) \\log(\\frac{p(x,y)}{p(x)p(y)})\n$$\n\n$$\n\\begin{aligned}\nI(X; Y) &= \\sum_{x,y}p(x, y) \\log{\\frac{p(x, y)}{p(x)p(y)}}\\\\\\\\\n&= \\sum_{x,y}p(x, y) \\log{\\frac{p(x, y)}{p(x)}} - \\sum_{x,y}p(x, y) \\log p(y)\\\\\\\\\n&= \\sum_{x,y}p(x)p(y|x) \\log(py|x) - \\sum_{x,y}p(x, y) \\log{p(y)}\\\\\\\\\n&= \\sum_xp(x)(\\sum_yp(y|x) \\log{p(y|x)}) - \\sum_y \\log{p(y)}(\\sum_xp(x,y))\\\\\\\\\n&= -\\sum_xp(x)H(Y|X=x) - \\sum_y \\log{p(y)p(y)}\\\\\\\\\n&= -H(Y|X) + H(Y)\\\\\\\\\n&= H(Y) - H(Y|X)\n\\end{aligned}\n$$\n\n3. 互信息算法实现\n    \n```python\nfrom sklearn import metrics\nimport numpy as np\n \n# 训练集和训练标签\nx_train = [[1, 2, 3, 4, 5],\n           [5, 4, 3, 2, 1],\n           [3, 3, 3, 3, 3],\n           [1, 1, 1, 1, 1]]\ny_train = [0, 1, 0, 1]\n# 测试集和测试标签\nx_test = [[2, 2, 2, 2, 2], [2, 1, 1, 2, 1]]\n \nx_train = np.array(x_train)  # 转为array\n \n# 存储每个特征与标签相关性得分\nfeatures_score_list = []\nfor i in range(len(x_train[0])):\n    # 计算每个特征与标签的互信息\n    feature_info = metrics.mutual_info_score(y_train, x_train[:, i])\n    features_score_list.append(feature_info)\n \nprint(features_score_list)\n```\n\n请在本机查看运行结果。\n\n4. 信息论中的互信息和决策树中的信息增益的关系\n\n$$\n\\begin{aligned}\n& 信息论中互信息：\\\\\\\\\n& I(X;Y) = H(X) - H(X|Y)\\\\\\\\\n& 决策树中信息增益：\\\\\\\\\n& G(D,A) = H(D) - H(D|A)\n\\end{aligned}\n$$\n\n两者表达意思是一样的，都是表示得知特征X的信息而使得类Y的信息的不确定性减少的程度。\n\n注：\n+ 标准化互信息（Normalized Mutual Information，NMI）可以用来衡量两种聚类结果的相似度。\n+ 标准化互信息Sklearn实现：metrics.normalized_mutual_info_score(y_train, x_train[:,i])。\n+ 点互信息（Pointwise Mutual Information，PMI）这个指标来衡量两个事物之间的相关性（比如两个词）。\n\n## 卡方检验关键词提取算法实现\n1. 卡方检验\n卡方是数理统计中用于检验两个变量独立性的方法，是一种确定两个分类变量之间是否存在相关性的统计方法，经典的卡方检验师检验定性自变量对定性因变量的相关性。\n\n2. 基本思路\n+ 原假设：两个变量是独立的\n+ 计算实际观察值和理论值之间的偏离程度\n+ 如果偏差足够小，小于设定阈值，就接受原假设；否则就否定原假设，认为两变量是相关的。\n\n3. 计算公式\n\n$$\nx^2 = \\sum \\frac{(A-T)^2}{T}\n$$\n\n其中，A为实际值，T为理论值。卡方检验可用于文本分类问题中的特征选择，此时不需要设定阈值，只关心找到最为相关的topK个特征。基本思想：比较理论频数和实际频数的吻合程度或者拟合优度问题。\n\n4. 基于sklearn的卡方检验实现\n\n    \n```python\nfrom sklearn.feature_selection import SelectKBest\nfrom sklearn.feature_selection import chi2\n \n# 训练集和训练标签\nx_train = [[1, 2, 3, 4, 5],\n           [5, 4, 3, 2, 1],\n           [3, 3, 3, 3, 3],\n           [1, 1, 1, 1, 1]]\ny_train = [0, 1, 0, 1]\n# 测试集和测试标签\nx_test = [[2, 2, 2, 2, 2], [2, 1, 1, 2, 1]]\ny_test = [1, 1]\n \n# 卡方检验选择特征\nchi2_model = SelectKBest(chi2, k=3)  # 选择k个最佳特征\n# 该函数选择训练集里的k个特征，并将训练集转化所选特征\nx_train_chi2 = chi2_model.fit_transform(x_train, y_train)\n# 将测试集转化为所选特征\nx_test_chi2 = chi2_model.transform(x_test)\n \nprint('各个特征的得分：', chi2_model.scores_)\nprint('各个特征的p值：', chi2_model.pvalues_)  # p值越小，置信度越高，得分越高\nprint('所选特征的索引：', chi2_model.get_support(True))\nprint('特征提取转换后的训练集和测试集...')\nprint('x_train_chi2:', x_train_chi2)\nprint('x_test_chi2:', x_test_chi2)\n```\n\n请在本机查看运行结果。\n\n## 基于树模型关键词提取算法实现\n1. 树模型\n主要包括决策树和随机森林，基于树的预测模型（sklearn.tree模块和sklearn.ensemble模块）能够用来计算特征的重要程度，因此能用来去除不相关的特征（结合sklearn.feature_selection.SelectFromModel）\n\nsklearn.ensemble模块包含了两种基于随机决策树的平均算法：**RandomForest**算法和**Extra-Trees**算法。这两种算法都采用了很流行的树设计思想：perturb-and-combine思想。这种方法会在分类器的构建时，通过引入随机化，创建一组各不一样的分类器。这种ensemble方法的预测会给出各个分类器预测的平均。\n\n+ RandomForests在随机森林(RF)中，该ensemble方法中的每棵树都基于一个通过可放回抽样(boostrap)得到的训练集构建。相反的，在features的子集中随机进行split反倒是最好的split方式。sklearn的随机森林(RF)实现通过对各分类结果预测求平均得到，而非让每个分类器进行投票（vote）。\n\n+ Ext-Trees在Ext-Trees中（详见ExtraTreesClassifier和ExtraTreesRegressor），该方法中，随机性在划分时会更进一步进行计算。在随机森林中，会使用候选feature的一个随机子集，而非查找最好的阈值，对于每个候选feature来说，阈值是抽取的，选择这种随机生成阈值的方式作为划分原则。\n\n2. 树模型的关键词提取算法实现\n\n+ 部分代码实现\n    \n```python\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.ensemble import ExtraTreesClassifier\nfrom sklearn.feature_selection import SelectFromModel\n \n# 导入SelectFromModel结合ExtraTreesClassifier计算特征重要性，并按重要性阈值选择特征。\n# 基于树模型进行模型选择\nclf_model = ExtraTreesClassifier(n_estimators=250, random_state=0)\nclf_model.fit(x_train, y_train)\n# 获取每个词的特征权重,数值越高特征越重要\nimportances = clf_model.feature_importances_\n# 选择特征重要性为1.5倍均值的特征\nmodel = SelectFromModel(clf_model, threshold='1.5*mean', prefit=True)\nx_train_new = model.transform(x_train)  # 返回训练集所选特征\nx_test_new = model.transform(x_test)  # 返回测试集所选特征\n```\n\n+ 部分代码实现\n\n    \n````python\n# 训练集和训练标签\nx_train, y_train\n# 候选特征词列表\nwords_list\n \n# 基于树模型进行模型选择\nforest = RandomForestClassifier(n_estimators=250, random_state=0)\nforest.fit(x_train, y_train)\nimportances = forest.feature_importances_  # 获取每个词的特征权重\n \n# 将词和词的权重存入字典\nfeature_words_dic = {}\nfor i in range(len(words_list)):\n    feature_words_dic[words_list[i]] = importances[i]\n \n# 对字典按权重由大到小进行排序\nwords_info_dic_sort = sorted(words_info_dic.items(), key=lambda x: x[1], reverse=True)\n \n# 将关键词和词的权重分别存入列表\nkeywords_list = []  # 关键词列表\nfeatures_list = []  # 关键权重列表\nfor word in words_info_dic_sort:\n    keywords_list.append(word[0])\n    features_list.append(word[1])\n \n# 选取前一千个关键词和权重写入文本文件\nkeywords = keywords_list[:1000]\nfeatures = features_list[:1000]\n \n# 将含有关键字的文本写入文件\nwith open('data/keywords_features.txt', 'a', encoding=\"utf-8\") as f:\n    for i in range(len(keywords)):\n        f.write(keywords[i] + '\\t' + features[i] + '\\n')\n````\n\n\n## 总结\n\n本文总结了本人在实验过程中所用到的常用关键词抽取方法，实验数据是基于公司的内部数据，但此篇总结只是方法上的讲解和实现，没有针对某一具体数据集做相应的结果分析。从实验中可以很明显看出有监督关键词抽取方法通常会显著好于无监督方法，但是有监督方法依赖一定规模的标注数据。","slug":"nlp-text-key","published":1,"updated":"2021-11-25T08:04:51.319Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl10m9kgs000hduwgutwermg6","content":"<h2 id=\"关键词提取\"><a href=\"#关键词提取\" class=\"headerlink\" title=\"关键词提取\"></a>关键词提取</h2><p><strong>关键词</strong>是能够表达文档中心内容的词语，常用于计算机系统标引论文内容特征、信息检索、系统汇集以供读者检阅。关键词提取是文本挖掘领域的一个分支，是文本检索、文本比较、摘要生成、文档分类和聚类等文本挖掘研究的基础性工作。<br>从算法角度，关键词提取算法主要有两类：无监督关键词提取算法和有监督关键词提取算法。</p>\n<ol>\n<li>无监督关键词提取算法<br>不需要人工标注的语料，利用某些方法发现文本中比较重要的词作为关键词，进行关键词提取。该方法是先抽取出候选词，然后对每个候选词进行打分，输出topK个分值最高的候选词作为关键词。根据打分的策略不同，有不同的算法，如TF-IDF、TextRank、LDA等算法。<br>无监督关键词提取方法主要有三类：<strong>基于统计特征的关键词提取（TF-IDF）</strong>；<strong>基于词图模型的关键词提取（PageRank，TextRank）</strong>；<strong>基于主题模型的关键词提取（LDA）</strong>。</li>\n</ol>\n<p><img src=\"total_method.png\" alt=\"无监督算法分类\"></p>\n<ul>\n<li>基于统计特征的关键词提取算法思想是利用文档中词语的统计信息抽取文档的关键词；</li>\n<li>基于词图模型的关键词提取首先要构建文档的语言网络图，然后对语言进行网络图分析，在这个图上寻找具有重要作用的词或者短语，这些短语就是文档的关键词；</li>\n<li>基于主题关键词提取算法主要利用的是主题模型中关于主题分布的性质进行关键词提取；</li>\n</ul>\n<ol start=\"2\">\n<li>有监督关键词提取算法<br>将关键词抽取过程视为二分类问题，先提取出候选词，然后对于每个候选词划定标签，要么是关键词，要么不是关键词，然后训练关键词抽取分类器。当新来一篇文档时，提取出所有的候选词，然后利用训练好的关键词提取分类器，对各个候选词进行分类，最终将标签为关键词的候选词作为关键词。</li>\n</ol>\n<p><img src=\"supervise.jpeg\" alt=\"有监督算法处理流程\"></p>\n<ol start=\"3\">\n<li><p>两种算法优缺点<br>无监督方法不需要人工标注训练集合的过程，因此更加快捷，但由于无法有效综合利用多信息对候选关键词排序，所以效果无法与有监督方法媲美；而有监督方法可以通过训练学习调节多种信息对于判断关键词的影响程度，因此效果更优，有监督的文本关键词提取算法需要高昂的人工成本（标注），因此现有的文本关键词提取主要采用适用性较强的无监督关键词提取。</p>\n</li>\n<li><p>关键词提取工具/sdk</p>\n</li>\n</ol>\n<ul>\n<li>jieba</li>\n<li><a href=\"https://pypi.org/project/textrank4zh/0.3/\" target=\"_blank\" rel=\"noopener\">Textrank4zh</a>（TextRank算法工具）</li>\n<li><a href=\"https://pypi.org/project/snownlp/\" target=\"_blank\" rel=\"noopener\">SnowNLP</a>（中文分析，简体中文文本处理）</li>\n<li><a href=\"https://pypi.org/project/textblob/\" target=\"_blank\" rel=\"noopener\">TextBlob</a>（英文分析）</li>\n</ul>\n<h2 id=\"TF-IDF关键词提取算法实现\"><a href=\"#TF-IDF关键词提取算法实现\" class=\"headerlink\" title=\"TF-IDF关键词提取算法实现\"></a>TF-IDF关键词提取算法实现</h2><p>TF-IDF算法的详细介绍及实现方法：<a href=\"https://blog.csdn.net/asialee_bird/article/details/81486700\" target=\"_blank\" rel=\"noopener\">算法实现</a></p>\n<h2 id=\"TextRank关键词提取算法实现\"><a href=\"#TextRank关键词提取算法实现\" class=\"headerlink\" title=\"TextRank关键词提取算法实现\"></a>TextRank关键词提取算法实现</h2><p>TextRank算法的详细介绍及实现方法：<a href=\"https://blog.csdn.net/asialee_bird/article/details/96894533\" target=\"_blank\" rel=\"noopener\">算法实现</a></p>\n<h2 id=\"LDA主题模型关键词提取算法实现\"><a href=\"#LDA主题模型关键词提取算法实现\" class=\"headerlink\" title=\"LDA主题模型关键词提取算法实现\"></a>LDA主题模型关键词提取算法实现</h2><ol>\n<li>LDA（Latent Dirichlet Allocation）文档主题生成模型</li>\n</ol>\n<p><strong>主题模型</strong>是一种统计模型，用于发现文档集合中出现的抽象“主题”。主题建模是一种常用的文本挖掘工具，用于在文本体中发现隐藏的语义结构。<br>LDA也称三层贝叶斯概率模型，包含词、主题、文档三层结构；利用文档中单词的共现关系来对单词按主题聚类，得到“文档-主题”和“主题-单词”2个概率分布。<br>详细可以参考<a href=\"https://blog.csdn.net/v_JULY_v/article/details/41209515\" target=\"_blank\" rel=\"noopener\">LDA通俗理解</a></p>\n<ol start=\"2\">\n<li>基于LDA主题模型的关键词提取算法实现</li>\n</ol>\n<pre class=\"line-numbers language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> gensim <span class=\"token keyword\">import</span> corpora<span class=\"token punctuation\">,</span> models\n<span class=\"token keyword\">import</span> jieba<span class=\"token punctuation\">.</span>posseg <span class=\"token keyword\">as</span> jp\n<span class=\"token keyword\">import</span> jieba\n\n<span class=\"token comment\" spellcheck=\"true\"># 简单文本处理</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">get_text</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    flags <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'n'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'nr'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ns'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'nt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'eng'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'v'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'d'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\" spellcheck=\"true\"># 词性</span>\n    stopwords <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'的'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'就'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'是'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'用'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'还'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'在'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'上'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'作为'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\" spellcheck=\"true\"># 停用词</span>\n    words_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> text <span class=\"token keyword\">in</span> texts<span class=\"token punctuation\">:</span>\n        words <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>w<span class=\"token punctuation\">.</span>word <span class=\"token keyword\">for</span> w <span class=\"token keyword\">in</span> jp<span class=\"token punctuation\">.</span>cut<span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> w<span class=\"token punctuation\">.</span>flag <span class=\"token keyword\">in</span> flags <span class=\"token operator\">and</span> w<span class=\"token punctuation\">.</span>word <span class=\"token operator\">not</span> <span class=\"token keyword\">in</span> stopwords<span class=\"token punctuation\">]</span>\n        words_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>words<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> words_list\n\n\n<span class=\"token comment\" spellcheck=\"true\"># 生成LDA模型</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">LDA_model</span><span class=\"token punctuation\">(</span>words_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\" spellcheck=\"true\"># 构造词典</span>\n    <span class=\"token comment\" spellcheck=\"true\"># Dictionary()方法遍历所有的文本，为每个不重复的单词分配一个单独的整数ID，同时收集该单词出现次数以及相关的统计信息</span>\n    dictionary <span class=\"token operator\">=</span> corpora<span class=\"token punctuation\">.</span>Dictionary<span class=\"token punctuation\">(</span>words_list<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>dictionary<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'打印查看每个单词的id:'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>dictionary<span class=\"token punctuation\">.</span>token2id<span class=\"token punctuation\">)</span>  <span class=\"token comment\" spellcheck=\"true\"># 打印查看每个单词的id</span>\n\n    <span class=\"token comment\" spellcheck=\"true\"># 将dictionary转化为一个词袋</span>\n    <span class=\"token comment\" spellcheck=\"true\"># doc2bow()方法将dictionary转化为一个词袋。得到的结果corpus是一个向量的列表，向量的个数就是文档数。</span>\n    <span class=\"token comment\" spellcheck=\"true\"># 在每个文档向量中都包含一系列元组,元组的形式是（单词 ID，词频）</span>\n    corpus <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>dictionary<span class=\"token punctuation\">.</span>doc2bow<span class=\"token punctuation\">(</span>words<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> words <span class=\"token keyword\">in</span> words_list<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'输出每个文档的向量:'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>corpus<span class=\"token punctuation\">)</span>  <span class=\"token comment\" spellcheck=\"true\"># 输出每个文档的向量</span>\n\n    <span class=\"token comment\" spellcheck=\"true\"># LDA主题模型</span>\n    <span class=\"token comment\" spellcheck=\"true\"># num_topics -- 必须，要生成的主题个数。</span>\n    <span class=\"token comment\" spellcheck=\"true\"># id2word    -- 必须，LdaModel类要求我们之前的dictionary把id都映射成为字符串。</span>\n    <span class=\"token comment\" spellcheck=\"true\"># passes     -- 可选，模型遍历语料库的次数。遍历的次数越多，模型越精确。但是对于非常大的语料库，遍历太多次会花费很长的时间。</span>\n    lda_model <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>ldamodel<span class=\"token punctuation\">.</span>LdaModel<span class=\"token punctuation\">(</span>corpus<span class=\"token operator\">=</span>corpus<span class=\"token punctuation\">,</span> num_topics<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> id2word<span class=\"token operator\">=</span>dictionary<span class=\"token punctuation\">,</span> passes<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> lda_model\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    texts <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'作为千元机中为数不多拥有真全面屏的手机，OPPO K3一经推出，就簇拥不少粉丝'</span><span class=\"token punctuation\">,</span> \\\n             <span class=\"token string\">'很多人在冲着这块屏幕购买了OPPO K3之后，发现原来K3的过人之处不止是在屏幕上'</span><span class=\"token punctuation\">,</span> \\\n             <span class=\"token string\">'OPPO K3的消费者对这部手机总体还是十分满意的'</span><span class=\"token punctuation\">,</span> \\\n             <span class=\"token string\">'吉利博越PRO在7月3日全新吉客智能生态系统GKUI19发布会上正式亮相'</span><span class=\"token punctuation\">,</span> \\\n             <span class=\"token string\">'今年上海车展，长安CS75 PLUS首次亮相'</span><span class=\"token punctuation\">,</span> \\\n             <span class=\"token string\">'普通版车型采用的是双边共双出式排气布局；运动版本车型采用双边共四出的排气布局'</span><span class=\"token punctuation\">]</span>\n    <span class=\"token comment\" spellcheck=\"true\"># 获取分词后的文本列表</span>\n    words_list <span class=\"token operator\">=</span> get_text<span class=\"token punctuation\">(</span>texts<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'分词后的文本：'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>words_list<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\" spellcheck=\"true\"># 获取训练后的LDA模型</span>\n    lda_model <span class=\"token operator\">=</span> LDA_model<span class=\"token punctuation\">(</span>words_list<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\" spellcheck=\"true\"># 可以用 print_topic 和 print_topics 方法来查看主题</span>\n    <span class=\"token comment\" spellcheck=\"true\"># 打印所有主题，每个主题显示5个词</span>\n    topic_words <span class=\"token operator\">=</span> lda_model<span class=\"token punctuation\">.</span>print_topics<span class=\"token punctuation\">(</span>num_topics<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> num_words<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'打印所有主题，每个主题显示5个词:'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>topic_words<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\" spellcheck=\"true\"># 输出该主题的的词及其词的权重</span>\n    words_list <span class=\"token operator\">=</span> lda_model<span class=\"token punctuation\">.</span>show_topic<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'输出该主题的的词及其词的权重:'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>words_list<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>可在本机python环境中运行并查看结果。</p>\n<h2 id=\"Word2Vec词聚类关键词提取算法实现\"><a href=\"#Word2Vec词聚类关键词提取算法实现\" class=\"headerlink\" title=\"Word2Vec词聚类关键词提取算法实现\"></a>Word2Vec词聚类关键词提取算法实现</h2><ol>\n<li><p>Word2Vec词向量表示<br>利用浅层神经网络模型自动学习词语在语料库中的出现情况，把词语嵌入到一个高维的空间中，通常在100-500维，在高维空间中词语被表示为词向量的形式。<br>特征词向量的抽取是基于已经训练好的词向量模型。</p>\n</li>\n<li><p>K-means聚类算法<br>聚类算法旨在数据中发现数据对象之间的关系，将数据进行分组，使得组内的相似性尽可能的大，组间的相似性尽可能的小。</p>\n</li>\n</ol>\n<p><strong>算法思想是</strong>：首先随机选择K个点作为初始质心，K为用户指定的所期望的簇的个数，通过计算每个点到各个质心的距离，将每个点指派到最近的质心形成K个簇，然后根据指派到簇的点重新计算每个簇的质心，重复指派和更新质心的操作，直到簇不发生变化或达到最大的迭代次数则停止。</p>\n<ol start=\"3\">\n<li>基于Word2Vec词聚类关键词提取方法的实现过程</li>\n</ol>\n<p><strong>主要思路</strong>是对于用词向量表示的词语，通过K-means算法对文章中的词进行聚类，选择聚类中心作为文本的一个主要关键词，计算其他词与聚类中心的距离即相似度，选择topK个距离聚类中心最近的词作为关键词，而这个词间相似度可用Word2Vec生成的向量计算得到。</p>\n<p><strong>具体步骤如下：</strong></p>\n<ul>\n<li>对语料进行Word2Vec模型训练，得到词向量文件；</li>\n<li>对文本进行预处理获得N个候选关键词；</li>\n<li>遍历候选关键词，从词向量文件中提取候选关键词的词向量表示；</li>\n<li>对候选关键词进行K-means聚类，得到各个类别的聚类中心（需要人为给定聚类的个数）；</li>\n<li>计算各类别下，组内词语与聚类中心的距离（欧几里得距离或曼哈顿距离），按聚类大小进行降序排序；</li>\n<li>对候选关键词计算结果得到排名前TopK个词语作为文本关键词。</li>\n</ul>\n<p>注：第三方工具包Scikit-learn提供了K-means聚类算法的相关函数，本文用到了sklearn.cluster.KMeans()函数执行K-means算法，sklearn.decomposition.PCA()函数用于数据降维以便绘制图形。</p>\n<h2 id=\"信息增益关键词提取算法实现\"><a href=\"#信息增益关键词提取算法实现\" class=\"headerlink\" title=\"信息增益关键词提取算法实现\"></a>信息增益关键词提取算法实现</h2><p>信息增益算法的详细介绍及实现方法：<a href=\"https://blog.csdn.net/asialee_bird/article/details/81084783\" target=\"_blank\" rel=\"noopener\">算法实现</a></p>\n<h2 id=\"互信息关键词提取算法实现\"><a href=\"#互信息关键词提取算法实现\" class=\"headerlink\" title=\"互信息关键词提取算法实现\"></a>互信息关键词提取算法实现</h2><ol>\n<li><p>互信息（Mutual Information，MI）<br>在概率论和信息论中，两个随机变量的互信息或转移信息（transinformation）是变量间相互依赖性的量度。不同于相关系数，互信息并不局限于实值随机变量，它更加一般且决定着联合分布 $p(X,Y)$ 和分解的边缘分布的乘积 $p(X)p(Y)$ 的相似程度。互信息是度量两个事件集合之间的相关性（mutual dependence）。<br>互信息被广泛用于度量一些语言现象的相关性。在信息论中，互信息被用于衡量两个词的相关度，也用来计算词与类别之间的相关性。</p>\n</li>\n<li><p>互信息计算公式<br>其中 $p(X,Y)$ 是X和Y的联合概率分布函数，而p(X)和p(Y)分别是X和Y的边缘概率分布函数。<br>$$<br>I(X; Y) = \\sum_{y\\in Y}\\sum_{x\\in X}p(x, y) \\log(\\frac{p(x,y)}{p(x)p(y)})<br>$$</p>\n</li>\n</ol>\n<p>$$<br>\\begin{aligned}<br>I(X; Y) &amp;= \\sum_{x,y}p(x, y) \\log{\\frac{p(x, y)}{p(x)p(y)}}\\\\<br>&amp;= \\sum_{x,y}p(x, y) \\log{\\frac{p(x, y)}{p(x)}} - \\sum_{x,y}p(x, y) \\log p(y)\\\\<br>&amp;= \\sum_{x,y}p(x)p(y|x) \\log(py|x) - \\sum_{x,y}p(x, y) \\log{p(y)}\\\\<br>&amp;= \\sum_xp(x)(\\sum_yp(y|x) \\log{p(y|x)}) - \\sum_y \\log{p(y)}(\\sum_xp(x,y))\\\\<br>&amp;= -\\sum_xp(x)H(Y|X=x) - \\sum_y \\log{p(y)p(y)}\\\\<br>&amp;= -H(Y|X) + H(Y)\\\\<br>&amp;= H(Y) - H(Y|X)<br>\\end{aligned}<br>$$</p>\n<ol start=\"3\">\n<li>互信息算法实现</li>\n</ol>\n<pre class=\"line-numbers language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> sklearn <span class=\"token keyword\">import</span> metrics\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n\n<span class=\"token comment\" spellcheck=\"true\"># 训练集和训练标签</span>\nx_train <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n           <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n           <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n           <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\ny_train <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\" spellcheck=\"true\"># 测试集和测试标签</span>\nx_test <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n\nx_train <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>x_train<span class=\"token punctuation\">)</span>  <span class=\"token comment\" spellcheck=\"true\"># 转为array</span>\n\n<span class=\"token comment\" spellcheck=\"true\"># 存储每个特征与标签相关性得分</span>\nfeatures_score_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> range<span class=\"token punctuation\">(</span>len<span class=\"token punctuation\">(</span>x_train<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\" spellcheck=\"true\"># 计算每个特征与标签的互信息</span>\n    feature_info <span class=\"token operator\">=</span> metrics<span class=\"token punctuation\">.</span>mutual_info_score<span class=\"token punctuation\">(</span>y_train<span class=\"token punctuation\">,</span> x_train<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    features_score_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>feature_info<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>features_score_list<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>请在本机查看运行结果。</p>\n<ol start=\"4\">\n<li>信息论中的互信息和决策树中的信息增益的关系</li>\n</ol>\n<p>$$<br>\\begin{aligned}<br>&amp; 信息论中互信息：\\\\<br>&amp; I(X;Y) = H(X) - H(X|Y)\\\\<br>&amp; 决策树中信息增益：\\\\<br>&amp; G(D,A) = H(D) - H(D|A)<br>\\end{aligned}<br>$$</p>\n<p>两者表达意思是一样的，都是表示得知特征X的信息而使得类Y的信息的不确定性减少的程度。</p>\n<p>注：</p>\n<ul>\n<li>标准化互信息（Normalized Mutual Information，NMI）可以用来衡量两种聚类结果的相似度。</li>\n<li>标准化互信息Sklearn实现：metrics.normalized_mutual_info_score(y_train, x_train[:,i])。</li>\n<li>点互信息（Pointwise Mutual Information，PMI）这个指标来衡量两个事物之间的相关性（比如两个词）。</li>\n</ul>\n<h2 id=\"卡方检验关键词提取算法实现\"><a href=\"#卡方检验关键词提取算法实现\" class=\"headerlink\" title=\"卡方检验关键词提取算法实现\"></a>卡方检验关键词提取算法实现</h2><ol>\n<li><p>卡方检验<br>卡方是数理统计中用于检验两个变量独立性的方法，是一种确定两个分类变量之间是否存在相关性的统计方法，经典的卡方检验师检验定性自变量对定性因变量的相关性。</p>\n</li>\n<li><p>基本思路</p>\n</li>\n</ol>\n<ul>\n<li>原假设：两个变量是独立的</li>\n<li>计算实际观察值和理论值之间的偏离程度</li>\n<li>如果偏差足够小，小于设定阈值，就接受原假设；否则就否定原假设，认为两变量是相关的。</li>\n</ul>\n<ol start=\"3\">\n<li>计算公式</li>\n</ol>\n<p>$$<br>x^2 = \\sum \\frac{(A-T)^2}{T}<br>$$</p>\n<p>其中，A为实际值，T为理论值。卡方检验可用于文本分类问题中的特征选择，此时不需要设定阈值，只关心找到最为相关的topK个特征。基本思想：比较理论频数和实际频数的吻合程度或者拟合优度问题。</p>\n<ol start=\"4\">\n<li>基于sklearn的卡方检验实现</li>\n</ol>\n<pre class=\"line-numbers language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>feature_selection <span class=\"token keyword\">import</span> SelectKBest\n<span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>feature_selection <span class=\"token keyword\">import</span> chi2\n\n<span class=\"token comment\" spellcheck=\"true\"># 训练集和训练标签</span>\nx_train <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n           <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n           <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n           <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\ny_train <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\" spellcheck=\"true\"># 测试集和测试标签</span>\nx_test <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\ny_test <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\" spellcheck=\"true\"># 卡方检验选择特征</span>\nchi2_model <span class=\"token operator\">=</span> SelectKBest<span class=\"token punctuation\">(</span>chi2<span class=\"token punctuation\">,</span> k<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\" spellcheck=\"true\"># 选择k个最佳特征</span>\n<span class=\"token comment\" spellcheck=\"true\"># 该函数选择训练集里的k个特征，并将训练集转化所选特征</span>\nx_train_chi2 <span class=\"token operator\">=</span> chi2_model<span class=\"token punctuation\">.</span>fit_transform<span class=\"token punctuation\">(</span>x_train<span class=\"token punctuation\">,</span> y_train<span class=\"token punctuation\">)</span>\n<span class=\"token comment\" spellcheck=\"true\"># 将测试集转化为所选特征</span>\nx_test_chi2 <span class=\"token operator\">=</span> chi2_model<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">(</span>x_test<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'各个特征的得分：'</span><span class=\"token punctuation\">,</span> chi2_model<span class=\"token punctuation\">.</span>scores_<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'各个特征的p值：'</span><span class=\"token punctuation\">,</span> chi2_model<span class=\"token punctuation\">.</span>pvalues_<span class=\"token punctuation\">)</span>  <span class=\"token comment\" spellcheck=\"true\"># p值越小，置信度越高，得分越高</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'所选特征的索引：'</span><span class=\"token punctuation\">,</span> chi2_model<span class=\"token punctuation\">.</span>get_support<span class=\"token punctuation\">(</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'特征提取转换后的训练集和测试集...'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'x_train_chi2:'</span><span class=\"token punctuation\">,</span> x_train_chi2<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'x_test_chi2:'</span><span class=\"token punctuation\">,</span> x_test_chi2<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>请在本机查看运行结果。</p>\n<h2 id=\"基于树模型关键词提取算法实现\"><a href=\"#基于树模型关键词提取算法实现\" class=\"headerlink\" title=\"基于树模型关键词提取算法实现\"></a>基于树模型关键词提取算法实现</h2><ol>\n<li>树模型<br>主要包括决策树和随机森林，基于树的预测模型（sklearn.tree模块和sklearn.ensemble模块）能够用来计算特征的重要程度，因此能用来去除不相关的特征（结合sklearn.feature_selection.SelectFromModel）</li>\n</ol>\n<p>sklearn.ensemble模块包含了两种基于随机决策树的平均算法：<strong>RandomForest</strong>算法和<strong>Extra-Trees</strong>算法。这两种算法都采用了很流行的树设计思想：perturb-and-combine思想。这种方法会在分类器的构建时，通过引入随机化，创建一组各不一样的分类器。这种ensemble方法的预测会给出各个分类器预测的平均。</p>\n<ul>\n<li><p>RandomForests在随机森林(RF)中，该ensemble方法中的每棵树都基于一个通过可放回抽样(boostrap)得到的训练集构建。相反的，在features的子集中随机进行split反倒是最好的split方式。sklearn的随机森林(RF)实现通过对各分类结果预测求平均得到，而非让每个分类器进行投票（vote）。</p>\n</li>\n<li><p>Ext-Trees在Ext-Trees中（详见ExtraTreesClassifier和ExtraTreesRegressor），该方法中，随机性在划分时会更进一步进行计算。在随机森林中，会使用候选feature的一个随机子集，而非查找最好的阈值，对于每个候选feature来说，阈值是抽取的，选择这种随机生成阈值的方式作为划分原则。</p>\n</li>\n</ul>\n<ol start=\"2\">\n<li>树模型的关键词提取算法实现</li>\n</ol>\n<ul>\n<li>部分代码实现</li>\n</ul>\n<pre class=\"line-numbers language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>tree <span class=\"token keyword\">import</span> DecisionTreeClassifier\n<span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>ensemble <span class=\"token keyword\">import</span> RandomForestClassifier\n<span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>ensemble <span class=\"token keyword\">import</span> ExtraTreesClassifier\n<span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>feature_selection <span class=\"token keyword\">import</span> SelectFromModel\n\n<span class=\"token comment\" spellcheck=\"true\"># 导入SelectFromModel结合ExtraTreesClassifier计算特征重要性，并按重要性阈值选择特征。</span>\n<span class=\"token comment\" spellcheck=\"true\"># 基于树模型进行模型选择</span>\nclf_model <span class=\"token operator\">=</span> ExtraTreesClassifier<span class=\"token punctuation\">(</span>n_estimators<span class=\"token operator\">=</span><span class=\"token number\">250</span><span class=\"token punctuation\">,</span> random_state<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\nclf_model<span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>x_train<span class=\"token punctuation\">,</span> y_train<span class=\"token punctuation\">)</span>\n<span class=\"token comment\" spellcheck=\"true\"># 获取每个词的特征权重,数值越高特征越重要</span>\nimportances <span class=\"token operator\">=</span> clf_model<span class=\"token punctuation\">.</span>feature_importances_\n<span class=\"token comment\" spellcheck=\"true\"># 选择特征重要性为1.5倍均值的特征</span>\nmodel <span class=\"token operator\">=</span> SelectFromModel<span class=\"token punctuation\">(</span>clf_model<span class=\"token punctuation\">,</span> threshold<span class=\"token operator\">=</span><span class=\"token string\">'1.5*mean'</span><span class=\"token punctuation\">,</span> prefit<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\nx_train_new <span class=\"token operator\">=</span> model<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">(</span>x_train<span class=\"token punctuation\">)</span>  <span class=\"token comment\" spellcheck=\"true\"># 返回训练集所选特征</span>\nx_test_new <span class=\"token operator\">=</span> model<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">(</span>x_test<span class=\"token punctuation\">)</span>  <span class=\"token comment\" spellcheck=\"true\"># 返回测试集所选特征</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li>部分代码实现</li>\n</ul>\n<pre class=\"line-numbers language-python\"><code class=\"language-python\"><span class=\"token comment\" spellcheck=\"true\"># 训练集和训练标签</span>\nx_train<span class=\"token punctuation\">,</span> y_train\n<span class=\"token comment\" spellcheck=\"true\"># 候选特征词列表</span>\nwords_list\n\n<span class=\"token comment\" spellcheck=\"true\"># 基于树模型进行模型选择</span>\nforest <span class=\"token operator\">=</span> RandomForestClassifier<span class=\"token punctuation\">(</span>n_estimators<span class=\"token operator\">=</span><span class=\"token number\">250</span><span class=\"token punctuation\">,</span> random_state<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\nforest<span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>x_train<span class=\"token punctuation\">,</span> y_train<span class=\"token punctuation\">)</span>\nimportances <span class=\"token operator\">=</span> forest<span class=\"token punctuation\">.</span>feature_importances_  <span class=\"token comment\" spellcheck=\"true\"># 获取每个词的特征权重</span>\n\n<span class=\"token comment\" spellcheck=\"true\"># 将词和词的权重存入字典</span>\nfeature_words_dic <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> range<span class=\"token punctuation\">(</span>len<span class=\"token punctuation\">(</span>words_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    feature_words_dic<span class=\"token punctuation\">[</span>words_list<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> importances<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\" spellcheck=\"true\"># 对字典按权重由大到小进行排序</span>\nwords_info_dic_sort <span class=\"token operator\">=</span> sorted<span class=\"token punctuation\">(</span>words_info_dic<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> key<span class=\"token operator\">=</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span> x<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> reverse<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\" spellcheck=\"true\"># 将关键词和词的权重分别存入列表</span>\nkeywords_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\" spellcheck=\"true\"># 关键词列表</span>\nfeatures_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\" spellcheck=\"true\"># 关键权重列表</span>\n<span class=\"token keyword\">for</span> word <span class=\"token keyword\">in</span> words_info_dic_sort<span class=\"token punctuation\">:</span>\n    keywords_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>word<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    features_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>word<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\" spellcheck=\"true\"># 选取前一千个关键词和权重写入文本文件</span>\nkeywords <span class=\"token operator\">=</span> keywords_list<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">1000</span><span class=\"token punctuation\">]</span>\nfeatures <span class=\"token operator\">=</span> features_list<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">1000</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\" spellcheck=\"true\"># 将含有关键字的文本写入文件</span>\n<span class=\"token keyword\">with</span> open<span class=\"token punctuation\">(</span><span class=\"token string\">'data/keywords_features.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> range<span class=\"token punctuation\">(</span>len<span class=\"token punctuation\">(</span>keywords<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>keywords<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\\t'</span> <span class=\"token operator\">+</span> features<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>本文总结了本人在实验过程中所用到的常用关键词抽取方法，实验数据是基于公司的内部数据，但此篇总结只是方法上的讲解和实现，没有针对某一具体数据集做相应的结果分析。从实验中可以很明显看出有监督关键词抽取方法通常会显著好于无监督方法，但是有监督方法依赖一定规模的标注数据。</p>\n","site":{"data":{"musics":[{"name":"夜曲","artist":"周杰伦","url":"/medias/music/yequ.mp3","cover":"/medias/music/avatars/yequ.jpg"},{"name":"一路向北","artist":"周杰伦","url":"/medias/music/yiluxiangbei.mp3","cover":"/medias/music/avatars/yiluxiangbei.jpg"},{"name":"来自天堂的魔鬼","artist":"邓紫棋","url":"/medias/music/tiantangdemogui.mp3","cover":"/medias/music/avatars/tiantangdemogui.jpg"},{"name":"倒数","artist":"邓紫棋","url":"/medias/music/daoshu.mp3","cover":"/medias/music/avatars/daoshu.jpg"}],"friends":[{"name":"知乎专栏","url":"https://zhuanlan.zhihu.com/godweiyang","title":"访问主页","introduction":"算法码上来","avatar":"/medias/avatars/myzhihu.png"},{"name":"火山翻译","url":"https://translate.volcengine.cn","title":"访问主页","introduction":"提供全球领先的翻译技术与服务","avatar":"/medias/avatars/bytedtrans.png"},{"name":"AntNLP","url":"https://antnlp.org","title":"访问主页","introduction":"华东师范大学自然语言处理实验室欢迎您的加入！","avatar":"/medias/avatars/antnlp.ico"},{"name":"IDS²","url":"https://www.smart-dependable-sino-europe.institute","title":"访问主页","introduction":"中欧可靠智能软件联合实验室欢迎您的加入！","avatar":"/medias/avatars/ids2.jpg"},{"name":"孙长志","url":"https://www.czsun.site","title":"访问主页","introduction":"AntNLP博士大师兄！","avatar":"/medias/avatars/sunchangzhi.jpg"},{"name":"纪焘","url":"https://taoji.site","title":"访问主页","introduction":"AntNLP博士带明星！","avatar":"/medias/avatars/jitao.jpg"},{"name":"杜雨沛","url":"https://yupei-du.github.io/","title":"访问主页","introduction":"AntNLP唱跳RAP打篮球全能师兄！","avatar":"/medias/avatars/duyupei.jpg"},{"name":"0xbirdpwn","url":"https://0xbird.top/","title":"访问主页","introduction":"十步杀一人，千里不留行，事了拂衣去，深藏功与名。","avatar":"/medias/avatars/0xbird.png"},{"name":"李佳倩的博客","url":"https://jiaqianlee.com/","title":"访问主页","introduction":"一只小白的成长之路！","avatar":"/medias/avatars/lijiaqian.png"},{"name":"kewlgrl","url":"https://blog.csdn.net/MIKASA3","title":"访问主页","introduction":"好大一只咸鱼哇","avatar":"/medias/avatars/kewlgrl.jpg"},{"name":"Think Far Blog","url":"https://wuli749826.github.io","title":"访问主页","introduction":"我曾经拥有这一切，转眼都飘散如烟。","avatar":"/medias/avatars/gsy.jpg"},{"name":"望城风景","url":"https://www.itaowei.cn/","title":"访问主页","introduction":"用力活过的日子，才配得上此刻的缅怀。","avatar":"/medias/avatars/taowei.jpg"},{"name":"jxtxzzw空间","url":"https://www.jxtxzzw.com/wordpress","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/zzw.jpg"},{"name":"DREAMWINGS","url":"https://www.dreamwings.cn/","title":"访问主页","introduction":"夢はそこでないと、私の権利である","avatar":"/medias/avatars/qianqian.png"},{"name":"ElaineLv","url":"https://www.elainelv.com/","title":"访问主页","introduction":"Stay hungry, Stay foolish","avatar":"/medias/avatars/lyn-draw.jpg"},{"name":"Subject_No_i","url":"https://subjectnoi.github.io","title":"访问主页","introduction":"在原七海 中野三玖 中野二乃 樱岛麻衣的老公","avatar":"/medias/avatars/lzh.png"},{"name":"菁菁","url":"https://angericky.github.io/","title":"访问主页","introduction":"做什么都是因为喜欢","avatar":"/medias/avatars/jingjing.jpg"},{"name":"Sweet-Q","url":"https://sweet-q.github.io","title":"访问主页","introduction":"华东师范大学数学系","avatar":"/medias/avatars/babyq.png"},{"name":"伟大的蚊子","url":"https://www.cnblogs.com/cww97/","title":"访问主页","introduction":"鼓楼的夜晚时间匆匆","avatar":"/medias/avatars/cww97.jpg"},{"name":"Fun4wut","url":"https://blog.fun4go.top","title":"访问主页","introduction":"菜鸡欢迎大佬的光顾","avatar":"/medias/avatars/fun4go.png"},{"name":"Hael Chan","url":"https://haelchan.me/","title":"访问主页","introduction":"浙江大学 & NLP & ML","avatar":"/medias/avatars/hael.jpg"},{"name":"happygirlzt","url":"https://www.happygirlzt.com","title":"访问主页","introduction":"A Backend Engineer","avatar":"/medias/avatars/zhangting.jpg"},{"name":"星空无限","url":"https://liyangzone.com","title":"访问主页","introduction":"前端开发，死飞大佬。分享技术，分享生活。","avatar":"/medias/avatars/liyangzone.jpg"},{"name":"Mashiro","url":"https://2heng.xin/","title":"访问主页","introduction":"樱花庄的白猫","avatar":"/medias/avatars/mashiro.jpg"},{"name":"hzwer","url":"https://hzwer.com/","title":"访问主页","introduction":"北京大学计算机系","avatar":"/medias/avatars/hzwer.jpg"},{"name":"MPY634","url":"https://mpy634.cn/","title":"访问主页","introduction":"摸鱼，永无止境。","avatar":"/medias/avatars/mpy634.png"},{"name":"徐铭辰的博客","url":"https://michaelxucs.com","title":"访问主页","introduction":"埃克塞特大学计算机系","avatar":"/medias/avatars/michael.jpg"},{"name":"Mizunashi","url":"https://mizunashi.me","title":"访问主页","introduction":"欢迎大佬们来玩","avatar":"/medias/avatars/mizunashi.png"},{"name":"xuzhongyou","url":"https://xuzhongyou.github.io/","title":"访问主页","introduction":"我哽咽道：你是赵默笙，可我不是何以琛啊。","avatar":"/medias/avatars/xuzhongyou.jpg"},{"name":"zerol","url":"https://zerol.me/","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/huaji.jpg"},{"name":"Zhang Yi","url":"https://codewithzhangyi.com/","title":"访问主页","introduction":"Coding is the New Sexy","avatar":"/medias/avatars/zhangyi.jpg"},{"name":"科学空间","url":"https://spaces.ac.cn/","title":"访问主页","introduction":"中山大学基础数学研究生","avatar":"/medias/avatars/spacesac.png"},{"name":"lucifer的博客","url":"https://lucifer.ren/blog/","title":"访问主页","introduction":"一个脑洞很大的程序员。","avatar":"https://tva1.sinaimg.cn/large/006tNbRwly1ga7ognflh9j30b40b4q3w.jpg"},{"name":"钱栋伟","url":"https://sscjwdyzdw.club","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/qiandongwei.jpg"},{"name":"CJ Blog","url":"https://chrisju.cn/","title":"访问主页","introduction":"Failing means foolish.","avatar":"/medias/avatars/mouse.jpg"},{"name":"Tawn","url":"https://tawn0000.github.io/","title":"访问主页","introduction":"JNU ACMer","avatar":"/medias/avatars/tawn.jpg"},{"name":"Master X","url":"https://masterx.top/","title":"访问主页","introduction":"ECNU&ML&DL","avatar":"/medias/avatars/masterx.jpg"},{"name":"分享客","url":"https://sharerdiary.com/","title":"访问主页","introduction":"爱生活，爱分享！","avatar":"/medias/avatars/yezijie.png"},{"name":"taotao","url":"https://zouzhitao.github.io","title":"访问主页","introduction":"taotao 码字的地方","avatar":"/medias/avatars/taotao.jpg"},{"name":"Xiejiadong","url":"https://xiejiadong.com","title":"访问主页","introduction":"Xiejiadong's blog","avatar":"/medias/avatars/xiejiadong.jpg"},{"name":"飞吧","url":"https://fei.bar","title":"访问主页","introduction":"啓飞的个人博客","avatar":"/medias/avatars/feibar.png"},{"name":"ajin","url":"https://ajin.cloud","title":"访问主页","introduction":"Always be enthusiastic","avatar":"/medias/avatars/ajin.jpg"},{"name":"Hiyoung","url":"https://hiyoungai.com/","title":"访问主页","introduction":"宠辱不惊，看庭前花开花落；去留无意，望天空云卷云舒。","avatar":"https://cdn.jsdelivr.net/gh/hiyoung123/cdn/img/avatar.jpg"},{"name":"无言的博客","url":"https://www.yzplove.top","title":"访问主页","introduction":"代码真是越敲越香","avatar":"https://cdn.jsdelivr.net/gh/yzp-99/yzp-99.github.io/medias/avatars/me.jpg"},{"name":"Naixin Zhang","url":"https://naixinzhang.github.io/","title":"访问主页","introduction":"Econ Master | Data Analyst/scientist Candidate","avatar":"https://naixinzhang.github.io/medias/avatars/avatar.jpg"},{"name":"帅张的梦呓","url":"https://ishuaizhang.com","title":"访问主页","introduction":"XDUer","avatar":"https://ishuaizhang.com/medias/avatars/avatar.jpg"},{"name":"Gatsby’s blog","url":"https://a347807131.github.io/","title":"访问主页","introduction":"Nothing perfect, Noting special.","avatar":"https://a347807131.github.io/medias/avatar.gif"},{"name":"宇宙湾","url":"https://yuzhouwan.com/","title":"访问主页","introduction":"主要是大数据和人工智能的原创文章。","avatar":"https://yuzhouwan.com/yuzhouwan_logo_128x128.ico"},{"name":"Dotnet9的博客","url":"https://dotnet9.com","title":"访问主页","introduction":"一个热衷于互联网分享精神的个人博客站点","avatar":"https://img.dotnet9.com/logo-foot.png"},{"name":"Macchiato","url":"https://hcj123123.oschina.io","title":"访问主页","introduction":"java学习者","avatar":"https://y.gtimg.cn/music/photo_new/T002R300x300M000002qD7gF3fW0JL_1.jpg?max_age=2592000"},{"name":"过客~励む","url":"https://yafine-blog.cn","title":"访问主页","introduction":"你现在的努力，是为了以后有更多的选择。","avatar":"https://yafine-blog.cn/medias/avatar.jpg"},{"name":"meteorsh","url":"https://weisenhui.top","title":"访问主页","introduction":"Data Science & Engineering","avatar":"https://weisenhui.top/medias/avatar.jpg"},{"name":"Kuroko","url":"https://kuroko.info","title":"访问主页","introduction":"浓烟下的诗歌电台","avatar":"http://kuroko.info/wp-content/uploads/2020/11/2.jpg"}]}},"excerpt":"","more":"<h2 id=\"关键词提取\"><a href=\"#关键词提取\" class=\"headerlink\" title=\"关键词提取\"></a>关键词提取</h2><p><strong>关键词</strong>是能够表达文档中心内容的词语，常用于计算机系统标引论文内容特征、信息检索、系统汇集以供读者检阅。关键词提取是文本挖掘领域的一个分支，是文本检索、文本比较、摘要生成、文档分类和聚类等文本挖掘研究的基础性工作。<br>从算法角度，关键词提取算法主要有两类：无监督关键词提取算法和有监督关键词提取算法。</p>\n<ol>\n<li>无监督关键词提取算法<br>不需要人工标注的语料，利用某些方法发现文本中比较重要的词作为关键词，进行关键词提取。该方法是先抽取出候选词，然后对每个候选词进行打分，输出topK个分值最高的候选词作为关键词。根据打分的策略不同，有不同的算法，如TF-IDF、TextRank、LDA等算法。<br>无监督关键词提取方法主要有三类：<strong>基于统计特征的关键词提取（TF-IDF）</strong>；<strong>基于词图模型的关键词提取（PageRank，TextRank）</strong>；<strong>基于主题模型的关键词提取（LDA）</strong>。</li>\n</ol>\n<p><img src=\"total_method.png\" alt=\"无监督算法分类\"></p>\n<ul>\n<li>基于统计特征的关键词提取算法思想是利用文档中词语的统计信息抽取文档的关键词；</li>\n<li>基于词图模型的关键词提取首先要构建文档的语言网络图，然后对语言进行网络图分析，在这个图上寻找具有重要作用的词或者短语，这些短语就是文档的关键词；</li>\n<li>基于主题关键词提取算法主要利用的是主题模型中关于主题分布的性质进行关键词提取；</li>\n</ul>\n<ol start=\"2\">\n<li>有监督关键词提取算法<br>将关键词抽取过程视为二分类问题，先提取出候选词，然后对于每个候选词划定标签，要么是关键词，要么不是关键词，然后训练关键词抽取分类器。当新来一篇文档时，提取出所有的候选词，然后利用训练好的关键词提取分类器，对各个候选词进行分类，最终将标签为关键词的候选词作为关键词。</li>\n</ol>\n<p><img src=\"supervise.jpeg\" alt=\"有监督算法处理流程\"></p>\n<ol start=\"3\">\n<li><p>两种算法优缺点<br>无监督方法不需要人工标注训练集合的过程，因此更加快捷，但由于无法有效综合利用多信息对候选关键词排序，所以效果无法与有监督方法媲美；而有监督方法可以通过训练学习调节多种信息对于判断关键词的影响程度，因此效果更优，有监督的文本关键词提取算法需要高昂的人工成本（标注），因此现有的文本关键词提取主要采用适用性较强的无监督关键词提取。</p>\n</li>\n<li><p>关键词提取工具/sdk</p>\n</li>\n</ol>\n<ul>\n<li>jieba</li>\n<li><a href=\"https://pypi.org/project/textrank4zh/0.3/\" target=\"_blank\" rel=\"noopener\">Textrank4zh</a>（TextRank算法工具）</li>\n<li><a href=\"https://pypi.org/project/snownlp/\" target=\"_blank\" rel=\"noopener\">SnowNLP</a>（中文分析，简体中文文本处理）</li>\n<li><a href=\"https://pypi.org/project/textblob/\" target=\"_blank\" rel=\"noopener\">TextBlob</a>（英文分析）</li>\n</ul>\n<h2 id=\"TF-IDF关键词提取算法实现\"><a href=\"#TF-IDF关键词提取算法实现\" class=\"headerlink\" title=\"TF-IDF关键词提取算法实现\"></a>TF-IDF关键词提取算法实现</h2><p>TF-IDF算法的详细介绍及实现方法：<a href=\"https://blog.csdn.net/asialee_bird/article/details/81486700\" target=\"_blank\" rel=\"noopener\">算法实现</a></p>\n<h2 id=\"TextRank关键词提取算法实现\"><a href=\"#TextRank关键词提取算法实现\" class=\"headerlink\" title=\"TextRank关键词提取算法实现\"></a>TextRank关键词提取算法实现</h2><p>TextRank算法的详细介绍及实现方法：<a href=\"https://blog.csdn.net/asialee_bird/article/details/96894533\" target=\"_blank\" rel=\"noopener\">算法实现</a></p>\n<h2 id=\"LDA主题模型关键词提取算法实现\"><a href=\"#LDA主题模型关键词提取算法实现\" class=\"headerlink\" title=\"LDA主题模型关键词提取算法实现\"></a>LDA主题模型关键词提取算法实现</h2><ol>\n<li>LDA（Latent Dirichlet Allocation）文档主题生成模型</li>\n</ol>\n<p><strong>主题模型</strong>是一种统计模型，用于发现文档集合中出现的抽象“主题”。主题建模是一种常用的文本挖掘工具，用于在文本体中发现隐藏的语义结构。<br>LDA也称三层贝叶斯概率模型，包含词、主题、文档三层结构；利用文档中单词的共现关系来对单词按主题聚类，得到“文档-主题”和“主题-单词”2个概率分布。<br>详细可以参考<a href=\"https://blog.csdn.net/v_JULY_v/article/details/41209515\" target=\"_blank\" rel=\"noopener\">LDA通俗理解</a></p>\n<ol start=\"2\">\n<li>基于LDA主题模型的关键词提取算法实现</li>\n</ol>\n<pre><code class=\"python\">from gensim import corpora, models\nimport jieba.posseg as jp\nimport jieba\n\n# 简单文本处理\ndef get_text(text):\n    flags = (&#39;n&#39;, &#39;nr&#39;, &#39;ns&#39;, &#39;nt&#39;, &#39;eng&#39;, &#39;v&#39;, &#39;d&#39;)  # 词性\n    stopwords = (&#39;的&#39;, &#39;就&#39;, &#39;是&#39;, &#39;用&#39;, &#39;还&#39;, &#39;在&#39;, &#39;上&#39;, &#39;作为&#39;)  # 停用词\n    words_list = []\n    for text in texts:\n        words = [w.word for w in jp.cut(text) if w.flag in flags and w.word not in stopwords]\n        words_list.append(words)\n    return words_list\n\n\n# 生成LDA模型\ndef LDA_model(words_list):\n    # 构造词典\n    # Dictionary()方法遍历所有的文本，为每个不重复的单词分配一个单独的整数ID，同时收集该单词出现次数以及相关的统计信息\n    dictionary = corpora.Dictionary(words_list)\n    print(dictionary)\n    print(&#39;打印查看每个单词的id:&#39;)\n    print(dictionary.token2id)  # 打印查看每个单词的id\n\n    # 将dictionary转化为一个词袋\n    # doc2bow()方法将dictionary转化为一个词袋。得到的结果corpus是一个向量的列表，向量的个数就是文档数。\n    # 在每个文档向量中都包含一系列元组,元组的形式是（单词 ID，词频）\n    corpus = [dictionary.doc2bow(words) for words in words_list]\n    print(&#39;输出每个文档的向量:&#39;)\n    print(corpus)  # 输出每个文档的向量\n\n    # LDA主题模型\n    # num_topics -- 必须，要生成的主题个数。\n    # id2word    -- 必须，LdaModel类要求我们之前的dictionary把id都映射成为字符串。\n    # passes     -- 可选，模型遍历语料库的次数。遍历的次数越多，模型越精确。但是对于非常大的语料库，遍历太多次会花费很长的时间。\n    lda_model = models.ldamodel.LdaModel(corpus=corpus, num_topics=2, id2word=dictionary, passes=10)\n\n    return lda_model\n\n\nif __name__ == &quot;__main__&quot;:\n    texts = [&#39;作为千元机中为数不多拥有真全面屏的手机，OPPO K3一经推出，就簇拥不少粉丝&#39;, \\\n             &#39;很多人在冲着这块屏幕购买了OPPO K3之后，发现原来K3的过人之处不止是在屏幕上&#39;, \\\n             &#39;OPPO K3的消费者对这部手机总体还是十分满意的&#39;, \\\n             &#39;吉利博越PRO在7月3日全新吉客智能生态系统GKUI19发布会上正式亮相&#39;, \\\n             &#39;今年上海车展，长安CS75 PLUS首次亮相&#39;, \\\n             &#39;普通版车型采用的是双边共双出式排气布局；运动版本车型采用双边共四出的排气布局&#39;]\n    # 获取分词后的文本列表\n    words_list = get_text(texts)\n    print(&#39;分词后的文本：&#39;)\n    print(words_list)\n\n    # 获取训练后的LDA模型\n    lda_model = LDA_model(words_list)\n\n    # 可以用 print_topic 和 print_topics 方法来查看主题\n    # 打印所有主题，每个主题显示5个词\n    topic_words = lda_model.print_topics(num_topics=2, num_words=5)\n    print(&#39;打印所有主题，每个主题显示5个词:&#39;)\n    print(topic_words)\n\n    # 输出该主题的的词及其词的权重\n    words_list = lda_model.show_topic(0, 5)\n    print(&#39;输出该主题的的词及其词的权重:&#39;)\n    print(words_list)</code></pre>\n<p>可在本机python环境中运行并查看结果。</p>\n<h2 id=\"Word2Vec词聚类关键词提取算法实现\"><a href=\"#Word2Vec词聚类关键词提取算法实现\" class=\"headerlink\" title=\"Word2Vec词聚类关键词提取算法实现\"></a>Word2Vec词聚类关键词提取算法实现</h2><ol>\n<li><p>Word2Vec词向量表示<br>利用浅层神经网络模型自动学习词语在语料库中的出现情况，把词语嵌入到一个高维的空间中，通常在100-500维，在高维空间中词语被表示为词向量的形式。<br>特征词向量的抽取是基于已经训练好的词向量模型。</p>\n</li>\n<li><p>K-means聚类算法<br>聚类算法旨在数据中发现数据对象之间的关系，将数据进行分组，使得组内的相似性尽可能的大，组间的相似性尽可能的小。</p>\n</li>\n</ol>\n<p><strong>算法思想是</strong>：首先随机选择K个点作为初始质心，K为用户指定的所期望的簇的个数，通过计算每个点到各个质心的距离，将每个点指派到最近的质心形成K个簇，然后根据指派到簇的点重新计算每个簇的质心，重复指派和更新质心的操作，直到簇不发生变化或达到最大的迭代次数则停止。</p>\n<ol start=\"3\">\n<li>基于Word2Vec词聚类关键词提取方法的实现过程</li>\n</ol>\n<p><strong>主要思路</strong>是对于用词向量表示的词语，通过K-means算法对文章中的词进行聚类，选择聚类中心作为文本的一个主要关键词，计算其他词与聚类中心的距离即相似度，选择topK个距离聚类中心最近的词作为关键词，而这个词间相似度可用Word2Vec生成的向量计算得到。</p>\n<p><strong>具体步骤如下：</strong></p>\n<ul>\n<li>对语料进行Word2Vec模型训练，得到词向量文件；</li>\n<li>对文本进行预处理获得N个候选关键词；</li>\n<li>遍历候选关键词，从词向量文件中提取候选关键词的词向量表示；</li>\n<li>对候选关键词进行K-means聚类，得到各个类别的聚类中心（需要人为给定聚类的个数）；</li>\n<li>计算各类别下，组内词语与聚类中心的距离（欧几里得距离或曼哈顿距离），按聚类大小进行降序排序；</li>\n<li>对候选关键词计算结果得到排名前TopK个词语作为文本关键词。</li>\n</ul>\n<p>注：第三方工具包Scikit-learn提供了K-means聚类算法的相关函数，本文用到了sklearn.cluster.KMeans()函数执行K-means算法，sklearn.decomposition.PCA()函数用于数据降维以便绘制图形。</p>\n<h2 id=\"信息增益关键词提取算法实现\"><a href=\"#信息增益关键词提取算法实现\" class=\"headerlink\" title=\"信息增益关键词提取算法实现\"></a>信息增益关键词提取算法实现</h2><p>信息增益算法的详细介绍及实现方法：<a href=\"https://blog.csdn.net/asialee_bird/article/details/81084783\" target=\"_blank\" rel=\"noopener\">算法实现</a></p>\n<h2 id=\"互信息关键词提取算法实现\"><a href=\"#互信息关键词提取算法实现\" class=\"headerlink\" title=\"互信息关键词提取算法实现\"></a>互信息关键词提取算法实现</h2><ol>\n<li><p>互信息（Mutual Information，MI）<br>在概率论和信息论中，两个随机变量的互信息或转移信息（transinformation）是变量间相互依赖性的量度。不同于相关系数，互信息并不局限于实值随机变量，它更加一般且决定着联合分布 $p(X,Y)$ 和分解的边缘分布的乘积 $p(X)p(Y)$ 的相似程度。互信息是度量两个事件集合之间的相关性（mutual dependence）。<br>互信息被广泛用于度量一些语言现象的相关性。在信息论中，互信息被用于衡量两个词的相关度，也用来计算词与类别之间的相关性。</p>\n</li>\n<li><p>互信息计算公式<br>其中 $p(X,Y)$ 是X和Y的联合概率分布函数，而p(X)和p(Y)分别是X和Y的边缘概率分布函数。<br>$$<br>I(X; Y) = \\sum_{y\\in Y}\\sum_{x\\in X}p(x, y) \\log(\\frac{p(x,y)}{p(x)p(y)})<br>$$</p>\n</li>\n</ol>\n<p>$$<br>\\begin{aligned}<br>I(X; Y) &amp;= \\sum_{x,y}p(x, y) \\log{\\frac{p(x, y)}{p(x)p(y)}}\\\\<br>&amp;= \\sum_{x,y}p(x, y) \\log{\\frac{p(x, y)}{p(x)}} - \\sum_{x,y}p(x, y) \\log p(y)\\\\<br>&amp;= \\sum_{x,y}p(x)p(y|x) \\log(py|x) - \\sum_{x,y}p(x, y) \\log{p(y)}\\\\<br>&amp;= \\sum_xp(x)(\\sum_yp(y|x) \\log{p(y|x)}) - \\sum_y \\log{p(y)}(\\sum_xp(x,y))\\\\<br>&amp;= -\\sum_xp(x)H(Y|X=x) - \\sum_y \\log{p(y)p(y)}\\\\<br>&amp;= -H(Y|X) + H(Y)\\\\<br>&amp;= H(Y) - H(Y|X)<br>\\end{aligned}<br>$$</p>\n<ol start=\"3\">\n<li>互信息算法实现</li>\n</ol>\n<pre><code class=\"python\">from sklearn import metrics\nimport numpy as np\n\n# 训练集和训练标签\nx_train = [[1, 2, 3, 4, 5],\n           [5, 4, 3, 2, 1],\n           [3, 3, 3, 3, 3],\n           [1, 1, 1, 1, 1]]\ny_train = [0, 1, 0, 1]\n# 测试集和测试标签\nx_test = [[2, 2, 2, 2, 2], [2, 1, 1, 2, 1]]\n\nx_train = np.array(x_train)  # 转为array\n\n# 存储每个特征与标签相关性得分\nfeatures_score_list = []\nfor i in range(len(x_train[0])):\n    # 计算每个特征与标签的互信息\n    feature_info = metrics.mutual_info_score(y_train, x_train[:, i])\n    features_score_list.append(feature_info)\n\nprint(features_score_list)</code></pre>\n<p>请在本机查看运行结果。</p>\n<ol start=\"4\">\n<li>信息论中的互信息和决策树中的信息增益的关系</li>\n</ol>\n<p>$$<br>\\begin{aligned}<br>&amp; 信息论中互信息：\\\\<br>&amp; I(X;Y) = H(X) - H(X|Y)\\\\<br>&amp; 决策树中信息增益：\\\\<br>&amp; G(D,A) = H(D) - H(D|A)<br>\\end{aligned}<br>$$</p>\n<p>两者表达意思是一样的，都是表示得知特征X的信息而使得类Y的信息的不确定性减少的程度。</p>\n<p>注：</p>\n<ul>\n<li>标准化互信息（Normalized Mutual Information，NMI）可以用来衡量两种聚类结果的相似度。</li>\n<li>标准化互信息Sklearn实现：metrics.normalized_mutual_info_score(y_train, x_train[:,i])。</li>\n<li>点互信息（Pointwise Mutual Information，PMI）这个指标来衡量两个事物之间的相关性（比如两个词）。</li>\n</ul>\n<h2 id=\"卡方检验关键词提取算法实现\"><a href=\"#卡方检验关键词提取算法实现\" class=\"headerlink\" title=\"卡方检验关键词提取算法实现\"></a>卡方检验关键词提取算法实现</h2><ol>\n<li><p>卡方检验<br>卡方是数理统计中用于检验两个变量独立性的方法，是一种确定两个分类变量之间是否存在相关性的统计方法，经典的卡方检验师检验定性自变量对定性因变量的相关性。</p>\n</li>\n<li><p>基本思路</p>\n</li>\n</ol>\n<ul>\n<li>原假设：两个变量是独立的</li>\n<li>计算实际观察值和理论值之间的偏离程度</li>\n<li>如果偏差足够小，小于设定阈值，就接受原假设；否则就否定原假设，认为两变量是相关的。</li>\n</ul>\n<ol start=\"3\">\n<li>计算公式</li>\n</ol>\n<p>$$<br>x^2 = \\sum \\frac{(A-T)^2}{T}<br>$$</p>\n<p>其中，A为实际值，T为理论值。卡方检验可用于文本分类问题中的特征选择，此时不需要设定阈值，只关心找到最为相关的topK个特征。基本思想：比较理论频数和实际频数的吻合程度或者拟合优度问题。</p>\n<ol start=\"4\">\n<li>基于sklearn的卡方检验实现</li>\n</ol>\n<pre><code class=\"python\">from sklearn.feature_selection import SelectKBest\nfrom sklearn.feature_selection import chi2\n\n# 训练集和训练标签\nx_train = [[1, 2, 3, 4, 5],\n           [5, 4, 3, 2, 1],\n           [3, 3, 3, 3, 3],\n           [1, 1, 1, 1, 1]]\ny_train = [0, 1, 0, 1]\n# 测试集和测试标签\nx_test = [[2, 2, 2, 2, 2], [2, 1, 1, 2, 1]]\ny_test = [1, 1]\n\n# 卡方检验选择特征\nchi2_model = SelectKBest(chi2, k=3)  # 选择k个最佳特征\n# 该函数选择训练集里的k个特征，并将训练集转化所选特征\nx_train_chi2 = chi2_model.fit_transform(x_train, y_train)\n# 将测试集转化为所选特征\nx_test_chi2 = chi2_model.transform(x_test)\n\nprint(&#39;各个特征的得分：&#39;, chi2_model.scores_)\nprint(&#39;各个特征的p值：&#39;, chi2_model.pvalues_)  # p值越小，置信度越高，得分越高\nprint(&#39;所选特征的索引：&#39;, chi2_model.get_support(True))\nprint(&#39;特征提取转换后的训练集和测试集...&#39;)\nprint(&#39;x_train_chi2:&#39;, x_train_chi2)\nprint(&#39;x_test_chi2:&#39;, x_test_chi2)</code></pre>\n<p>请在本机查看运行结果。</p>\n<h2 id=\"基于树模型关键词提取算法实现\"><a href=\"#基于树模型关键词提取算法实现\" class=\"headerlink\" title=\"基于树模型关键词提取算法实现\"></a>基于树模型关键词提取算法实现</h2><ol>\n<li>树模型<br>主要包括决策树和随机森林，基于树的预测模型（sklearn.tree模块和sklearn.ensemble模块）能够用来计算特征的重要程度，因此能用来去除不相关的特征（结合sklearn.feature_selection.SelectFromModel）</li>\n</ol>\n<p>sklearn.ensemble模块包含了两种基于随机决策树的平均算法：<strong>RandomForest</strong>算法和<strong>Extra-Trees</strong>算法。这两种算法都采用了很流行的树设计思想：perturb-and-combine思想。这种方法会在分类器的构建时，通过引入随机化，创建一组各不一样的分类器。这种ensemble方法的预测会给出各个分类器预测的平均。</p>\n<ul>\n<li><p>RandomForests在随机森林(RF)中，该ensemble方法中的每棵树都基于一个通过可放回抽样(boostrap)得到的训练集构建。相反的，在features的子集中随机进行split反倒是最好的split方式。sklearn的随机森林(RF)实现通过对各分类结果预测求平均得到，而非让每个分类器进行投票（vote）。</p>\n</li>\n<li><p>Ext-Trees在Ext-Trees中（详见ExtraTreesClassifier和ExtraTreesRegressor），该方法中，随机性在划分时会更进一步进行计算。在随机森林中，会使用候选feature的一个随机子集，而非查找最好的阈值，对于每个候选feature来说，阈值是抽取的，选择这种随机生成阈值的方式作为划分原则。</p>\n</li>\n</ul>\n<ol start=\"2\">\n<li>树模型的关键词提取算法实现</li>\n</ol>\n<ul>\n<li>部分代码实现</li>\n</ul>\n<pre><code class=\"python\">from sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.ensemble import ExtraTreesClassifier\nfrom sklearn.feature_selection import SelectFromModel\n\n# 导入SelectFromModel结合ExtraTreesClassifier计算特征重要性，并按重要性阈值选择特征。\n# 基于树模型进行模型选择\nclf_model = ExtraTreesClassifier(n_estimators=250, random_state=0)\nclf_model.fit(x_train, y_train)\n# 获取每个词的特征权重,数值越高特征越重要\nimportances = clf_model.feature_importances_\n# 选择特征重要性为1.5倍均值的特征\nmodel = SelectFromModel(clf_model, threshold=&#39;1.5*mean&#39;, prefit=True)\nx_train_new = model.transform(x_train)  # 返回训练集所选特征\nx_test_new = model.transform(x_test)  # 返回测试集所选特征</code></pre>\n<ul>\n<li>部分代码实现</li>\n</ul>\n<pre><code class=\"python\"># 训练集和训练标签\nx_train, y_train\n# 候选特征词列表\nwords_list\n\n# 基于树模型进行模型选择\nforest = RandomForestClassifier(n_estimators=250, random_state=0)\nforest.fit(x_train, y_train)\nimportances = forest.feature_importances_  # 获取每个词的特征权重\n\n# 将词和词的权重存入字典\nfeature_words_dic = {}\nfor i in range(len(words_list)):\n    feature_words_dic[words_list[i]] = importances[i]\n\n# 对字典按权重由大到小进行排序\nwords_info_dic_sort = sorted(words_info_dic.items(), key=lambda x: x[1], reverse=True)\n\n# 将关键词和词的权重分别存入列表\nkeywords_list = []  # 关键词列表\nfeatures_list = []  # 关键权重列表\nfor word in words_info_dic_sort:\n    keywords_list.append(word[0])\n    features_list.append(word[1])\n\n# 选取前一千个关键词和权重写入文本文件\nkeywords = keywords_list[:1000]\nfeatures = features_list[:1000]\n\n# 将含有关键字的文本写入文件\nwith open(&#39;data/keywords_features.txt&#39;, &#39;a&#39;, encoding=&quot;utf-8&quot;) as f:\n    for i in range(len(keywords)):\n        f.write(keywords[i] + &#39;\\t&#39; + features[i] + &#39;\\n&#39;)</code></pre>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>本文总结了本人在实验过程中所用到的常用关键词抽取方法，实验数据是基于公司的内部数据，但此篇总结只是方法上的讲解和实现，没有针对某一具体数据集做相应的结果分析。从实验中可以很明显看出有监督关键词抽取方法通常会显著好于无监督方法，但是有监督方法依赖一定规模的标注数据。</p>\n"},{"title":"广义文本的向量表示方法","top":false,"cover":false,"toc":true,"mathjax":true,"date":"2021-11-12T06:54:22.000Z","password":null,"summary":null,"_content":"\nNLP的基础工作就是文本处理，向量化文本表示的核心目的是将文本表示为一系列的能够表达文本语义的向量，有word2vec、str2vec和doc2vec技术，区别是目标处理单元不同。\nword2vec即词向量，str2vec为句向量，doc2vec则为文档向量。\n\n## word2vec\n词袋（bag of word）模型是最早的以词为基础处理单元的文本向量化方法。该模型产生的向量与原来文本中单词出现的顺序没有关系，而是词典中每个单词再文本中出现的频率。该方法虽然简单，但有以下问题：\n1. 维度灾难\n2. 无法保留词序信息\n3. 存在语义鸿沟\n\n随着互联网技术的发展，大量无标注数据的产生，研究中心转移到利用无标注数据挖掘有价值的信息上来。word2vec（词向量）就是为了利用神经网络，从大量无标注的文本中提取有用的信息而产生。\n\n词袋模型只是将词语符号化，所以词袋模型是不包含语义信息的。如何使词表示包含语义信息是该领域研究者面临的问题。分布假设（distributional hypothesis）的提出为解决上述问题提供了理论基础。该假设的核心思想是：上下文相似的词，其语义也相似。随后大量研究人员整理了利用上下文表示词义的方法，这类方法就是有名的词空间模型（word space model）。通过语言模型构建上下文与目标词之间的关系，是一种常见的方法，神经网络词向量模型就是根据上下文与目标词之间的关系进行建模。\n\n## NNLM\n神经网络语言模型（Neural Network Language Model，NNLM）与传统方法估算的不同在于通过一个神经网络结构对n元条件概率进行估计。由于NNLM模型使用低维紧凑的词向量对上下文进行表示，解决了词袋模型带来的数据稀疏、语义鸿沟等问题。另一方面，在相似的上下文环境中，NNLM模型可以预测出相似的目标词，而传统模型无法做到这一点。例如，如果在预料中 A=“小狗在院子里趴着” 出现1000次， B=“小猫在院子里趴着” 出现1次。A和B的唯一区别就是狗和猫，两个词无论在语义还是语法上都相似。根据频率来估算概率P(A) >> P(B)，这显然不合理。如果采用NNLM计算P(A)~P(B)，因为NNLM模型采用低维的向量表示词语，假定相似的词，则其词向量也相似。\n\n![NNLM词向量处理模型](str_nnlm.png)\n\n## C&W\nC&W = context & word(上下文和目标词)，主要目的并不在于生成一份好的词向量，甚至不想训练语言模型，而是要用这份词向量去完成NLP里面的各项任务，比如词性标注、命名实体识别、短语识别、语义角色标注等等。NNLM模型的目标是构建一个语言概率模型，而C&W则是以生成词向量为目标的模型。C&W模型并没有采用语言模型去求解词语上下文的条件概率，而是直接对n元短语打分，这就省去了NNLM模型中从隐藏层到输出层的权重计算，大大降低了运算量。其核心机理是：如果n元短语在语料库中出现过，那么模型会给该短语打高分；如果是未出现则在语料库中的短语则会得到较低的评分。\n\n## CBOW and Skip-gram\n为了更高效的获取词向量，研究者在NNLM和C&W模型的基础上保留其核心部分，得到CBOW（Continuous Bag of Words）模型和Skip-gram模型。\n\n![CBOW模型](cbow.png)\n\n模型使用一段文本的中间词作为目标词，去掉了隐藏层，大幅度提升了计算频率。此外，CBOW模型还使用上下文歌词的词向量的平均值替代NNLM模型各个拼接的词向量。即根据上下文来预测当前词语的频率，且上下文所有词出现频率的影响权重是一样的。Skip-gram模型同样没有隐藏层，与CBOW模型输入上下文词的平均词向量不同，它是从目标词W的上下文中选择一个词，将其词向量组成上下文的表示。即根据当前词语来预测上下文概率。\n\n## doc2vec/str2vec\n利用word2vec计算词语间的相似度有非常好的效果，word2vec技术也可以用于计算句子或者其他长文本间的相似度，其一般做法是对文本粉刺后，提取其关键词，用词向量表示这些关键词，接着对关键词向量求平均或者将其拼接，最后利用词向量计算文本间的相似度。这种方法丢失了文本中的次序信息，而文本的语序包含重要信息。为此，有研究者在word2vec的基础上提出了文档向量化（doc2vec），又称str2vec和para2vec。\n\ndoc2vec技术存在两种模型--Distributed Memory(DM)和Distributed Bag of Words(DBOW)，分别对应word2vec技术里的CBOW和Skip-gram模型。Doc2vec相对于word2vec不同之处在于，在输入层，增添了一个新句子向量Paragraph vector， Paragraph vector可以被看作是另一个词向量，它扮演了一个记忆，词袋模型中，因为每次训练只会截取句子中一小部分词训练，而忽略了除了本次训练词以外该句子中的其他词，忽略了文本的词序问题。而doc2vec中的paragraph vector则弥补了这方面的不足，它每次训练也是滑动截取句子中一小部分词来训练，paragraph vector在同一个句子的若干次训练中是共享的，所以同一句话会有多次训练，每次训练中输入都包含paragraph vector。它可以被看作是句子的主旨（中心思想），有了它，该句子的主旨每次都会被放入作为输入的一部分来训练。这样每次训练中，不光是训练了词，得到了词向量。同时随着一句话每次滑动截取若干词训练的过程中，作为每次训练的输入层一部分的共享paragraph vector，该向量的主旨会越来越准确。\n\n![DBOW模型示意图](mod_dbow.png)\n\n那么doc2vec是怎么预测新的句子paragraph vector呢？其实在预测新句子的时候，还是会将该paragraph vector随机初始化，放入模型中再重新根据随机梯度下降不断迭代求得最终稳定下来的句子向量。不过在预测过程中，模型里的词向量还有投影层到输出层的softmax weights参数是不会变的，这样在不断迭代中只会更新paragraph vector，其他参数均已固定，只需很少的时间就能计算出带预测的paragraph vector。","source":"_posts/text2vec.md","raw":"---\ntitle: 广义文本的向量表示方法\ntop: false\ncover: false\ntoc: true\nmathjax: true\ndate: 2021-11-12 14:54:22\npassword:\nsummary:\ntags:\n- 内容推荐\n- NLP\n- 文本向量化\ncategories:\n- 算法\n---\n\nNLP的基础工作就是文本处理，向量化文本表示的核心目的是将文本表示为一系列的能够表达文本语义的向量，有word2vec、str2vec和doc2vec技术，区别是目标处理单元不同。\nword2vec即词向量，str2vec为句向量，doc2vec则为文档向量。\n\n## word2vec\n词袋（bag of word）模型是最早的以词为基础处理单元的文本向量化方法。该模型产生的向量与原来文本中单词出现的顺序没有关系，而是词典中每个单词再文本中出现的频率。该方法虽然简单，但有以下问题：\n1. 维度灾难\n2. 无法保留词序信息\n3. 存在语义鸿沟\n\n随着互联网技术的发展，大量无标注数据的产生，研究中心转移到利用无标注数据挖掘有价值的信息上来。word2vec（词向量）就是为了利用神经网络，从大量无标注的文本中提取有用的信息而产生。\n\n词袋模型只是将词语符号化，所以词袋模型是不包含语义信息的。如何使词表示包含语义信息是该领域研究者面临的问题。分布假设（distributional hypothesis）的提出为解决上述问题提供了理论基础。该假设的核心思想是：上下文相似的词，其语义也相似。随后大量研究人员整理了利用上下文表示词义的方法，这类方法就是有名的词空间模型（word space model）。通过语言模型构建上下文与目标词之间的关系，是一种常见的方法，神经网络词向量模型就是根据上下文与目标词之间的关系进行建模。\n\n## NNLM\n神经网络语言模型（Neural Network Language Model，NNLM）与传统方法估算的不同在于通过一个神经网络结构对n元条件概率进行估计。由于NNLM模型使用低维紧凑的词向量对上下文进行表示，解决了词袋模型带来的数据稀疏、语义鸿沟等问题。另一方面，在相似的上下文环境中，NNLM模型可以预测出相似的目标词，而传统模型无法做到这一点。例如，如果在预料中 A=“小狗在院子里趴着” 出现1000次， B=“小猫在院子里趴着” 出现1次。A和B的唯一区别就是狗和猫，两个词无论在语义还是语法上都相似。根据频率来估算概率P(A) >> P(B)，这显然不合理。如果采用NNLM计算P(A)~P(B)，因为NNLM模型采用低维的向量表示词语，假定相似的词，则其词向量也相似。\n\n![NNLM词向量处理模型](str_nnlm.png)\n\n## C&W\nC&W = context & word(上下文和目标词)，主要目的并不在于生成一份好的词向量，甚至不想训练语言模型，而是要用这份词向量去完成NLP里面的各项任务，比如词性标注、命名实体识别、短语识别、语义角色标注等等。NNLM模型的目标是构建一个语言概率模型，而C&W则是以生成词向量为目标的模型。C&W模型并没有采用语言模型去求解词语上下文的条件概率，而是直接对n元短语打分，这就省去了NNLM模型中从隐藏层到输出层的权重计算，大大降低了运算量。其核心机理是：如果n元短语在语料库中出现过，那么模型会给该短语打高分；如果是未出现则在语料库中的短语则会得到较低的评分。\n\n## CBOW and Skip-gram\n为了更高效的获取词向量，研究者在NNLM和C&W模型的基础上保留其核心部分，得到CBOW（Continuous Bag of Words）模型和Skip-gram模型。\n\n![CBOW模型](cbow.png)\n\n模型使用一段文本的中间词作为目标词，去掉了隐藏层，大幅度提升了计算频率。此外，CBOW模型还使用上下文歌词的词向量的平均值替代NNLM模型各个拼接的词向量。即根据上下文来预测当前词语的频率，且上下文所有词出现频率的影响权重是一样的。Skip-gram模型同样没有隐藏层，与CBOW模型输入上下文词的平均词向量不同，它是从目标词W的上下文中选择一个词，将其词向量组成上下文的表示。即根据当前词语来预测上下文概率。\n\n## doc2vec/str2vec\n利用word2vec计算词语间的相似度有非常好的效果，word2vec技术也可以用于计算句子或者其他长文本间的相似度，其一般做法是对文本粉刺后，提取其关键词，用词向量表示这些关键词，接着对关键词向量求平均或者将其拼接，最后利用词向量计算文本间的相似度。这种方法丢失了文本中的次序信息，而文本的语序包含重要信息。为此，有研究者在word2vec的基础上提出了文档向量化（doc2vec），又称str2vec和para2vec。\n\ndoc2vec技术存在两种模型--Distributed Memory(DM)和Distributed Bag of Words(DBOW)，分别对应word2vec技术里的CBOW和Skip-gram模型。Doc2vec相对于word2vec不同之处在于，在输入层，增添了一个新句子向量Paragraph vector， Paragraph vector可以被看作是另一个词向量，它扮演了一个记忆，词袋模型中，因为每次训练只会截取句子中一小部分词训练，而忽略了除了本次训练词以外该句子中的其他词，忽略了文本的词序问题。而doc2vec中的paragraph vector则弥补了这方面的不足，它每次训练也是滑动截取句子中一小部分词来训练，paragraph vector在同一个句子的若干次训练中是共享的，所以同一句话会有多次训练，每次训练中输入都包含paragraph vector。它可以被看作是句子的主旨（中心思想），有了它，该句子的主旨每次都会被放入作为输入的一部分来训练。这样每次训练中，不光是训练了词，得到了词向量。同时随着一句话每次滑动截取若干词训练的过程中，作为每次训练的输入层一部分的共享paragraph vector，该向量的主旨会越来越准确。\n\n![DBOW模型示意图](mod_dbow.png)\n\n那么doc2vec是怎么预测新的句子paragraph vector呢？其实在预测新句子的时候，还是会将该paragraph vector随机初始化，放入模型中再重新根据随机梯度下降不断迭代求得最终稳定下来的句子向量。不过在预测过程中，模型里的词向量还有投影层到输出层的softmax weights参数是不会变的，这样在不断迭代中只会更新paragraph vector，其他参数均已固定，只需很少的时间就能计算出带预测的paragraph vector。","slug":"text2vec","published":1,"updated":"2021-11-13T09:22:29.814Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl10m9kgu000mduwgdfr33tt9","content":"<p>NLP的基础工作就是文本处理，向量化文本表示的核心目的是将文本表示为一系列的能够表达文本语义的向量，有word2vec、str2vec和doc2vec技术，区别是目标处理单元不同。<br>word2vec即词向量，str2vec为句向量，doc2vec则为文档向量。</p>\n<h2 id=\"word2vec\"><a href=\"#word2vec\" class=\"headerlink\" title=\"word2vec\"></a>word2vec</h2><p>词袋（bag of word）模型是最早的以词为基础处理单元的文本向量化方法。该模型产生的向量与原来文本中单词出现的顺序没有关系，而是词典中每个单词再文本中出现的频率。该方法虽然简单，但有以下问题：</p>\n<ol>\n<li>维度灾难</li>\n<li>无法保留词序信息</li>\n<li>存在语义鸿沟</li>\n</ol>\n<p>随着互联网技术的发展，大量无标注数据的产生，研究中心转移到利用无标注数据挖掘有价值的信息上来。word2vec（词向量）就是为了利用神经网络，从大量无标注的文本中提取有用的信息而产生。</p>\n<p>词袋模型只是将词语符号化，所以词袋模型是不包含语义信息的。如何使词表示包含语义信息是该领域研究者面临的问题。分布假设（distributional hypothesis）的提出为解决上述问题提供了理论基础。该假设的核心思想是：上下文相似的词，其语义也相似。随后大量研究人员整理了利用上下文表示词义的方法，这类方法就是有名的词空间模型（word space model）。通过语言模型构建上下文与目标词之间的关系，是一种常见的方法，神经网络词向量模型就是根据上下文与目标词之间的关系进行建模。</p>\n<h2 id=\"NNLM\"><a href=\"#NNLM\" class=\"headerlink\" title=\"NNLM\"></a>NNLM</h2><p>神经网络语言模型（Neural Network Language Model，NNLM）与传统方法估算的不同在于通过一个神经网络结构对n元条件概率进行估计。由于NNLM模型使用低维紧凑的词向量对上下文进行表示，解决了词袋模型带来的数据稀疏、语义鸿沟等问题。另一方面，在相似的上下文环境中，NNLM模型可以预测出相似的目标词，而传统模型无法做到这一点。例如，如果在预料中 A=“小狗在院子里趴着” 出现1000次， B=“小猫在院子里趴着” 出现1次。A和B的唯一区别就是狗和猫，两个词无论在语义还是语法上都相似。根据频率来估算概率P(A) &gt;&gt; P(B)，这显然不合理。如果采用NNLM计算P(A)~P(B)，因为NNLM模型采用低维的向量表示词语，假定相似的词，则其词向量也相似。</p>\n<p><img src=\"str_nnlm.png\" alt=\"NNLM词向量处理模型\"></p>\n<h2 id=\"C-amp-W\"><a href=\"#C-amp-W\" class=\"headerlink\" title=\"C&amp;W\"></a>C&amp;W</h2><p>C&amp;W = context &amp; word(上下文和目标词)，主要目的并不在于生成一份好的词向量，甚至不想训练语言模型，而是要用这份词向量去完成NLP里面的各项任务，比如词性标注、命名实体识别、短语识别、语义角色标注等等。NNLM模型的目标是构建一个语言概率模型，而C&amp;W则是以生成词向量为目标的模型。C&amp;W模型并没有采用语言模型去求解词语上下文的条件概率，而是直接对n元短语打分，这就省去了NNLM模型中从隐藏层到输出层的权重计算，大大降低了运算量。其核心机理是：如果n元短语在语料库中出现过，那么模型会给该短语打高分；如果是未出现则在语料库中的短语则会得到较低的评分。</p>\n<h2 id=\"CBOW-and-Skip-gram\"><a href=\"#CBOW-and-Skip-gram\" class=\"headerlink\" title=\"CBOW and Skip-gram\"></a>CBOW and Skip-gram</h2><p>为了更高效的获取词向量，研究者在NNLM和C&amp;W模型的基础上保留其核心部分，得到CBOW（Continuous Bag of Words）模型和Skip-gram模型。</p>\n<p><img src=\"cbow.png\" alt=\"CBOW模型\"></p>\n<p>模型使用一段文本的中间词作为目标词，去掉了隐藏层，大幅度提升了计算频率。此外，CBOW模型还使用上下文歌词的词向量的平均值替代NNLM模型各个拼接的词向量。即根据上下文来预测当前词语的频率，且上下文所有词出现频率的影响权重是一样的。Skip-gram模型同样没有隐藏层，与CBOW模型输入上下文词的平均词向量不同，它是从目标词W的上下文中选择一个词，将其词向量组成上下文的表示。即根据当前词语来预测上下文概率。</p>\n<h2 id=\"doc2vec-str2vec\"><a href=\"#doc2vec-str2vec\" class=\"headerlink\" title=\"doc2vec/str2vec\"></a>doc2vec/str2vec</h2><p>利用word2vec计算词语间的相似度有非常好的效果，word2vec技术也可以用于计算句子或者其他长文本间的相似度，其一般做法是对文本粉刺后，提取其关键词，用词向量表示这些关键词，接着对关键词向量求平均或者将其拼接，最后利用词向量计算文本间的相似度。这种方法丢失了文本中的次序信息，而文本的语序包含重要信息。为此，有研究者在word2vec的基础上提出了文档向量化（doc2vec），又称str2vec和para2vec。</p>\n<p>doc2vec技术存在两种模型–Distributed Memory(DM)和Distributed Bag of Words(DBOW)，分别对应word2vec技术里的CBOW和Skip-gram模型。Doc2vec相对于word2vec不同之处在于，在输入层，增添了一个新句子向量Paragraph vector， Paragraph vector可以被看作是另一个词向量，它扮演了一个记忆，词袋模型中，因为每次训练只会截取句子中一小部分词训练，而忽略了除了本次训练词以外该句子中的其他词，忽略了文本的词序问题。而doc2vec中的paragraph vector则弥补了这方面的不足，它每次训练也是滑动截取句子中一小部分词来训练，paragraph vector在同一个句子的若干次训练中是共享的，所以同一句话会有多次训练，每次训练中输入都包含paragraph vector。它可以被看作是句子的主旨（中心思想），有了它，该句子的主旨每次都会被放入作为输入的一部分来训练。这样每次训练中，不光是训练了词，得到了词向量。同时随着一句话每次滑动截取若干词训练的过程中，作为每次训练的输入层一部分的共享paragraph vector，该向量的主旨会越来越准确。</p>\n<p><img src=\"mod_dbow.png\" alt=\"DBOW模型示意图\"></p>\n<p>那么doc2vec是怎么预测新的句子paragraph vector呢？其实在预测新句子的时候，还是会将该paragraph vector随机初始化，放入模型中再重新根据随机梯度下降不断迭代求得最终稳定下来的句子向量。不过在预测过程中，模型里的词向量还有投影层到输出层的softmax weights参数是不会变的，这样在不断迭代中只会更新paragraph vector，其他参数均已固定，只需很少的时间就能计算出带预测的paragraph vector。</p>\n","site":{"data":{"musics":[{"name":"夜曲","artist":"周杰伦","url":"/medias/music/yequ.mp3","cover":"/medias/music/avatars/yequ.jpg"},{"name":"一路向北","artist":"周杰伦","url":"/medias/music/yiluxiangbei.mp3","cover":"/medias/music/avatars/yiluxiangbei.jpg"},{"name":"来自天堂的魔鬼","artist":"邓紫棋","url":"/medias/music/tiantangdemogui.mp3","cover":"/medias/music/avatars/tiantangdemogui.jpg"},{"name":"倒数","artist":"邓紫棋","url":"/medias/music/daoshu.mp3","cover":"/medias/music/avatars/daoshu.jpg"}],"friends":[{"name":"知乎专栏","url":"https://zhuanlan.zhihu.com/godweiyang","title":"访问主页","introduction":"算法码上来","avatar":"/medias/avatars/myzhihu.png"},{"name":"火山翻译","url":"https://translate.volcengine.cn","title":"访问主页","introduction":"提供全球领先的翻译技术与服务","avatar":"/medias/avatars/bytedtrans.png"},{"name":"AntNLP","url":"https://antnlp.org","title":"访问主页","introduction":"华东师范大学自然语言处理实验室欢迎您的加入！","avatar":"/medias/avatars/antnlp.ico"},{"name":"IDS²","url":"https://www.smart-dependable-sino-europe.institute","title":"访问主页","introduction":"中欧可靠智能软件联合实验室欢迎您的加入！","avatar":"/medias/avatars/ids2.jpg"},{"name":"孙长志","url":"https://www.czsun.site","title":"访问主页","introduction":"AntNLP博士大师兄！","avatar":"/medias/avatars/sunchangzhi.jpg"},{"name":"纪焘","url":"https://taoji.site","title":"访问主页","introduction":"AntNLP博士带明星！","avatar":"/medias/avatars/jitao.jpg"},{"name":"杜雨沛","url":"https://yupei-du.github.io/","title":"访问主页","introduction":"AntNLP唱跳RAP打篮球全能师兄！","avatar":"/medias/avatars/duyupei.jpg"},{"name":"0xbirdpwn","url":"https://0xbird.top/","title":"访问主页","introduction":"十步杀一人，千里不留行，事了拂衣去，深藏功与名。","avatar":"/medias/avatars/0xbird.png"},{"name":"李佳倩的博客","url":"https://jiaqianlee.com/","title":"访问主页","introduction":"一只小白的成长之路！","avatar":"/medias/avatars/lijiaqian.png"},{"name":"kewlgrl","url":"https://blog.csdn.net/MIKASA3","title":"访问主页","introduction":"好大一只咸鱼哇","avatar":"/medias/avatars/kewlgrl.jpg"},{"name":"Think Far Blog","url":"https://wuli749826.github.io","title":"访问主页","introduction":"我曾经拥有这一切，转眼都飘散如烟。","avatar":"/medias/avatars/gsy.jpg"},{"name":"望城风景","url":"https://www.itaowei.cn/","title":"访问主页","introduction":"用力活过的日子，才配得上此刻的缅怀。","avatar":"/medias/avatars/taowei.jpg"},{"name":"jxtxzzw空间","url":"https://www.jxtxzzw.com/wordpress","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/zzw.jpg"},{"name":"DREAMWINGS","url":"https://www.dreamwings.cn/","title":"访问主页","introduction":"夢はそこでないと、私の権利である","avatar":"/medias/avatars/qianqian.png"},{"name":"ElaineLv","url":"https://www.elainelv.com/","title":"访问主页","introduction":"Stay hungry, Stay foolish","avatar":"/medias/avatars/lyn-draw.jpg"},{"name":"Subject_No_i","url":"https://subjectnoi.github.io","title":"访问主页","introduction":"在原七海 中野三玖 中野二乃 樱岛麻衣的老公","avatar":"/medias/avatars/lzh.png"},{"name":"菁菁","url":"https://angericky.github.io/","title":"访问主页","introduction":"做什么都是因为喜欢","avatar":"/medias/avatars/jingjing.jpg"},{"name":"Sweet-Q","url":"https://sweet-q.github.io","title":"访问主页","introduction":"华东师范大学数学系","avatar":"/medias/avatars/babyq.png"},{"name":"伟大的蚊子","url":"https://www.cnblogs.com/cww97/","title":"访问主页","introduction":"鼓楼的夜晚时间匆匆","avatar":"/medias/avatars/cww97.jpg"},{"name":"Fun4wut","url":"https://blog.fun4go.top","title":"访问主页","introduction":"菜鸡欢迎大佬的光顾","avatar":"/medias/avatars/fun4go.png"},{"name":"Hael Chan","url":"https://haelchan.me/","title":"访问主页","introduction":"浙江大学 & NLP & ML","avatar":"/medias/avatars/hael.jpg"},{"name":"happygirlzt","url":"https://www.happygirlzt.com","title":"访问主页","introduction":"A Backend Engineer","avatar":"/medias/avatars/zhangting.jpg"},{"name":"星空无限","url":"https://liyangzone.com","title":"访问主页","introduction":"前端开发，死飞大佬。分享技术，分享生活。","avatar":"/medias/avatars/liyangzone.jpg"},{"name":"Mashiro","url":"https://2heng.xin/","title":"访问主页","introduction":"樱花庄的白猫","avatar":"/medias/avatars/mashiro.jpg"},{"name":"hzwer","url":"https://hzwer.com/","title":"访问主页","introduction":"北京大学计算机系","avatar":"/medias/avatars/hzwer.jpg"},{"name":"MPY634","url":"https://mpy634.cn/","title":"访问主页","introduction":"摸鱼，永无止境。","avatar":"/medias/avatars/mpy634.png"},{"name":"徐铭辰的博客","url":"https://michaelxucs.com","title":"访问主页","introduction":"埃克塞特大学计算机系","avatar":"/medias/avatars/michael.jpg"},{"name":"Mizunashi","url":"https://mizunashi.me","title":"访问主页","introduction":"欢迎大佬们来玩","avatar":"/medias/avatars/mizunashi.png"},{"name":"xuzhongyou","url":"https://xuzhongyou.github.io/","title":"访问主页","introduction":"我哽咽道：你是赵默笙，可我不是何以琛啊。","avatar":"/medias/avatars/xuzhongyou.jpg"},{"name":"zerol","url":"https://zerol.me/","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/huaji.jpg"},{"name":"Zhang Yi","url":"https://codewithzhangyi.com/","title":"访问主页","introduction":"Coding is the New Sexy","avatar":"/medias/avatars/zhangyi.jpg"},{"name":"科学空间","url":"https://spaces.ac.cn/","title":"访问主页","introduction":"中山大学基础数学研究生","avatar":"/medias/avatars/spacesac.png"},{"name":"lucifer的博客","url":"https://lucifer.ren/blog/","title":"访问主页","introduction":"一个脑洞很大的程序员。","avatar":"https://tva1.sinaimg.cn/large/006tNbRwly1ga7ognflh9j30b40b4q3w.jpg"},{"name":"钱栋伟","url":"https://sscjwdyzdw.club","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/qiandongwei.jpg"},{"name":"CJ Blog","url":"https://chrisju.cn/","title":"访问主页","introduction":"Failing means foolish.","avatar":"/medias/avatars/mouse.jpg"},{"name":"Tawn","url":"https://tawn0000.github.io/","title":"访问主页","introduction":"JNU ACMer","avatar":"/medias/avatars/tawn.jpg"},{"name":"Master X","url":"https://masterx.top/","title":"访问主页","introduction":"ECNU&ML&DL","avatar":"/medias/avatars/masterx.jpg"},{"name":"分享客","url":"https://sharerdiary.com/","title":"访问主页","introduction":"爱生活，爱分享！","avatar":"/medias/avatars/yezijie.png"},{"name":"taotao","url":"https://zouzhitao.github.io","title":"访问主页","introduction":"taotao 码字的地方","avatar":"/medias/avatars/taotao.jpg"},{"name":"Xiejiadong","url":"https://xiejiadong.com","title":"访问主页","introduction":"Xiejiadong's blog","avatar":"/medias/avatars/xiejiadong.jpg"},{"name":"飞吧","url":"https://fei.bar","title":"访问主页","introduction":"啓飞的个人博客","avatar":"/medias/avatars/feibar.png"},{"name":"ajin","url":"https://ajin.cloud","title":"访问主页","introduction":"Always be enthusiastic","avatar":"/medias/avatars/ajin.jpg"},{"name":"Hiyoung","url":"https://hiyoungai.com/","title":"访问主页","introduction":"宠辱不惊，看庭前花开花落；去留无意，望天空云卷云舒。","avatar":"https://cdn.jsdelivr.net/gh/hiyoung123/cdn/img/avatar.jpg"},{"name":"无言的博客","url":"https://www.yzplove.top","title":"访问主页","introduction":"代码真是越敲越香","avatar":"https://cdn.jsdelivr.net/gh/yzp-99/yzp-99.github.io/medias/avatars/me.jpg"},{"name":"Naixin Zhang","url":"https://naixinzhang.github.io/","title":"访问主页","introduction":"Econ Master | Data Analyst/scientist Candidate","avatar":"https://naixinzhang.github.io/medias/avatars/avatar.jpg"},{"name":"帅张的梦呓","url":"https://ishuaizhang.com","title":"访问主页","introduction":"XDUer","avatar":"https://ishuaizhang.com/medias/avatars/avatar.jpg"},{"name":"Gatsby’s blog","url":"https://a347807131.github.io/","title":"访问主页","introduction":"Nothing perfect, Noting special.","avatar":"https://a347807131.github.io/medias/avatar.gif"},{"name":"宇宙湾","url":"https://yuzhouwan.com/","title":"访问主页","introduction":"主要是大数据和人工智能的原创文章。","avatar":"https://yuzhouwan.com/yuzhouwan_logo_128x128.ico"},{"name":"Dotnet9的博客","url":"https://dotnet9.com","title":"访问主页","introduction":"一个热衷于互联网分享精神的个人博客站点","avatar":"https://img.dotnet9.com/logo-foot.png"},{"name":"Macchiato","url":"https://hcj123123.oschina.io","title":"访问主页","introduction":"java学习者","avatar":"https://y.gtimg.cn/music/photo_new/T002R300x300M000002qD7gF3fW0JL_1.jpg?max_age=2592000"},{"name":"过客~励む","url":"https://yafine-blog.cn","title":"访问主页","introduction":"你现在的努力，是为了以后有更多的选择。","avatar":"https://yafine-blog.cn/medias/avatar.jpg"},{"name":"meteorsh","url":"https://weisenhui.top","title":"访问主页","introduction":"Data Science & Engineering","avatar":"https://weisenhui.top/medias/avatar.jpg"},{"name":"Kuroko","url":"https://kuroko.info","title":"访问主页","introduction":"浓烟下的诗歌电台","avatar":"http://kuroko.info/wp-content/uploads/2020/11/2.jpg"}]}},"excerpt":"","more":"<p>NLP的基础工作就是文本处理，向量化文本表示的核心目的是将文本表示为一系列的能够表达文本语义的向量，有word2vec、str2vec和doc2vec技术，区别是目标处理单元不同。<br>word2vec即词向量，str2vec为句向量，doc2vec则为文档向量。</p>\n<h2 id=\"word2vec\"><a href=\"#word2vec\" class=\"headerlink\" title=\"word2vec\"></a>word2vec</h2><p>词袋（bag of word）模型是最早的以词为基础处理单元的文本向量化方法。该模型产生的向量与原来文本中单词出现的顺序没有关系，而是词典中每个单词再文本中出现的频率。该方法虽然简单，但有以下问题：</p>\n<ol>\n<li>维度灾难</li>\n<li>无法保留词序信息</li>\n<li>存在语义鸿沟</li>\n</ol>\n<p>随着互联网技术的发展，大量无标注数据的产生，研究中心转移到利用无标注数据挖掘有价值的信息上来。word2vec（词向量）就是为了利用神经网络，从大量无标注的文本中提取有用的信息而产生。</p>\n<p>词袋模型只是将词语符号化，所以词袋模型是不包含语义信息的。如何使词表示包含语义信息是该领域研究者面临的问题。分布假设（distributional hypothesis）的提出为解决上述问题提供了理论基础。该假设的核心思想是：上下文相似的词，其语义也相似。随后大量研究人员整理了利用上下文表示词义的方法，这类方法就是有名的词空间模型（word space model）。通过语言模型构建上下文与目标词之间的关系，是一种常见的方法，神经网络词向量模型就是根据上下文与目标词之间的关系进行建模。</p>\n<h2 id=\"NNLM\"><a href=\"#NNLM\" class=\"headerlink\" title=\"NNLM\"></a>NNLM</h2><p>神经网络语言模型（Neural Network Language Model，NNLM）与传统方法估算的不同在于通过一个神经网络结构对n元条件概率进行估计。由于NNLM模型使用低维紧凑的词向量对上下文进行表示，解决了词袋模型带来的数据稀疏、语义鸿沟等问题。另一方面，在相似的上下文环境中，NNLM模型可以预测出相似的目标词，而传统模型无法做到这一点。例如，如果在预料中 A=“小狗在院子里趴着” 出现1000次， B=“小猫在院子里趴着” 出现1次。A和B的唯一区别就是狗和猫，两个词无论在语义还是语法上都相似。根据频率来估算概率P(A) &gt;&gt; P(B)，这显然不合理。如果采用NNLM计算P(A)~P(B)，因为NNLM模型采用低维的向量表示词语，假定相似的词，则其词向量也相似。</p>\n<p><img src=\"str_nnlm.png\" alt=\"NNLM词向量处理模型\"></p>\n<h2 id=\"C-amp-W\"><a href=\"#C-amp-W\" class=\"headerlink\" title=\"C&amp;W\"></a>C&amp;W</h2><p>C&amp;W = context &amp; word(上下文和目标词)，主要目的并不在于生成一份好的词向量，甚至不想训练语言模型，而是要用这份词向量去完成NLP里面的各项任务，比如词性标注、命名实体识别、短语识别、语义角色标注等等。NNLM模型的目标是构建一个语言概率模型，而C&amp;W则是以生成词向量为目标的模型。C&amp;W模型并没有采用语言模型去求解词语上下文的条件概率，而是直接对n元短语打分，这就省去了NNLM模型中从隐藏层到输出层的权重计算，大大降低了运算量。其核心机理是：如果n元短语在语料库中出现过，那么模型会给该短语打高分；如果是未出现则在语料库中的短语则会得到较低的评分。</p>\n<h2 id=\"CBOW-and-Skip-gram\"><a href=\"#CBOW-and-Skip-gram\" class=\"headerlink\" title=\"CBOW and Skip-gram\"></a>CBOW and Skip-gram</h2><p>为了更高效的获取词向量，研究者在NNLM和C&amp;W模型的基础上保留其核心部分，得到CBOW（Continuous Bag of Words）模型和Skip-gram模型。</p>\n<p><img src=\"cbow.png\" alt=\"CBOW模型\"></p>\n<p>模型使用一段文本的中间词作为目标词，去掉了隐藏层，大幅度提升了计算频率。此外，CBOW模型还使用上下文歌词的词向量的平均值替代NNLM模型各个拼接的词向量。即根据上下文来预测当前词语的频率，且上下文所有词出现频率的影响权重是一样的。Skip-gram模型同样没有隐藏层，与CBOW模型输入上下文词的平均词向量不同，它是从目标词W的上下文中选择一个词，将其词向量组成上下文的表示。即根据当前词语来预测上下文概率。</p>\n<h2 id=\"doc2vec-str2vec\"><a href=\"#doc2vec-str2vec\" class=\"headerlink\" title=\"doc2vec/str2vec\"></a>doc2vec/str2vec</h2><p>利用word2vec计算词语间的相似度有非常好的效果，word2vec技术也可以用于计算句子或者其他长文本间的相似度，其一般做法是对文本粉刺后，提取其关键词，用词向量表示这些关键词，接着对关键词向量求平均或者将其拼接，最后利用词向量计算文本间的相似度。这种方法丢失了文本中的次序信息，而文本的语序包含重要信息。为此，有研究者在word2vec的基础上提出了文档向量化（doc2vec），又称str2vec和para2vec。</p>\n<p>doc2vec技术存在两种模型–Distributed Memory(DM)和Distributed Bag of Words(DBOW)，分别对应word2vec技术里的CBOW和Skip-gram模型。Doc2vec相对于word2vec不同之处在于，在输入层，增添了一个新句子向量Paragraph vector， Paragraph vector可以被看作是另一个词向量，它扮演了一个记忆，词袋模型中，因为每次训练只会截取句子中一小部分词训练，而忽略了除了本次训练词以外该句子中的其他词，忽略了文本的词序问题。而doc2vec中的paragraph vector则弥补了这方面的不足，它每次训练也是滑动截取句子中一小部分词来训练，paragraph vector在同一个句子的若干次训练中是共享的，所以同一句话会有多次训练，每次训练中输入都包含paragraph vector。它可以被看作是句子的主旨（中心思想），有了它，该句子的主旨每次都会被放入作为输入的一部分来训练。这样每次训练中，不光是训练了词，得到了词向量。同时随着一句话每次滑动截取若干词训练的过程中，作为每次训练的输入层一部分的共享paragraph vector，该向量的主旨会越来越准确。</p>\n<p><img src=\"mod_dbow.png\" alt=\"DBOW模型示意图\"></p>\n<p>那么doc2vec是怎么预测新的句子paragraph vector呢？其实在预测新句子的时候，还是会将该paragraph vector随机初始化，放入模型中再重新根据随机梯度下降不断迭代求得最终稳定下来的句子向量。不过在预测过程中，模型里的词向量还有投影层到输出层的softmax weights参数是不会变的，这样在不断迭代中只会更新paragraph vector，其他参数均已固定，只需很少的时间就能计算出带预测的paragraph vector。</p>\n"},{"title":"在Java的工程实现中使用Matlab计算能力","top":false,"cover":false,"toc":true,"mathjax":true,"date":"2022-03-21T10:55:01.000Z","password":null,"summary":null,"_content":"\nMatlab丰富的模型资源、优化的算法能力以及对计算加速的硬件支持，使得其在计算核心的算法设计中成为主流开发方法，在传统实现中复杂的算法借助Matlab核心计算能力可以简单快速实现。\n但是在工程化的实现过程中，实现Matlab能力集成踩坑众多，本文记录了一次在java中实现电网海量运行数据自定义模型计算引入matlab的踩坑及搞定方法\n\n## 在算法运行设备安装完整的Matlab或者Matlab Compiler Runtime环境\n[去这里]https://ww2.mathworks.cn/products/compiler/matlab-runtime.html\n\n注意：版本选择很重要\n\n## 安装对应的jdk版本\n在matlab算法实现的console window，运行 version -java，查看内嵌的jdk版本，一定要选择相应的jdk版本独立安装\n\n## 设置jdk环境变量\n以macos为例\n1. echo $SHELL 查看shell类型\n2. bash:echo \"export JAVA_HOME=<java_install_path>\" >> ~/.bash_profile\n        source ~/.bash_profile\n3. zsh: echo \"export JAVA_HOME=<java_install_path>\" >> ~/.zprofile\n        source ~/.zprofile\n\n4. 设置DYLD_LIBRARY_PATH\n   bash:echo \"export DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:<java_install_path>/bin\" >> ~/.profile\n        source ~/.profile\n   zsh :echo \"export DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:<java_install_path>/bin\" >> ~/.zshrc\n        source ~/.zshrc\n[参考这里]https://ww2.mathworks.cn/help/compiler_sdk/java/configure-your-java-environment.html?searchHighlight=java&s_tid=srchtitle_java_7\n\n## 重启MacOS，并关闭SIP\n1. 重启\n2. command+R 进入recovery mode\n3. 在recovery mode 打开terminal\n4. command line: csrutil disable 关闭SIP\n\n## 设置matlab运行时依赖\n以macos为例\nexport DYLD_LIBRARY_PATH=\"${DYLD_LIBRARY_PATH:+${DYLD_LIBRARY_PATH}:}\\\n<MATLAB_RUNTIME_INSTALL_DIR>/runtime/maci64:\\\n<MATLAB_RUNTIME_INSTALL_DIR>/bin/maci64:\\\n<MATLAB_RUNTIME_INSTALL_DIR>/sys/os/maci64:\\\n<MATLAB_RUNTIME_INSTALL_DIR>/extern/bin/maci64\"\n[参考这里]https://ww2.mathworks.cn/help/compiler/mcr-path-settings-for-run-time-deployment.html\n\n\n## 完成上述步骤，测试并可以开始工程化开发\n","source":"_posts/use-matlab-injava.md","raw":"---\ntitle: 在Java的工程实现中使用Matlab计算能力\ntop: false\ncover: false\ntoc: true\nmathjax: true\ndate: 2022-03-21 18:55:01\npassword:\nsummary:\ntags:\n- matlab\ncategories:\n- 工程化\n---\n\nMatlab丰富的模型资源、优化的算法能力以及对计算加速的硬件支持，使得其在计算核心的算法设计中成为主流开发方法，在传统实现中复杂的算法借助Matlab核心计算能力可以简单快速实现。\n但是在工程化的实现过程中，实现Matlab能力集成踩坑众多，本文记录了一次在java中实现电网海量运行数据自定义模型计算引入matlab的踩坑及搞定方法\n\n## 在算法运行设备安装完整的Matlab或者Matlab Compiler Runtime环境\n[去这里]https://ww2.mathworks.cn/products/compiler/matlab-runtime.html\n\n注意：版本选择很重要\n\n## 安装对应的jdk版本\n在matlab算法实现的console window，运行 version -java，查看内嵌的jdk版本，一定要选择相应的jdk版本独立安装\n\n## 设置jdk环境变量\n以macos为例\n1. echo $SHELL 查看shell类型\n2. bash:echo \"export JAVA_HOME=<java_install_path>\" >> ~/.bash_profile\n        source ~/.bash_profile\n3. zsh: echo \"export JAVA_HOME=<java_install_path>\" >> ~/.zprofile\n        source ~/.zprofile\n\n4. 设置DYLD_LIBRARY_PATH\n   bash:echo \"export DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:<java_install_path>/bin\" >> ~/.profile\n        source ~/.profile\n   zsh :echo \"export DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:<java_install_path>/bin\" >> ~/.zshrc\n        source ~/.zshrc\n[参考这里]https://ww2.mathworks.cn/help/compiler_sdk/java/configure-your-java-environment.html?searchHighlight=java&s_tid=srchtitle_java_7\n\n## 重启MacOS，并关闭SIP\n1. 重启\n2. command+R 进入recovery mode\n3. 在recovery mode 打开terminal\n4. command line: csrutil disable 关闭SIP\n\n## 设置matlab运行时依赖\n以macos为例\nexport DYLD_LIBRARY_PATH=\"${DYLD_LIBRARY_PATH:+${DYLD_LIBRARY_PATH}:}\\\n<MATLAB_RUNTIME_INSTALL_DIR>/runtime/maci64:\\\n<MATLAB_RUNTIME_INSTALL_DIR>/bin/maci64:\\\n<MATLAB_RUNTIME_INSTALL_DIR>/sys/os/maci64:\\\n<MATLAB_RUNTIME_INSTALL_DIR>/extern/bin/maci64\"\n[参考这里]https://ww2.mathworks.cn/help/compiler/mcr-path-settings-for-run-time-deployment.html\n\n\n## 完成上述步骤，测试并可以开始工程化开发\n","slug":"use-matlab-injava","published":1,"updated":"2022-03-21T11:15:13.093Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl10m9kgv000nduwgxi4qbf5v","content":"<p>Matlab丰富的模型资源、优化的算法能力以及对计算加速的硬件支持，使得其在计算核心的算法设计中成为主流开发方法，在传统实现中复杂的算法借助Matlab核心计算能力可以简单快速实现。<br>但是在工程化的实现过程中，实现Matlab能力集成踩坑众多，本文记录了一次在java中实现电网海量运行数据自定义模型计算引入matlab的踩坑及搞定方法</p>\n<h2 id=\"在算法运行设备安装完整的Matlab或者Matlab-Compiler-Runtime环境\"><a href=\"#在算法运行设备安装完整的Matlab或者Matlab-Compiler-Runtime环境\" class=\"headerlink\" title=\"在算法运行设备安装完整的Matlab或者Matlab Compiler Runtime环境\"></a>在算法运行设备安装完整的Matlab或者Matlab Compiler Runtime环境</h2><p>[去这里]<a href=\"https://ww2.mathworks.cn/products/compiler/matlab-runtime.html\" target=\"_blank\" rel=\"noopener\">https://ww2.mathworks.cn/products/compiler/matlab-runtime.html</a></p>\n<p>注意：版本选择很重要</p>\n<h2 id=\"安装对应的jdk版本\"><a href=\"#安装对应的jdk版本\" class=\"headerlink\" title=\"安装对应的jdk版本\"></a>安装对应的jdk版本</h2><p>在matlab算法实现的console window，运行 version -java，查看内嵌的jdk版本，一定要选择相应的jdk版本独立安装</p>\n<h2 id=\"设置jdk环境变量\"><a href=\"#设置jdk环境变量\" class=\"headerlink\" title=\"设置jdk环境变量\"></a>设置jdk环境变量</h2><p>以macos为例</p>\n<ol>\n<li><p>echo $SHELL 查看shell类型</p>\n</li>\n<li><p>bash:echo “export JAVA_HOME=<java_install_path>“ &gt;&gt; ~/.bash_profile</java_install_path></p>\n<pre><code> source ~/.bash_profile</code></pre></li>\n<li><p>zsh: echo “export JAVA_HOME=<java_install_path>“ &gt;&gt; ~/.zprofile</java_install_path></p>\n<pre><code> source ~/.zprofile</code></pre></li>\n<li><p>设置DYLD_LIBRARY_PATH<br>bash:echo “export DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:<java_install_path>/bin” &gt;&gt; ~/.profile</java_install_path></p>\n<pre><code> source ~/.profile</code></pre><p>zsh :echo “export DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:<java_install_path>/bin” &gt;&gt; ~/.zshrc</java_install_path></p>\n<pre><code> source ~/.zshrc</code></pre><p>[参考这里]<a href=\"https://ww2.mathworks.cn/help/compiler_sdk/java/configure-your-java-environment.html?searchHighlight=java&amp;s_tid=srchtitle_java_7\" target=\"_blank\" rel=\"noopener\">https://ww2.mathworks.cn/help/compiler_sdk/java/configure-your-java-environment.html?searchHighlight=java&amp;s_tid=srchtitle_java_7</a></p>\n</li>\n</ol>\n<h2 id=\"重启MacOS，并关闭SIP\"><a href=\"#重启MacOS，并关闭SIP\" class=\"headerlink\" title=\"重启MacOS，并关闭SIP\"></a>重启MacOS，并关闭SIP</h2><ol>\n<li>重启</li>\n<li>command+R 进入recovery mode</li>\n<li>在recovery mode 打开terminal</li>\n<li>command line: csrutil disable 关闭SIP</li>\n</ol>\n<h2 id=\"设置matlab运行时依赖\"><a href=\"#设置matlab运行时依赖\" class=\"headerlink\" title=\"设置matlab运行时依赖\"></a>设置matlab运行时依赖</h2><p>以macos为例<br>export DYLD_LIBRARY_PATH=”${DYLD_LIBRARY_PATH:+${DYLD_LIBRARY_PATH}:}<br><matlab_runtime_install_dir>/runtime/maci64:<br><matlab_runtime_install_dir>/bin/maci64:<br><matlab_runtime_install_dir>/sys/os/maci64:<br><matlab_runtime_install_dir>/extern/bin/maci64”<br>[参考这里]<a href=\"https://ww2.mathworks.cn/help/compiler/mcr-path-settings-for-run-time-deployment.html\" target=\"_blank\" rel=\"noopener\">https://ww2.mathworks.cn/help/compiler/mcr-path-settings-for-run-time-deployment.html</a></matlab_runtime_install_dir></matlab_runtime_install_dir></matlab_runtime_install_dir></matlab_runtime_install_dir></p>\n<h2 id=\"完成上述步骤，测试并可以开始工程化开发\"><a href=\"#完成上述步骤，测试并可以开始工程化开发\" class=\"headerlink\" title=\"完成上述步骤，测试并可以开始工程化开发\"></a>完成上述步骤，测试并可以开始工程化开发</h2>","site":{"data":{"musics":[{"name":"夜曲","artist":"周杰伦","url":"/medias/music/yequ.mp3","cover":"/medias/music/avatars/yequ.jpg"},{"name":"一路向北","artist":"周杰伦","url":"/medias/music/yiluxiangbei.mp3","cover":"/medias/music/avatars/yiluxiangbei.jpg"},{"name":"来自天堂的魔鬼","artist":"邓紫棋","url":"/medias/music/tiantangdemogui.mp3","cover":"/medias/music/avatars/tiantangdemogui.jpg"},{"name":"倒数","artist":"邓紫棋","url":"/medias/music/daoshu.mp3","cover":"/medias/music/avatars/daoshu.jpg"}],"friends":[{"name":"知乎专栏","url":"https://zhuanlan.zhihu.com/godweiyang","title":"访问主页","introduction":"算法码上来","avatar":"/medias/avatars/myzhihu.png"},{"name":"火山翻译","url":"https://translate.volcengine.cn","title":"访问主页","introduction":"提供全球领先的翻译技术与服务","avatar":"/medias/avatars/bytedtrans.png"},{"name":"AntNLP","url":"https://antnlp.org","title":"访问主页","introduction":"华东师范大学自然语言处理实验室欢迎您的加入！","avatar":"/medias/avatars/antnlp.ico"},{"name":"IDS²","url":"https://www.smart-dependable-sino-europe.institute","title":"访问主页","introduction":"中欧可靠智能软件联合实验室欢迎您的加入！","avatar":"/medias/avatars/ids2.jpg"},{"name":"孙长志","url":"https://www.czsun.site","title":"访问主页","introduction":"AntNLP博士大师兄！","avatar":"/medias/avatars/sunchangzhi.jpg"},{"name":"纪焘","url":"https://taoji.site","title":"访问主页","introduction":"AntNLP博士带明星！","avatar":"/medias/avatars/jitao.jpg"},{"name":"杜雨沛","url":"https://yupei-du.github.io/","title":"访问主页","introduction":"AntNLP唱跳RAP打篮球全能师兄！","avatar":"/medias/avatars/duyupei.jpg"},{"name":"0xbirdpwn","url":"https://0xbird.top/","title":"访问主页","introduction":"十步杀一人，千里不留行，事了拂衣去，深藏功与名。","avatar":"/medias/avatars/0xbird.png"},{"name":"李佳倩的博客","url":"https://jiaqianlee.com/","title":"访问主页","introduction":"一只小白的成长之路！","avatar":"/medias/avatars/lijiaqian.png"},{"name":"kewlgrl","url":"https://blog.csdn.net/MIKASA3","title":"访问主页","introduction":"好大一只咸鱼哇","avatar":"/medias/avatars/kewlgrl.jpg"},{"name":"Think Far Blog","url":"https://wuli749826.github.io","title":"访问主页","introduction":"我曾经拥有这一切，转眼都飘散如烟。","avatar":"/medias/avatars/gsy.jpg"},{"name":"望城风景","url":"https://www.itaowei.cn/","title":"访问主页","introduction":"用力活过的日子，才配得上此刻的缅怀。","avatar":"/medias/avatars/taowei.jpg"},{"name":"jxtxzzw空间","url":"https://www.jxtxzzw.com/wordpress","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/zzw.jpg"},{"name":"DREAMWINGS","url":"https://www.dreamwings.cn/","title":"访问主页","introduction":"夢はそこでないと、私の権利である","avatar":"/medias/avatars/qianqian.png"},{"name":"ElaineLv","url":"https://www.elainelv.com/","title":"访问主页","introduction":"Stay hungry, Stay foolish","avatar":"/medias/avatars/lyn-draw.jpg"},{"name":"Subject_No_i","url":"https://subjectnoi.github.io","title":"访问主页","introduction":"在原七海 中野三玖 中野二乃 樱岛麻衣的老公","avatar":"/medias/avatars/lzh.png"},{"name":"菁菁","url":"https://angericky.github.io/","title":"访问主页","introduction":"做什么都是因为喜欢","avatar":"/medias/avatars/jingjing.jpg"},{"name":"Sweet-Q","url":"https://sweet-q.github.io","title":"访问主页","introduction":"华东师范大学数学系","avatar":"/medias/avatars/babyq.png"},{"name":"伟大的蚊子","url":"https://www.cnblogs.com/cww97/","title":"访问主页","introduction":"鼓楼的夜晚时间匆匆","avatar":"/medias/avatars/cww97.jpg"},{"name":"Fun4wut","url":"https://blog.fun4go.top","title":"访问主页","introduction":"菜鸡欢迎大佬的光顾","avatar":"/medias/avatars/fun4go.png"},{"name":"Hael Chan","url":"https://haelchan.me/","title":"访问主页","introduction":"浙江大学 & NLP & ML","avatar":"/medias/avatars/hael.jpg"},{"name":"happygirlzt","url":"https://www.happygirlzt.com","title":"访问主页","introduction":"A Backend Engineer","avatar":"/medias/avatars/zhangting.jpg"},{"name":"星空无限","url":"https://liyangzone.com","title":"访问主页","introduction":"前端开发，死飞大佬。分享技术，分享生活。","avatar":"/medias/avatars/liyangzone.jpg"},{"name":"Mashiro","url":"https://2heng.xin/","title":"访问主页","introduction":"樱花庄的白猫","avatar":"/medias/avatars/mashiro.jpg"},{"name":"hzwer","url":"https://hzwer.com/","title":"访问主页","introduction":"北京大学计算机系","avatar":"/medias/avatars/hzwer.jpg"},{"name":"MPY634","url":"https://mpy634.cn/","title":"访问主页","introduction":"摸鱼，永无止境。","avatar":"/medias/avatars/mpy634.png"},{"name":"徐铭辰的博客","url":"https://michaelxucs.com","title":"访问主页","introduction":"埃克塞特大学计算机系","avatar":"/medias/avatars/michael.jpg"},{"name":"Mizunashi","url":"https://mizunashi.me","title":"访问主页","introduction":"欢迎大佬们来玩","avatar":"/medias/avatars/mizunashi.png"},{"name":"xuzhongyou","url":"https://xuzhongyou.github.io/","title":"访问主页","introduction":"我哽咽道：你是赵默笙，可我不是何以琛啊。","avatar":"/medias/avatars/xuzhongyou.jpg"},{"name":"zerol","url":"https://zerol.me/","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/huaji.jpg"},{"name":"Zhang Yi","url":"https://codewithzhangyi.com/","title":"访问主页","introduction":"Coding is the New Sexy","avatar":"/medias/avatars/zhangyi.jpg"},{"name":"科学空间","url":"https://spaces.ac.cn/","title":"访问主页","introduction":"中山大学基础数学研究生","avatar":"/medias/avatars/spacesac.png"},{"name":"lucifer的博客","url":"https://lucifer.ren/blog/","title":"访问主页","introduction":"一个脑洞很大的程序员。","avatar":"https://tva1.sinaimg.cn/large/006tNbRwly1ga7ognflh9j30b40b4q3w.jpg"},{"name":"钱栋伟","url":"https://sscjwdyzdw.club","title":"访问主页","introduction":"华东师范大学计算机系","avatar":"/medias/avatars/qiandongwei.jpg"},{"name":"CJ Blog","url":"https://chrisju.cn/","title":"访问主页","introduction":"Failing means foolish.","avatar":"/medias/avatars/mouse.jpg"},{"name":"Tawn","url":"https://tawn0000.github.io/","title":"访问主页","introduction":"JNU ACMer","avatar":"/medias/avatars/tawn.jpg"},{"name":"Master X","url":"https://masterx.top/","title":"访问主页","introduction":"ECNU&ML&DL","avatar":"/medias/avatars/masterx.jpg"},{"name":"分享客","url":"https://sharerdiary.com/","title":"访问主页","introduction":"爱生活，爱分享！","avatar":"/medias/avatars/yezijie.png"},{"name":"taotao","url":"https://zouzhitao.github.io","title":"访问主页","introduction":"taotao 码字的地方","avatar":"/medias/avatars/taotao.jpg"},{"name":"Xiejiadong","url":"https://xiejiadong.com","title":"访问主页","introduction":"Xiejiadong's blog","avatar":"/medias/avatars/xiejiadong.jpg"},{"name":"飞吧","url":"https://fei.bar","title":"访问主页","introduction":"啓飞的个人博客","avatar":"/medias/avatars/feibar.png"},{"name":"ajin","url":"https://ajin.cloud","title":"访问主页","introduction":"Always be enthusiastic","avatar":"/medias/avatars/ajin.jpg"},{"name":"Hiyoung","url":"https://hiyoungai.com/","title":"访问主页","introduction":"宠辱不惊，看庭前花开花落；去留无意，望天空云卷云舒。","avatar":"https://cdn.jsdelivr.net/gh/hiyoung123/cdn/img/avatar.jpg"},{"name":"无言的博客","url":"https://www.yzplove.top","title":"访问主页","introduction":"代码真是越敲越香","avatar":"https://cdn.jsdelivr.net/gh/yzp-99/yzp-99.github.io/medias/avatars/me.jpg"},{"name":"Naixin Zhang","url":"https://naixinzhang.github.io/","title":"访问主页","introduction":"Econ Master | Data Analyst/scientist Candidate","avatar":"https://naixinzhang.github.io/medias/avatars/avatar.jpg"},{"name":"帅张的梦呓","url":"https://ishuaizhang.com","title":"访问主页","introduction":"XDUer","avatar":"https://ishuaizhang.com/medias/avatars/avatar.jpg"},{"name":"Gatsby’s blog","url":"https://a347807131.github.io/","title":"访问主页","introduction":"Nothing perfect, Noting special.","avatar":"https://a347807131.github.io/medias/avatar.gif"},{"name":"宇宙湾","url":"https://yuzhouwan.com/","title":"访问主页","introduction":"主要是大数据和人工智能的原创文章。","avatar":"https://yuzhouwan.com/yuzhouwan_logo_128x128.ico"},{"name":"Dotnet9的博客","url":"https://dotnet9.com","title":"访问主页","introduction":"一个热衷于互联网分享精神的个人博客站点","avatar":"https://img.dotnet9.com/logo-foot.png"},{"name":"Macchiato","url":"https://hcj123123.oschina.io","title":"访问主页","introduction":"java学习者","avatar":"https://y.gtimg.cn/music/photo_new/T002R300x300M000002qD7gF3fW0JL_1.jpg?max_age=2592000"},{"name":"过客~励む","url":"https://yafine-blog.cn","title":"访问主页","introduction":"你现在的努力，是为了以后有更多的选择。","avatar":"https://yafine-blog.cn/medias/avatar.jpg"},{"name":"meteorsh","url":"https://weisenhui.top","title":"访问主页","introduction":"Data Science & Engineering","avatar":"https://weisenhui.top/medias/avatar.jpg"},{"name":"Kuroko","url":"https://kuroko.info","title":"访问主页","introduction":"浓烟下的诗歌电台","avatar":"http://kuroko.info/wp-content/uploads/2020/11/2.jpg"}]}},"excerpt":"","more":"<p>Matlab丰富的模型资源、优化的算法能力以及对计算加速的硬件支持，使得其在计算核心的算法设计中成为主流开发方法，在传统实现中复杂的算法借助Matlab核心计算能力可以简单快速实现。<br>但是在工程化的实现过程中，实现Matlab能力集成踩坑众多，本文记录了一次在java中实现电网海量运行数据自定义模型计算引入matlab的踩坑及搞定方法</p>\n<h2 id=\"在算法运行设备安装完整的Matlab或者Matlab-Compiler-Runtime环境\"><a href=\"#在算法运行设备安装完整的Matlab或者Matlab-Compiler-Runtime环境\" class=\"headerlink\" title=\"在算法运行设备安装完整的Matlab或者Matlab Compiler Runtime环境\"></a>在算法运行设备安装完整的Matlab或者Matlab Compiler Runtime环境</h2><p>[去这里]<a href=\"https://ww2.mathworks.cn/products/compiler/matlab-runtime.html\" target=\"_blank\" rel=\"noopener\">https://ww2.mathworks.cn/products/compiler/matlab-runtime.html</a></p>\n<p>注意：版本选择很重要</p>\n<h2 id=\"安装对应的jdk版本\"><a href=\"#安装对应的jdk版本\" class=\"headerlink\" title=\"安装对应的jdk版本\"></a>安装对应的jdk版本</h2><p>在matlab算法实现的console window，运行 version -java，查看内嵌的jdk版本，一定要选择相应的jdk版本独立安装</p>\n<h2 id=\"设置jdk环境变量\"><a href=\"#设置jdk环境变量\" class=\"headerlink\" title=\"设置jdk环境变量\"></a>设置jdk环境变量</h2><p>以macos为例</p>\n<ol>\n<li><p>echo $SHELL 查看shell类型</p>\n</li>\n<li><p>bash:echo “export JAVA_HOME=<java_install_path>“ &gt;&gt; ~/.bash_profile</java_install_path></p>\n<pre><code> source ~/.bash_profile</code></pre></li>\n<li><p>zsh: echo “export JAVA_HOME=<java_install_path>“ &gt;&gt; ~/.zprofile</java_install_path></p>\n<pre><code> source ~/.zprofile</code></pre></li>\n<li><p>设置DYLD_LIBRARY_PATH<br>bash:echo “export DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:<java_install_path>/bin” &gt;&gt; ~/.profile</java_install_path></p>\n<pre><code> source ~/.profile</code></pre><p>zsh :echo “export DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:<java_install_path>/bin” &gt;&gt; ~/.zshrc</java_install_path></p>\n<pre><code> source ~/.zshrc</code></pre><p>[参考这里]<a href=\"https://ww2.mathworks.cn/help/compiler_sdk/java/configure-your-java-environment.html?searchHighlight=java&amp;s_tid=srchtitle_java_7\" target=\"_blank\" rel=\"noopener\">https://ww2.mathworks.cn/help/compiler_sdk/java/configure-your-java-environment.html?searchHighlight=java&amp;s_tid=srchtitle_java_7</a></p>\n</li>\n</ol>\n<h2 id=\"重启MacOS，并关闭SIP\"><a href=\"#重启MacOS，并关闭SIP\" class=\"headerlink\" title=\"重启MacOS，并关闭SIP\"></a>重启MacOS，并关闭SIP</h2><ol>\n<li>重启</li>\n<li>command+R 进入recovery mode</li>\n<li>在recovery mode 打开terminal</li>\n<li>command line: csrutil disable 关闭SIP</li>\n</ol>\n<h2 id=\"设置matlab运行时依赖\"><a href=\"#设置matlab运行时依赖\" class=\"headerlink\" title=\"设置matlab运行时依赖\"></a>设置matlab运行时依赖</h2><p>以macos为例<br>export DYLD_LIBRARY_PATH=”${DYLD_LIBRARY_PATH:+${DYLD_LIBRARY_PATH}:}<br><matlab_runtime_install_dir>/runtime/maci64:<br><matlab_runtime_install_dir>/bin/maci64:<br><matlab_runtime_install_dir>/sys/os/maci64:<br><matlab_runtime_install_dir>/extern/bin/maci64”<br>[参考这里]<a href=\"https://ww2.mathworks.cn/help/compiler/mcr-path-settings-for-run-time-deployment.html\" target=\"_blank\" rel=\"noopener\">https://ww2.mathworks.cn/help/compiler/mcr-path-settings-for-run-time-deployment.html</a></matlab_runtime_install_dir></matlab_runtime_install_dir></matlab_runtime_install_dir></matlab_runtime_install_dir></p>\n<h2 id=\"完成上述步骤，测试并可以开始工程化开发\"><a href=\"#完成上述步骤，测试并可以开始工程化开发\" class=\"headerlink\" title=\"完成上述步骤，测试并可以开始工程化开发\"></a>完成上述步骤，测试并可以开始工程化开发</h2>"}],"PostAsset":[{"_id":"source/_posts/context-recalg/alg_negative.jpeg","slug":"alg_negative.jpeg","post":"cl10m9kgg0002duwg0vrbpkep","modified":1,"renderable":0},{"_id":"source/_posts/eip1559/eip1559.jpeg","post":"cl10m9kgj0005duwgrmhiuo26","slug":"eip1559.jpeg","modified":1,"renderable":1},{"_id":"source/_posts/nlp-text-key/supervise.jpeg","post":"cl10m9kgs000hduwgutwermg6","slug":"supervise.jpeg","modified":1,"renderable":1},{"_id":"source/_posts/nlp-text-key/total_method.png","post":"cl10m9kgs000hduwgutwermg6","slug":"total_method.png","modified":1,"renderable":1},{"_id":"source/_posts/text2vec/cbow.png","post":"cl10m9kgu000mduwgdfr33tt9","slug":"cbow.png","modified":1,"renderable":1},{"_id":"source/_posts/text2vec/mod_dbow.png","post":"cl10m9kgu000mduwgdfr33tt9","slug":"mod_dbow.png","modified":1,"renderable":1},{"_id":"source/_posts/text2vec/str_nnlm.png","post":"cl10m9kgu000mduwgdfr33tt9","slug":"str_nnlm.png","modified":1,"renderable":1},{"_id":"source/_posts/knowledge-graph/kg_ner.jpeg","post":"cl10m9kgq000bduwgpyyazjba","slug":"kg_ner.jpeg","modified":1,"renderable":1},{"_id":"source/_posts/knowledge-graph/kg_ontology.jpeg","post":"cl10m9kgq000bduwgpyyazjba","slug":"kg_ontology.jpeg","modified":1,"renderable":1},{"_id":"source/_posts/knowledge-graph/kg_pic.jpeg","post":"cl10m9kgq000bduwgpyyazjba","slug":"kg_pic.jpeg","modified":1,"renderable":1},{"_id":"source/_posts/knowledge-graph/kg_re.jpeg","post":"cl10m9kgq000bduwgpyyazjba","slug":"kg_re.jpeg","modified":1,"renderable":1},{"_id":"source/_posts/knowledge-graph/kg_tech.png","slug":"kg_tech.png","post":"cl10m9kgq000bduwgpyyazjba","modified":1,"renderable":0},{"_id":"source/_posts/knowledge-graph/kg_tech_stage.png","slug":"kg_tech_stage.png","post":"cl10m9kgq000bduwgpyyazjba","modified":1,"renderable":0},{"_id":"source/_posts/knowledge-graph/kg_tuili.jpeg","post":"cl10m9kgq000bduwgpyyazjba","slug":"kg_tuili.jpeg","modified":1,"renderable":1},{"_id":"source/_posts/knowledge-graph/neo4j.png","slug":"neo4j.png","post":"cl10m9kgq000bduwgpyyazjba","modified":1,"renderable":0},{"_id":"source/_posts/context-recalg/alg_antiindex.jpeg","post":"cl10m9kgg0002duwg0vrbpkep","slug":"alg_antiindex.jpeg","modified":1,"renderable":1},{"_id":"source/_posts/context-recalg/alg_doc2vec.jpeg","post":"cl10m9kgg0002duwg0vrbpkep","slug":"alg_doc2vec.jpeg","modified":1,"renderable":1},{"_id":"source/_posts/context-recalg/alg_netflix.jpeg","post":"cl10m9kgg0002duwg0vrbpkep","slug":"alg_netflix.jpeg","modified":1,"renderable":1},{"_id":"source/_posts/context-recalg/alg_resis.jpeg","post":"cl10m9kgg0002duwg0vrbpkep","slug":"alg_resis.jpeg","modified":1,"renderable":1},{"_id":"source/_posts/context-recalg/alg_struc.jpeg","post":"cl10m9kgg0002duwg0vrbpkep","slug":"alg_struc.jpeg","modified":1,"renderable":1},{"_id":"source/_posts/context-recalg/alg_va.jpeg","post":"cl10m9kgg0002duwg0vrbpkep","slug":"alg_va.jpeg","modified":1,"renderable":1},{"_id":"source/_posts/context-recalg/alg_word2vec.png","post":"cl10m9kgg0002duwg0vrbpkep","slug":"alg_word2vec.png","modified":1,"renderable":1},{"_id":"source/_posts/context-recalg/tag_tree.png","post":"cl10m9kgg0002duwg0vrbpkep","slug":"tag_tree.png","modified":1,"renderable":1}],"PostCategory":[{"post_id":"cl10m9kgc0001duwgmjmey3xh","category_id":"cl10m9kgi0003duwgtemtit2p","_id":"cl10m9kgr000cduwg9a4o1uea"},{"post_id":"cl10m9kgg0002duwg0vrbpkep","category_id":"cl10m9kgp0008duwgm5onissj","_id":"cl10m9kgt000jduwg8g6oar9c"},{"post_id":"cl10m9kgj0005duwgrmhiuo26","category_id":"cl10m9kgr000dduwgt1s5av3o","_id":"cl10m9kgw000pduwgpc2u33fd"},{"post_id":"cl10m9kgs000hduwgutwermg6","category_id":"cl10m9kgp0008duwgm5onissj","_id":"cl10m9kgx000rduwgl8m9ydb2"},{"post_id":"cl10m9kgu000mduwgdfr33tt9","category_id":"cl10m9kgp0008duwgm5onissj","_id":"cl10m9kgx000tduwg24ndd3mm"},{"post_id":"cl10m9kgp000aduwgeyxcvwo1","category_id":"cl10m9kgr000dduwgt1s5av3o","_id":"cl10m9kgy000wduwg0dxqo50v"},{"post_id":"cl10m9kgq000bduwgpyyazjba","category_id":"cl10m9kgp0008duwgm5onissj","_id":"cl10m9kgz0011duwga5uevet0"},{"post_id":"cl10m9kgq000bduwgpyyazjba","category_id":"cl10m9kgx000sduwg2uxgle4s","_id":"cl10m9kh00015duwgtou4env7"},{"post_id":"cl10m9kgr000fduwgav57vcs2","category_id":"cl10m9kgp0008duwgm5onissj","_id":"cl10m9kh00017duwg8inmm2jj"},{"post_id":"cl10m9kgr000fduwgav57vcs2","category_id":"cl10m9kgy000xduwgerlqoqr1","_id":"cl10m9kh00019duwg5q1ra9d4"},{"post_id":"cl10m9kgo0007duwg77cphi94","category_id":"cl10m9kgp0008duwgm5onissj","_id":"cl10m9kh0001aduwgcoxcwntu"},{"post_id":"cl10m9kgo0007duwg77cphi94","category_id":"cl10m9kgx000sduwg2uxgle4s","_id":"cl10m9kh0001bduwg0673lpw5"},{"post_id":"cl10m9kgv000nduwgxi4qbf5v","category_id":"cl10m9kh00016duwg3gx75hj6","_id":"cl10m9kh1001eduwgbx1nzu6y"}],"PostTag":[{"post_id":"cl10m9kgc0001duwgmjmey3xh","tag_id":"cl10m9kgj0004duwgwi3femsf","_id":"cl10m9kgs000gduwgierfulqc"},{"post_id":"cl10m9kgc0001duwgmjmey3xh","tag_id":"cl10m9kgp0009duwgzuuaxmat","_id":"cl10m9kgt000iduwgajo6qto1"},{"post_id":"cl10m9kgg0002duwg0vrbpkep","tag_id":"cl10m9kgr000eduwgjc4i3n47","_id":"cl10m9kgy000vduwg50t5qupk"},{"post_id":"cl10m9kgg0002duwg0vrbpkep","tag_id":"cl10m9kgt000lduwgsi91f77s","_id":"cl10m9kgz000yduwg7vejzlue"},{"post_id":"cl10m9kgg0002duwg0vrbpkep","tag_id":"cl10m9kgw000qduwgnf9wbb2v","_id":"cl10m9kgz0010duwg2xkixoh0"},{"post_id":"cl10m9kgj0005duwgrmhiuo26","tag_id":"cl10m9kgx000uduwgmkc9ihq5","_id":"cl10m9kgz0012duwgvn4h2t57"},{"post_id":"cl10m9kgo0007duwg77cphi94","tag_id":"cl10m9kgz000zduwgrqwoy576","_id":"cl10m9kh1001dduwgbepgj05o"},{"post_id":"cl10m9kgo0007duwg77cphi94","tag_id":"cl10m9kgz0014duwgzankfe0h","_id":"cl10m9kh1001fduwgpa1ilmfm"},{"post_id":"cl10m9kgo0007duwg77cphi94","tag_id":"cl10m9kh00018duwgeml6mr3q","_id":"cl10m9kh1001hduwg1jtejxk5"},{"post_id":"cl10m9kgp000aduwgeyxcvwo1","tag_id":"cl10m9kh0001cduwg8dkspy9u","_id":"cl10m9kh1001iduwg2hjxynwu"},{"post_id":"cl10m9kgq000bduwgpyyazjba","tag_id":"cl10m9kgz000zduwgrqwoy576","_id":"cl10m9kh2001nduwgq9ifzalu"},{"post_id":"cl10m9kgq000bduwgpyyazjba","tag_id":"cl10m9kh1001jduwgwcsdwmv7","_id":"cl10m9kh2001oduwg703aicus"},{"post_id":"cl10m9kgq000bduwgpyyazjba","tag_id":"cl10m9kh2001kduwgqz1zp7x0","_id":"cl10m9kh3001qduwgu6belsjy"},{"post_id":"cl10m9kgq000bduwgpyyazjba","tag_id":"cl10m9kh2001lduwg2kgbk7oe","_id":"cl10m9kh3001rduwgzmmw8wjw"},{"post_id":"cl10m9kgs000hduwgutwermg6","tag_id":"cl10m9kgw000qduwgnf9wbb2v","_id":"cl10m9kh3001tduwgafqoof4f"},{"post_id":"cl10m9kgu000mduwgdfr33tt9","tag_id":"cl10m9kgr000eduwgjc4i3n47","_id":"cl10m9kh3001vduwg2nosuvx7"},{"post_id":"cl10m9kgu000mduwgdfr33tt9","tag_id":"cl10m9kgw000qduwgnf9wbb2v","_id":"cl10m9kh3001wduwghpvurxc6"},{"post_id":"cl10m9kgu000mduwgdfr33tt9","tag_id":"cl10m9kh3001sduwglyy3pyu6","_id":"cl10m9kh3001xduwg344gr5pu"},{"post_id":"cl10m9kgv000nduwgxi4qbf5v","tag_id":"cl10m9kh3001uduwg1pc4x7le","_id":"cl10m9kh4001yduwgxkytgnz5"}],"Tag":[{"name":"数学","_id":"cl10m9kgj0004duwgwi3femsf"},{"name":"极限","_id":"cl10m9kgp0009duwgzuuaxmat"},{"name":"内容推荐","_id":"cl10m9kgr000eduwgjc4i3n47"},{"name":"向量化表示","_id":"cl10m9kgt000lduwgsi91f77s"},{"name":"NLP","_id":"cl10m9kgw000qduwgnf9wbb2v"},{"name":"以太坊","_id":"cl10m9kgx000uduwgmkc9ihq5"},{"name":"知识图谱","_id":"cl10m9kgz000zduwgrqwoy576"},{"name":"NER","_id":"cl10m9kgz0014duwgzankfe0h"},{"name":"命名实体识别","_id":"cl10m9kh00018duwgeml6mr3q"},{"name":"mark","_id":"cl10m9kh0001cduwg8dkspy9u"},{"name":"信息抽取","_id":"cl10m9kh1001jduwgwcsdwmv7"},{"name":"知识融合","_id":"cl10m9kh2001kduwgqz1zp7x0"},{"name":"知识加工","_id":"cl10m9kh2001lduwg2kgbk7oe"},{"name":"文本向量化","_id":"cl10m9kh3001sduwglyy3pyu6"},{"name":"matlab","_id":"cl10m9kh3001uduwg1pc4x7le"}]}}